[{"id":null,"role":"user","parts":[{"id":null,"text":"You’re Pixel, an expert assistant in building beautiful Flutter UI screens. Your advantage lies in having access to a UIKit with components and screens in the user's chosen style that are tested to be pixel-perfect.\n\nYou identify required UIKit elements based on users instructions, and use them in users projects to meet their requirements. You only assist with creating the UI and don't engage in building functionality for the user (like integrating APIs, Firebase etc).\n\nGenerate all the UI elements beautifully, following the theme and style of the components and screens in the UIKIT. Generously request more than required template files to view so you fully understand the UIKit style and theme and implement similarly in users codebase. If no components/screens is matching directly, try you best to create a great looking UI meeting the users style. You are allowed to think deeply and take as much time as you need to make sure the end result is world-class.\n\n- For placeholder images, strictly use https://picsum.photos/{width}/{height}\n\nYour normal prose and thoughts won't be displayed to the user, so feel free to take your time to think. \n\nMake sure that the user sees the screen once the code is run. To ensure this, make sure to edit the entry point of the app (usually main.dart) to point to the screen. There is a programatic client supporting below actions with their pre-defined formats that you shall use to perform changes into the users codebase and/or share information. The client also automatically runs or refreshes their app once the changes are made.\n\n1. To make code edits in the users codebase:\n<<<PIXEL_FILE_PATH>>>\nlib/Screens/image_generator_screen.dart **// IMPORTANT: This is an EXAMPLE path. You MUST replace this with the correct, relevant file path derived from the user's request (e.g., `lib/screens/login_screen.dart` if the user asks for a login screen).**\n<<<PIXEL_CODE_START>>>\nentire file code\n<<<PIXEL_CODE_END>>>\nMake sure the file path is relative and the entire code to be replaced in file is included.\n\n2. To install pub dependencies:\n<<<PIXEL_PUB_INSTALL_START>>>\ndependency_name\n<<<PIXEL_PUB_INSTALL_END>>>\n\nOnly include a single dependency at a time, for instance:\n<<<PIXEL_PUB_INSTALL_START>>>\ngoogle_fonts\n<<<PIXEL_PUB_INSTALL_END>>>\n\n3. To relay important information, questions or clarifications to user:\n<<<PIXEL_USER_INFORM_START>>>\nyour message to be shown to user\n<<<PIXEL_USER_INFORM_END>>>\n\n4. To request viewing a single UI template file\n<<<PIXEL_VIEW_TEMPLATE_FILE_START>>>\npath of file\n<<<PIXEL_VIEW_TEMPLATE_FILE_END>>>\nTo view multiple files, add multiple such statements. Stop after you've requested all the files, the client will provide you the files in the next message.\n\n\nAll of these formats are parsed using Regex and programatically executed at the users end, so you should strictly stick to the above formats."}]},{"id":null,"role":"user","parts":[{"id":null,"text":""},{"id":null,"text":"User Instructions: build a home screen for this project aliging with this projects theme of topic and color"},{"id":"codebase","text":"Here is the current state of the user’s codebase:\n\n--- Project Context (19 files read) ---\n\n// File: pubspec.yaml\n```yaml\nname: ai_travel_app_ui_kit\r\ndescription: \"A new Flutter project.\"\r\n# The following line prevents the package from being accidentally published to\r\n# pub.dev using `flutter pub publish`. This is preferred for private packages.\r\npublish_to: 'none' # Remove this line if you wish to publish to pub.dev\r\n\r\n# The following defines the version and build number for your application.\r\n# A version number is three numbers separated by dots, like 1.2.43\r\n# followed by an optional build number separated by a +.\r\n# Both the version and the builder number may be overridden in flutter\r\n# build by specifying --build-name and --build-number, respectively.\r\n# In Android, build-name is used as versionName while build-number used as versionCode.\r\n# Read more about Android versioning at https://developer.android.com/studio/publish/versioning\r\n# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.\r\n# Read more about iOS versioning at\r\n# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html\r\n# In Windows, build-name is used as the major, minor, and patch parts\r\n# of the product and file versions while build-number is used as the build suffix.\r\nversion: 1.0.0+1\r\n\r\nenvironment:\r\n  sdk: ^3.7.2\r\n\r\n# Dependencies specify other packages that your package needs in order to work.\r\n# To automatically upgrade your package dependencies to the latest versions\r\n# consider running `flutter pub upgrade --major-versions`. Alternatively,\r\n# dependencies can be manually updated by changing the version numbers below to\r\n# the latest version available on pub.dev. To see which dependencies have newer\r\n# versions available, run `flutter pub outdated`.\r\ndependencies:\r\n  flutter:\r\n    sdk: flutter\r\n\r\n  # The following adds the Cupertino Icons font to your application.\r\n  # Use with the CupertinoIcons class for iOS style icons.\r\n  cupertino_icons: ^1.0.8\r\n  pixel_preview: ^0.0.4\r\n  font_awesome_flutter: ^10.8.0\r\n  google_fonts: ^6.2.1\r\n  flutter_svg: ^2.1.0\r\n\r\ndev_dependencies:\r\n  flutter_test:\r\n    sdk: flutter\r\n\r\n  # The \"flutter_lints\" package below contains a set of recommended lints to\r\n  # encourage good coding practices. The lint set provided by the package is\r\n  # activated in the `analysis_options.yaml` file located at the root of your\r\n  # package. See that file for information about deactivating specific lint\r\n  # rules and activating additional ones.\r\n  flutter_lints: ^5.0.0\r\n\r\n# For information on the generic Dart part of this file, see the\r\n# following page: https://dart.dev/tools/pub/pubspec\r\n\r\n# The following section is specific to Flutter packages.\r\nflutter:\r\n\r\n  # The following line ensures that the Material Icons font is\r\n  # included with your application, so that you can use the icons in\r\n  # the material Icons class.\r\n  uses-material-design: true\r\n\r\n  # To add assets to your application, add an assets section, like this:\r\n  # assets:\r\n  #   - images/a_dot_burr.jpeg\r\n  #   - images/a_dot_ham.jpeg\r\n\r\n  # An image asset can refer to one or more resolution-specific \"variants\", see\r\n  # https://flutter.dev/to/resolution-aware-images\r\n\r\n  # For details regarding adding assets from package dependencies, see\r\n  # https://flutter.dev/to/asset-from-package\r\n\r\n  # To add custom fonts to your application, add a fonts section here,\r\n  # in this \"flutter\" section. Each entry in this list should have a\r\n  # \"family\" key with the font family name, and a \"fonts\" key with a\r\n  # list giving the asset and other descriptors for the font. For\r\n  # example:\r\n  # fonts:\r\n  #   - family: Schyler\r\n  #     fonts:\r\n  #       - asset: fonts/Schyler-Regular.ttf\r\n  #       - asset: fonts/Schyler-Italic.ttf\r\n  #         style: italic\r\n  #   - family: Trajan Pro\r\n  #     fonts:\r\n  #       - asset: fonts/TrajanPro.ttf\r\n  #       - asset: fonts/TrajanPro_Bold.ttf\r\n  #         weight: 700\r\n  #\r\n  # For details regarding fonts from package dependencies,\r\n  # see https://flutter.dev/to/font-from-package\n```\n\n// File: lib\\components\\buttons\\primary_text_button.dart\n```dart\n/*\r\nA versatile primary button widget that spans the full width of its container with customizable text and state handling.\r\nCommon use cases:\r\n1. Form submission buttons\r\n2. Primary action buttons in workflows\r\n3. Confirmation dialogs\r\n4. Call-to-action buttons in key user flows\r\n*/\r\n\r\nimport 'package:flutter/material.dart';\r\n\r\nclass PrimaryTextButton extends StatelessWidget {\r\n  final Function()? onPressed;\r\n  final String text;\r\n  const PrimaryTextButton({\r\n    super.key,\r\n    this.text = \"Submit\",\r\n    this.onPressed = _defaultOnPressed,\r\n  });\r\n  static void _defaultOnPressed() {}\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return SizedBox(\r\n      width: double.infinity,\r\n      child: FilledButton(\r\n        onPressed: onPressed,\r\n        style: FilledButton.styleFrom(\r\n          /// The button should be rounded. Don't change the borderRadius.\r\n          shape: RoundedRectangleBorder(\r\n            borderRadius: BorderRadius.circular(60),\r\n          ),\r\n          padding: const EdgeInsets.symmetric(vertical: 24, horizontal: 16),\r\n        ),\r\n        child: Text(\r\n          text,\r\n          style: const TextStyle(fontSize: 16, fontWeight: FontWeight.bold),\r\n        ),\r\n      ),\r\n    );\r\n  }\r\n}\n```\n\n// File: lib\\components\\buttons\\social_auth_button.dart\n```dart\n/*\r\nA comprehensive social authentication button widget that supports multiple providers(Apple, Google, Facebook) with brand-specific styling.\r\n\r\nCommon use cases:\r\n1. Social login/signup flows\r\n2. Account linking interfaces\r\n3. Social sharing features\r\n4. OAuth authentication implementations\r\n*/\r\n\r\nimport 'package:flutter/material.dart';\r\nimport 'package:font_awesome_flutter/font_awesome_flutter.dart';\r\n\r\n// Enum defining the types of buttons supported\r\nenum ButtonType { apple, google, facebook }\r\n\r\nclass SocialAuthButton extends StatelessWidget {\r\n  final ButtonType type;\r\n  final VoidCallback onPressed;\r\n  final String? customText; // Optional text override\r\n\r\n  const SocialAuthButton({\r\n    super.key,\r\n    required this.type,\r\n    required this.onPressed,\r\n    this.customText,\r\n  });\r\n\r\n  factory SocialAuthButton.apple({Key? key, required VoidCallback onPressed}) =>\r\n      SocialAuthButton(key: key, type: ButtonType.apple, onPressed: onPressed);\r\n\r\n  factory SocialAuthButton.google({\r\n    Key? key,\r\n    required VoidCallback onPressed,\r\n  }) =>\r\n      SocialAuthButton(key: key, type: ButtonType.google, onPressed: onPressed);\r\n\r\n  factory SocialAuthButton.facebook({\r\n    Key? key,\r\n    required VoidCallback onPressed,\r\n  }) => SocialAuthButton(\r\n    key: key,\r\n    type: ButtonType.facebook,\r\n    onPressed: onPressed,\r\n  );\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return LayoutBuilder(\r\n      builder: (context, constraints) {\r\n        return SizedBox(\r\n          width: double.infinity,\r\n\r\n          child: FilledButton(\r\n            onPressed: onPressed,\r\n\r\n            style: FilledButton.styleFrom(\r\n              side:\r\n                  type == ButtonType.google\r\n                      ? BorderSide(color: Colors.grey.shade300, width: 1)\r\n                      : BorderSide.none,\r\n\r\n              /// The button should be rounded. Don't change the borderRadius.\r\n              shape: RoundedRectangleBorder(\r\n                borderRadius: BorderRadius.circular(60),\r\n              ),\r\n              padding: EdgeInsets.symmetric(vertical: 24, horizontal: 16),\r\n              backgroundColor: _getButtonColor(),\r\n              foregroundColor: _getTextColor(),\r\n            ),\r\n            child: Stack(\r\n              alignment: Alignment.center,\r\n              children: [\r\n                Positioned(left: 0, child: _getIcon(24.0)),\r\n                SizedBox(\r\n                  width: double.infinity,\r\n                  child: Text(\r\n                    // Use custom text first, then provider name, then default\r\n                    customText ?? 'Continue with ${_getProviderName()}',\r\n                    style: const TextStyle(\r\n                      fontSize: 16.0,\r\n                      fontWeight: FontWeight.w500,\r\n                    ),\r\n                    textAlign: TextAlign.center,\r\n                  ),\r\n                ),\r\n              ],\r\n            ),\r\n          ),\r\n        );\r\n      },\r\n    );\r\n  }\r\n\r\n  // Only relevant for social buttons\r\n  String _getProviderName() {\r\n    switch (type) {\r\n      case ButtonType.apple:\r\n        return 'Apple';\r\n      case ButtonType.google:\r\n        return 'Google';\r\n      case ButtonType.facebook:\r\n        return 'Facebook';\r\n    }\r\n  }\r\n\r\n  Color _getButtonColor() {\r\n    switch (type) {\r\n      case ButtonType.apple:\r\n        return Colors.black;\r\n      case ButtonType.google:\r\n        // Using white for Google button background as is common\r\n        return Colors.white;\r\n      case ButtonType.facebook:\r\n        return const Color(0xFF1877F2); // Facebook blue\r\n    }\r\n  }\r\n\r\n  Color _getTextColor() {\r\n    switch (type) {\r\n      case ButtonType.apple:\r\n      case ButtonType.facebook:\r\n        return Colors.white;\r\n      case ButtonType.google:\r\n        return Colors.black87;\r\n    }\r\n  }\r\n\r\n  // Returns the icon widget or an empty box\r\n  Widget _getIcon(double size) {\r\n    switch (type) {\r\n      case ButtonType.apple:\r\n        // Using FontAwesome for consistency, but could use Icons.apple\r\n        return FaIcon(\r\n          FontAwesomeIcons.apple,\r\n          size: size,\r\n          color: _getTextColor(),\r\n        );\r\n      case ButtonType.google:\r\n        return Image.network(\r\n          'https://img.icons8.com/?size=100&id=17949&format=png',\r\n          height: size,\r\n          width: size,\r\n        );\r\n      case ButtonType.facebook:\r\n        // Using FontAwesome's Facebook icon\r\n        return FaIcon(\r\n          FontAwesomeIcons.facebookF,\r\n          size: size,\r\n          color: _getTextColor(),\r\n        ); // Use F logo\r\n    }\r\n  }\r\n}\n```\n\n// File: lib\\main.dart\n```dart\nimport 'package:ai_travel_app_ui_kit/screens/date_timeline_screen.dart'; // Import the new screen\nimport 'package:flutter/material.dart';\nimport 'package:pixel_preview/pixel_preview.dart';\nimport 'package:google_fonts/google_fonts.dart'; // Import google_fonts\nimport 'package:ai_travel_app_ui_kit/screens/book_hotel_screen.dart';\nimport 'package:ai_travel_app_ui_kit/placeholder.dart';\nimport 'package:ai_travel_app_ui_kit/screens/home_screen.dart'; // Import the new home screen\nimport 'package:ai_travel_app_ui_kit/screens/explore_hotels_screen.dart'; // Import the new explore hotels screen\n\nimport 'package:ai_travel_app_ui_kit/screens/hotel_filter_screen.dart'; // Import the new HotelFilterScreen\nimport 'package:ai_travel_app_ui_kit/screens/hotel_details_screen.dart'; // Import the new HotelDetailsScreen\nimport 'package:ai_travel_app_ui_kit/screens/reservation_details_screen.dart'; // Import the new ReservationDetailsScreen\nimport 'package:ai_travel_app_ui_kit/screens/order_status_screen.dart'; // Import the new OrderStatusScreen\nimport 'package:ai_travel_app_ui_kit/screens/profile_screen.dart'; // Import the new ProfileScreen\nimport 'package:ai_travel_app_ui_kit/screens/subscription_screen.dart'; // Import the new SubscriptionScreen\nimport 'package:ai_travel_app_ui_kit/screens/settings_screen.dart'; // Import the new SettingsScreen\n\nvoid main() {\n  runApp(const MyApp());\n}\n\nclass MyApp extends StatelessWidget {\n  const MyApp({super.key});\n\n  @override\n  Widget build(BuildContext context) {\n    const Color primaryColor = Color(0xFF7356FF); // User's chosen primary color\n    return MaterialApp(\n      debugShowCheckedModeBanner: false,\n      title: 'Starter App', // Updated title\n      theme: ThemeData(\n        primaryColor: primaryColor,\n        colorScheme: ColorScheme.fromSeed(\n          seedColor: primaryColor,\n          brightness: ThemeData.light().brightness,\n          onPrimary: Colors.white,\n          surface: Colors.white,\n        ),\n        appBarTheme: const AppBarTheme(\n          backgroundColor: Colors.white,\n          elevation: 0,\n          iconTheme: IconThemeData(color: primaryColor),\n        ),\n        elevatedButtonTheme: ElevatedButtonThemeData(\n          style: ElevatedButton.styleFrom(\n            backgroundColor: primaryColor,\n            foregroundColor: Colors.white,\n          ),\n        ),\n        textButtonTheme: TextButtonThemeData(\n          style: TextButton.styleFrom(foregroundColor: primaryColor),\n        ),\n        outlinedButtonTheme: OutlinedButtonThemeData(\n          style: OutlinedButton.styleFrom(\n            foregroundColor: primaryColor,\n            side: const BorderSide(color: primaryColor),\n          ),\n        ),\n        floatingActionButtonTheme: FloatingActionButtonThemeData(\n          backgroundColor: primaryColor,\n          foregroundColor: Colors.white,\n        ),\n        filledButtonTheme: FilledButtonThemeData(\n          style: FilledButton.styleFrom(\n            backgroundColor: primaryColor,\n            foregroundColor: Colors.white,\n          ),\n        ),\n        textTheme:\n            GoogleFonts.plusJakartaSansTextTheme(), // Apply user's text theme\n      ),\n      home: const PixelPreview(\n        presets: ScreenPresets(),\n        child: const HomeScreen(), // Set HomeScreen as the home screen\n      ),\n    );\n  }\n}\n```\n\n// File: lib\\placeholder.dart\n```dart\nimport 'package:flutter/material.dart';\n\nclass PlaceHolderScreen extends StatelessWidget {\n  const PlaceHolderScreen({super.key});\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      body: Center(child: const Text(\"Hi! Let's build something awesome\")),\n    );\n  }\n}\n```\n\n// File: lib\\screens\\ai_chat_section.dart\n```dart\nimport 'package:flutter/material.dart';\n\nclass AIChatSection extends StatefulWidget {\n  const AIChatSection({super.key});\n\n  @override\n  State<AIChatSection> createState() => _AIChatSectionState();\n}\n\nclass _AIChatSectionState extends State<AIChatSection> {\n  @override\n  Widget build(BuildContext context) {\n    final TextTheme textTheme = Theme.of(context).textTheme;\n    final Color primaryColor = Theme.of(context).primaryColor;\n    final ColorScheme colorScheme = Theme.of(context).colorScheme;\n\n    return Scaffold(\n      backgroundColor: Colors.grey[100], // Light grey background\n      appBar: AppBar(\n        backgroundColor: Colors.grey[100], // Match scaffold background\n        elevation: 0,\n        leading: IconButton(\n          icon: Icon(Icons.arrow_back, color: primaryColor, size: 20),\n          onPressed: () {\n            Navigator.of(context).pop();\n          },\n        ),\n        title: Text(\n          'App AI',\n          style: textTheme.titleLarge?.copyWith(\n            fontWeight: FontWeight.bold,\n            color: Colors.grey[800],\n            fontSize: 18,\n          ),\n        ),\n        centerTitle: true,\n        actions: [\n          IconButton(\n            icon: Icon(Icons.calendar_month, color: primaryColor, size: 20),\n            onPressed: () {\n              // TODO: Implement calendar action\n            },\n          ),\n          IconButton(\n            icon: Icon(Icons.more_vert, color: primaryColor, size: 20),\n            onPressed: () {\n              // TODO: Implement more options action\n            },\n          ),\n          const SizedBox(width: 8.0),\n        ],\n      ),\n      body: Column(\n        children: [\n          Expanded(\n            child: ListView(\n              reverse: true, // Make messages start from bottom\n              padding: const EdgeInsets.only(left: 24.0, right: 24.0, top: 24.0, bottom: 24.0), // Added bottom padding here\n              children:\n                  [\n                    // Display messages in reverse order of how they appear in the image\n                    // Latest message (from user) first, then AI's response, then audio.\n                    _UserMessageBubble(\n                      text: 'Suggest me some hotels with good rating minimum 4 star, under 20,000 BDT Budget, Wifi Available, Complimentary Breakfast Added, Location will be near Mirabazar Centar.',\n                      textTheme: textTheme,\n                      primaryColor: primaryColor,\n                    ),\n                    const SizedBox(height: 16.0),\n                    _AIMessageBubble(\n                      text: 'Got it! Searching for hotels in Sylhet from March 20 for three nights. What\\'s your budget range?',\n                      textTheme: textTheme,\n                      colorScheme: colorScheme,\n                    ),\n                    const SizedBox(height: 16.0),\n                    // Audio message player (will be at the top of the list, thus bottom of screen)\n                    Align(\n                      alignment: Alignment.centerRight,\n                      child: _AudioMessagePlayer(primaryColor: primaryColor),\n                    ),\n                  ].reversed.toList(), // Reverse the list to match image order from top-to-bottom\n            ),\n          ),\n          // Message input bar at the bottom\n          Container(\n            padding: const EdgeInsets.symmetric(horizontal: 16.0, vertical: 12.0),\n            color: colorScheme.surface,\n            child: Row(\n              children: [\n                IconButton(\n                  icon: Icon(Icons.add, color: Colors.grey[600]),\n                  onPressed: () {\n                    // TODO: Implement attachment action\n                  },\n                ),\n                const SizedBox(width: 8.0),\n                Expanded(\n                  child: TextField(\n                    decoration: InputDecoration(\n                      hintText: 'Message...',\n                      hintStyle: textTheme.bodyLarge?.copyWith(color: Colors.grey[500]),\n                      filled: true,\n                      fillColor: Colors.grey[200],\n                      border: OutlineInputBorder(\n                        borderRadius: BorderRadius.circular(25.0),\n                        borderSide: BorderSide.none,\n                      ),\n                      contentPadding: const EdgeInsets.only(left: 16.0, top: 12.0, bottom: 12.0),\n                      suffixIcon: Padding(\n                        padding: const EdgeInsets.only(right: 16.0),\n                        child: Icon(Icons.mic, color: Colors.grey[600]),\n                      ),\n                    ),\n                    style: textTheme.bodyLarge?.copyWith(color: Colors.grey[850]),\n                  ),\n                ),\n                const SizedBox(width: 8.0),\n                Container(\n                  decoration: BoxDecoration(\n                    color: primaryColor,\n                    shape: BoxShape.circle,\n                  ),\n                  child: IconButton(\n                    icon: Icon(Icons.send, color: colorScheme.onPrimary),\n                    onPressed: () {\n                      // TODO: Implement send message action\n                    },\n                  ),\n                ),\n              ],\n            ),\n          ),\n        ],\n      ),\n    );\n  }\n}\n\nclass _AudioMessagePlayer extends StatefulWidget {\n  final Color primaryColor;\n  const _AudioMessagePlayer({required this.primaryColor});\n\n  @override\n  State<_AudioMessagePlayer> createState() => _AudioMessagePlayerState();\n}\n\nclass _AudioMessagePlayerState extends State<_AudioMessagePlayer> {\n  double _currentSliderValue = 0.5; // Initial value for the slider\n  bool _isPlaying = false; // State for play/pause button\n\n  @override\n  Widget build(BuildContext context) {\n    return Container(\n      width: 200,\n      padding: const EdgeInsets.symmetric(horizontal: 12.0, vertical: 8.0),\n      decoration: BoxDecoration(\n        color: widget.primaryColor, // Use primary color for audio message background\n        borderRadius: BorderRadius.circular(20.0),\n      ),\n      child: Row(\n        mainAxisSize: MainAxisSize.min,\n        children: [\n          IconButton(\n            padding: EdgeInsets.zero, // Remove default IconButton padding\n            constraints: const BoxConstraints(), // Remove default IconButton constraints\n            icon: Icon(\n              _isPlaying ? Icons.pause : Icons.play_arrow,\n              color: Colors.white,\n              size: 24,\n            ),\n            onPressed: () {\n              setState(() {\n                _isPlaying = !_isPlaying; // Toggle play/pause state\n              });\n              // TODO: Implement actual audio play/pause logic\n              print('Audio is now ${_isPlaying ? 'playing' : 'paused'}');\n            },\n          ),\n          const SizedBox(width: 8.0),\n          Expanded(\n            child: SliderTheme(\n              data: SliderTheme.of(context).copyWith(\n                trackHeight: 2.0,\n                thumbShape: const RoundSliderThumbShape(enabledThumbRadius: 6.0),\n                overlayShape: const RoundSliderOverlayShape(overlayRadius: 10.0),\n                activeTrackColor: Colors.white, // White for active part\n                inactiveTrackColor: Colors.white.withOpacity(0.5), // Lighter white for inactive\n                thumbColor: Colors.white, // White thumb\n                overlayColor: Colors.white.withOpacity(0.2),\n              ),\n              child: Slider(\n                value: _currentSliderValue,\n                min: 0.0,\n                max: 1.0,\n                onChanged: (double value) {\n                  setState(() {\n                    _currentSliderValue = value;\n                  });\n                },\n              ),\n            ),\n          ),\n          const SizedBox(width: 8.0),\n          Text(\n            '0:21',\n            style: Theme.of(context).textTheme.bodySmall?.copyWith(color: Colors.white),\n          ),\n        ],\n      ),\n    );\n  }\n}\n\nclass _AIMessageBubble extends StatelessWidget {\n  final String text;\n  final TextTheme textTheme;\n  final ColorScheme colorScheme;\n\n  const _AIMessageBubble({\n    required this.text,\n    required this.textTheme,\n    required this.colorScheme,\n  });\n\n  @override\n  Widget build(BuildContext context) {\n    return Row(\n      crossAxisAlignment: CrossAxisAlignment.start,\n      children: [\n        CircleAvatar(\n          radius: 16,\n          backgroundColor: Colors.grey[300],\n          child: Icon(Icons.person, color: Colors.grey[600], size: 20),\n        ),\n        const SizedBox(width: 8.0),\n        Expanded(\n          child: Container(\n            padding: const EdgeInsets.all(12.0),\n            decoration: BoxDecoration(\n              color: colorScheme.surface, // White background for AI message\n              borderRadius: BorderRadius.only(\n                topLeft: Radius.circular(16.0),\n                topRight: Radius.circular(16.0),\n                bottomRight: Radius.circular(16.0),\n                bottomLeft: Radius.circular(4.0),\n              ),\n            ),\n            child: Text(\n              text,\n              style: textTheme.bodyMedium?.copyWith(color: Colors.grey[800]),\n            ),\n          ),\n        ),\n      ],\n    );\n  }\n}\n\nclass _UserMessageBubble extends StatelessWidget {\n  final String text;\n  final TextTheme textTheme;\n  final Color primaryColor;\n\n  const _UserMessageBubble({\n    required this.text,\n    required this.textTheme,\n    required this.primaryColor,\n  });\n\n  @override\n  Widget build(BuildContext context) {\n    return Align(\n      alignment: Alignment.centerRight,\n      child: Container(\n        margin: const EdgeInsets.only(left: 50.0),\n        padding: const EdgeInsets.all(12.0),\n        decoration: BoxDecoration(\n          color: primaryColor, // Use primary color for user message background\n          borderRadius: BorderRadius.only(\n            topLeft: Radius.circular(16.0),\n            topRight: Radius.circular(16.0),\n            bottomLeft: Radius.circular(16.0),\n            bottomRight: Radius.circular(4.0),\n          ),\n        ),\n        child: Text(\n          text,\n          style: textTheme.bodyMedium?.copyWith(color: Colors.white), // White text on primary background\n        ),\n      ),\n    );\n  }\n}\n```\n\n// File: lib\\screens\\app_ai_screen.dart\n```dart\nimport 'package:flutter/material.dart';\n\nclass AppAIScreen extends StatefulWidget {\n  const AppAIScreen({super.key});\n\n  @override\n  State<AppAIScreen> createState() => _AppAIScreenState();\n}\n\nclass _AppAIScreenState extends State<AppAIScreen> {\n  final Set<String> _selectedSuggestions = {}; // To manage selected chips\n\n  void _toggleSuggestion(String text) {\n    setState(() {\n      if (_selectedSuggestions.contains(text)) {\n        _selectedSuggestions.remove(text);\n      } else {\n        _selectedSuggestions.add(text);\n      }\n      print('Selected suggestions: $_selectedSuggestions');\n    });\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    final TextTheme textTheme = Theme.of(context).textTheme;\n    final Color primaryColor = Theme.of(context).primaryColor;\n    final ColorScheme colorScheme = Theme.of(context).colorScheme;\n\n    return Scaffold(\n      backgroundColor: Colors.grey[100], // Light grey background\n      appBar: AppBar(\n        backgroundColor: Colors.grey[100], // Match scaffold background\n        elevation: 0,\n        leading: IconButton(\n          icon: Icon(\n            Icons.arrow_back,\n            color: primaryColor,\n            size: 20,\n          ), // Back icon with primary color and size 20\n          onPressed: () {\n            Navigator.of(context).pop();\n          },\n        ),\n        title: Text(\n          'App AI',\n          style: textTheme.titleLarge?.copyWith(\n            fontWeight: FontWeight.bold,\n            color: Colors.grey[800],\n            fontSize: 18, // Title font size 18\n          ),\n        ),\n        centerTitle: true,\n        actions: [\n          IconButton(\n            icon: Icon(\n              Icons.calendar_month,\n              color: primaryColor,\n              size: 20,\n            ), // Calendar icon with primary color and size 20\n            onPressed: () {\n              // TODO: Implement calendar action\n            },\n          ),\n          IconButton(\n            icon: Icon(\n              Icons.more_vert,\n              color: primaryColor,\n              size: 20,\n            ), // More icon with primary color and size 20\n            onPressed: () {\n              // TODO: Implement more options action\n            },\n          ),\n          const SizedBox(width: 8.0),\n        ],\n      ),\n      body: Column(\n        children: [\n          Expanded(\n            child: SingleChildScrollView(\n              padding: const EdgeInsets.symmetric(\n                horizontal: 24.0,\n                vertical: 24.0,\n              ),\n              child: Column(\n                crossAxisAlignment:\n                    CrossAxisAlignment\n                        .center, // Center the content horizontally\n                mainAxisAlignment:\n                    MainAxisAlignment\n                        .center, // Center content vertically within available space\n                children: [\n                  SizedBox(height: 150),\n                  Text(\n                    'What can i help with?',\n                    style: textTheme.titleMedium?.copyWith(\n                      fontWeight: FontWeight.w600,\n                      color: Colors.grey[700],\n                    ),\n                    textAlign: TextAlign.center, // Center the text itself\n                  ),\n                  const SizedBox(height: 20.0),\n                  Center(\n                    // Center the Wrap widget (redundant with parent column's CrossAxisAlignment.center if Wrap takes full width, but good for safety)\n                    child: Wrap(\n                      spacing: 8.0, // horizontal spacing\n                      runSpacing: 8.0, // vertical spacing\n                      children: [\n                        _SuggestionChip(\n                          text: 'Trip Planning & Itineraries',\n                          onTap:\n                              () => _toggleSuggestion(\n                                'Trip Planning & Itineraries',\n                              ),\n                          isActive: _selectedSuggestions.contains(\n                            'Trip Planning & Itineraries',\n                          ),\n                          textTheme: textTheme,\n                          primaryColor: primaryColor,\n                        ),\n                        _SuggestionChip(\n                          text: 'Cost Optimization',\n                          onTap: () => _toggleSuggestion('Cost Optimization'),\n                          isActive: _selectedSuggestions.contains(\n                            'Cost Optimization',\n                          ),\n                          textTheme: textTheme,\n                          primaryColor: primaryColor,\n                        ),\n                        _SuggestionChip(\n                          text: 'Filtering System',\n                          onTap: () => _toggleSuggestion('Filtering System'),\n                          isActive: _selectedSuggestions.contains(\n                            'Filtering System',\n                          ),\n                          textTheme: textTheme,\n                          primaryColor: primaryColor,\n                        ),\n                        _SuggestionChip(\n                          text: 'Travel Safety & Security',\n                          onTap:\n                              () =>\n                                  _toggleSuggestion('Travel Safety & Security'),\n                          isActive: _selectedSuggestions.contains(\n                            'Travel Safety & Security',\n                          ),\n                          textTheme: textTheme,\n                          primaryColor: primaryColor,\n                        ),\n                        _SuggestionChip(\n                          text: 'Eco-Friendly Travel',\n                          onTap: () => _toggleSuggestion('Eco-Friendly Travel'),\n                          isActive: _selectedSuggestions.contains(\n                            'Eco-Friendly Travel',\n                          ),\n                          textTheme: textTheme,\n                          primaryColor: primaryColor,\n                        ),\n                        _SuggestionChip(\n                          text: 'AI-Powered Travel Reviews',\n                          onTap:\n                              () => _toggleSuggestion(\n                                'AI-Powered Travel Reviews',\n                              ),\n                          isActive: _selectedSuggestions.contains(\n                            'AI-Powered Travel Reviews',\n                          ),\n                          textTheme: textTheme,\n                          primaryColor: primaryColor,\n                        ),\n                        _SuggestionChip(\n                          text: 'More',\n                          onTap: () => _toggleSuggestion('More'),\n                          isActive: _selectedSuggestions.contains('More'),\n                          textTheme: textTheme,\n                          primaryColor: primaryColor,\n                        ),\n                      ],\n                    ),\n                  ),\n                  // TODO: Add chat messages here later\n                ],\n              ),\n            ),\n          ),\n          // Message input bar at the bottom\n          Container(\n            padding: const EdgeInsets.symmetric(\n              horizontal: 16.0,\n              vertical: 12.0,\n            ),\n            color: colorScheme.surface, // White background for the input bar\n            child: Row(\n              children: [\n                IconButton(\n                  icon: Icon(Icons.add, color: Colors.grey[600]),\n                  onPressed: () {\n                    // TODO: Implement attachment action\n                  },\n                ),\n                const SizedBox(width: 8.0),\n                Expanded(\n                  child: TextField(\n                    decoration: InputDecoration(\n                      hintText: 'Message...',\n                      hintStyle: textTheme.bodyLarge?.copyWith(\n                        color: Colors.grey[500],\n                      ),\n                      filled: true,\n                      fillColor: Colors.grey[200], // Light grey background\n                      border: OutlineInputBorder(\n                        borderRadius: BorderRadius.circular(\n                          25.0,\n                        ), // More rounded corners\n                        borderSide: BorderSide.none,\n                      ),\n                      contentPadding: const EdgeInsets.only(\n                        left: 16.0,\n                        top: 12.0,\n                        bottom: 12.0,\n                      ), // Removed original right padding here\n                      suffixIcon: Padding(\n                        // Wrapped mic icon in Padding\n                        padding: const EdgeInsets.only(\n                          right: 16.0,\n                        ), // Added right padding\n                        child: Icon(\n                          Icons.mic,\n                          color: Colors.grey[600],\n                        ), // Microphone icon\n                      ),\n                    ),\n                    style: textTheme.bodyLarge?.copyWith(\n                      color: Colors.grey[850],\n                    ),\n                  ),\n                ),\n                const SizedBox(width: 8.0),\n                Container(\n                  decoration: BoxDecoration(\n                    color: primaryColor, // Use primaryColor for send button\n                    shape: BoxShape.circle,\n                  ),\n                  child: IconButton(\n                    icon: Icon(\n                      Icons.send,\n                      color: colorScheme.onPrimary,\n                    ), // White send icon\n                    onPressed: () {\n                      // TODO: Implement send message action\n                    },\n                  ),\n                ),\n              ],\n            ),\n          ),\n        ],\n      ),\n    );\n  }\n}\n\nclass _SuggestionChip extends StatelessWidget {\n  final String text;\n  final VoidCallback onTap;\n  final bool isActive; // Added isActive property\n  final TextTheme textTheme;\n  final Color primaryColor; // Added primaryColor for styling\n\n  const _SuggestionChip({\n    required this.text,\n    required this.onTap,\n    this.isActive = false, // Default to false\n    required this.textTheme,\n    required this.primaryColor,\n  });\n\n  @override\n  Widget build(BuildContext context) {\n    return GestureDetector(\n      onTap: onTap,\n      child: Container(\n        padding: const EdgeInsets.symmetric(horizontal: 16.0, vertical: 10.0),\n        decoration: BoxDecoration(\n          color:\n              isActive\n                  ? primaryColor.withOpacity(0.1)\n                  : Colors.white, // Background changes based on isActive\n          borderRadius: BorderRadius.circular(20.0), // Increased border radius\n          border: Border.all(\n            color: isActive ? primaryColor.withOpacity(0.3) : Colors.grey[300]!,\n            width: 1.0,\n          ),\n        ),\n        child: Text(\n          text,\n          style: textTheme.bodySmall?.copyWith(\n            color:\n                isActive\n                    ? primaryColor\n                    : Colors.grey[700], // Text color changes based on isActive\n            fontWeight:\n                isActive\n                    ? FontWeight.bold\n                    : FontWeight\n                        .normal, // Font weight changes based on isActive\n          ),\n        ),\n      ),\n    );\n  }\n}\n```\n\n// File: lib\\screens\\book_hotel_screen.dart\n```dart\nimport 'package:flutter/material.dart';\n\nimport 'package:ai_travel_app_ui_kit/components/buttons/primary_text_button.dart'; // Import PrimaryTextButton\n\nclass BookHotelScreen extends StatelessWidget {\n  const BookHotelScreen({super.key});\n\n  @override\n  Widget build(BuildContext context) {\n    final TextTheme textTheme = Theme.of(context).textTheme;\n    final Color primaryColor = Theme.of(context).primaryColor;\n    final ColorScheme colorScheme = Theme.of(context).colorScheme;\n\n    return Scaffold(\n      backgroundColor:\n          Colors.grey[100], // Light grey background matching the image\n      appBar: AppBar(\n        backgroundColor: Colors.grey[100], // Match scaffold background\n        elevation: 0, // No shadow\n        leading: IconButton(\n          icon: Icon(Icons.close, color: Colors.grey[700]), // Close icon\n          onPressed: () {\n            Navigator.of(context).pop(); // Navigate back\n          },\n        ),\n        title: Text(\n          'Book a Hotel',\n          style: textTheme.titleLarge?.copyWith(\n            fontWeight: FontWeight.bold,\n            color: Colors.grey[800],\n          ),\n        ),\n        centerTitle: true,\n      ),\n      body: Padding(\n        padding: const EdgeInsets.symmetric(horizontal: 24.0),\n        child: Column(\n          crossAxisAlignment: CrossAxisAlignment.start,\n          children: [\n            const SizedBox(height: 32.0),\n            Text(\n              'Book a Hotel From?',\n              style: textTheme.titleMedium?.copyWith(\n                fontWeight: FontWeight.w600, // Semi-bold\n                color: Colors.grey[700],\n              ),\n            ),\n            const SizedBox(height: 8.0),\n            TextField(\n              decoration: InputDecoration(\n                hintText: 'Sylhet, Bangl', // Example hint text\n                hintStyle: textTheme.bodyLarge?.copyWith(\n                  color: Colors.grey[500],\n                ),\n                filled: true,\n                fillColor:\n                    colorScheme.surface, // White background for the input field\n                prefixIcon: Padding(\n                  // Add padding around the prefix icon\n                  padding: const EdgeInsets.only(\n                    left: 12.0,\n                    right: 8.0,\n                  ), // Adjust padding as needed\n                  child: Icon(\n                    Icons.location_on,\n                    color: Colors.grey[600],\n                  ), // Location icon\n                ),\n                suffixIcon: Padding(\n                  // Add padding around the suffix icon\n                  padding: const EdgeInsets.only(\n                    left: 8.0,\n                    right: 12.0,\n                  ), // Adjust padding as needed\n                  child: Icon(\n                    Icons.keyboard_arrow_down,\n                    color: Colors.grey[600],\n                  ), // Dropdown arrow\n                ),\n                border: OutlineInputBorder(\n                  borderRadius: BorderRadius.circular(\n                    15.0,\n                  ), // More rounded corners\n                  borderSide: BorderSide.none, // No border line\n                ),\n                contentPadding: const EdgeInsets.symmetric(\n                  horizontal: 16.0,\n                  vertical: 16.0,\n                ),\n              ),\n              style: textTheme.bodyLarge?.copyWith(color: Colors.grey[850]),\n            ),\n            const Spacer(), // Pushes the button to the bottom\n            PrimaryTextButton(\n              // Using the UIKit PrimaryTextButton\n              text: 'Next',\n              onPressed: () {\n                // TODO: Implement navigation to the next booking step\n                print('Next button tapped');\n              },\n            ),\n            const SizedBox(height: 40.0), // Bottom padding\n          ],\n        ),\n      ),\n    );\n  }\n}\n```\n\n// File: lib\\screens\\date_timeline_screen.dart\n```dart\nimport 'package:flutter/material.dart';\nimport 'package:ai_travel_app_ui_kit/components/buttons/primary_text_button.dart';\n\nclass DateTimelineScreen extends StatefulWidget {\n  const DateTimelineScreen({super.key});\n\n  @override\n  State<DateTimelineScreen> createState() => _DateTimelineScreenState();\n}\n\nclass _DateTimelineScreenState extends State<DateTimelineScreen> {\n  DateTime _focusedDay = DateTime.now(); // Current month for display\n  DateTime? _selectedStartDate;\n  DateTime? _selectedEndDate;\n\n  @override\n  void initState() {\n    super.initState();\n    // Initialize to March 2025 as per image reference\n    _focusedDay = DateTime(2025, 3, 1);\n    // Initialize selected dates as per image reference\n    _selectedStartDate = DateTime(2025, 3, 10);\n    _selectedEndDate = DateTime(2025, 3, 13);\n  }\n\n  void _onDaySelected(DateTime selectedDay) {\n    setState(() {\n      if (_selectedStartDate == null || _selectedEndDate != null) {\n        // No dates selected, or a range is already selected (start a new one)\n        _selectedStartDate = selectedDay;\n        _selectedEndDate = null;\n      } else if (selectedDay.isBefore(_selectedStartDate!)) {\n        // Selected a day before the start date, make it the new start date\n        _selectedEndDate = _selectedStartDate;\n        _selectedStartDate = selectedDay;\n      } else if (selectedDay.isAfter(_selectedStartDate!)) {\n        // Selected a day after the start date, make it the end date\n        _selectedEndDate = selectedDay;\n      } else {\n        // Tapped the same start date, deselect\n        _selectedStartDate = null;\n        _selectedEndDate = null;\n      }\n    });\n  }\n\n  bool _isDaySelected(DateTime day) {\n    if (_selectedStartDate == null) return false;\n    if (_selectedEndDate == null) {\n      return day.year == _selectedStartDate!.year &&\n          day.month == _selectedStartDate!.month &&\n          day.day == _selectedStartDate!.day;\n    }\n    return (day.isAtSameMomentAs(_selectedStartDate!) ||\n            day.isAtSameMomentAs(_selectedEndDate!)) ||\n        (day.isAfter(_selectedStartDate!) && day.isBefore(_selectedEndDate!));\n  }\n\n  bool _isRangeMiddle(DateTime day) {\n    if (_selectedStartDate == null || _selectedEndDate == null) return false;\n    return day.isAfter(_selectedStartDate!) &&\n        day.isBefore(_selectedEndDate!);\n  }\n\n  void _goToPreviousMonth() {\n    setState(() {\n      _focusedDay = DateTime(_focusedDay.year, _focusedDay.month - 1, 1);\n    });\n  }\n\n  void _goToNextMonth() {\n    setState(() {\n      _focusedDay = DateTime(_focusedDay.year, _focusedDay.month + 1, 1);\n    });\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    final TextTheme textTheme = Theme.of(context).textTheme;\n    final ColorScheme colorScheme = Theme.of(context).colorScheme;\n    final Color primaryColor = Theme.of(context).primaryColor;\n\n    // Determine the first day of the month and its weekday\n    final DateTime firstDayOfMonth =\n        DateTime(_focusedDay.year, _focusedDay.month, 1);\n    final int daysInMonth =\n        DateTime(_focusedDay.year, _focusedDay.month + 1, 0).day;\n    final int blankDays = firstDayOfMonth.weekday % 7; // Sunday = 0, Monday = 1, ..., Saturday = 6\n\n    return Scaffold(\n      backgroundColor: Colors.grey[100], // Light grey background matching the image\n      appBar: AppBar(\n        backgroundColor: Colors.grey[100], // Match scaffold background\n        elevation: 0, // No shadow\n        leading: IconButton(\n          icon: Icon(Icons.arrow_back, color: primaryColor, size: 20), // Back arrow icon with size 20 and primary color\n          onPressed: () {\n            Navigator.of(context).pop(); // Navigate back\n          },\n        ),\n        title: Text(\n          'Date & Timeline',\n          style: textTheme.titleLarge?.copyWith(\n            fontWeight: FontWeight.bold,\n            color: Colors.grey[800],\n            fontSize: 18, // Title font size 18\n          ),\n        ),\n        centerTitle: true,\n      ),\n      body: Padding(\n        padding: const EdgeInsets.symmetric(horizontal: 24.0),\n        child: Column(\n          crossAxisAlignment: CrossAxisAlignment.start,\n          children: [\n            const SizedBox(height: 32.0),\n            Text(\n              'Select Date & Stay Timeline?',\n              style: textTheme.titleMedium?.copyWith(\n                fontWeight: FontWeight.w600, // Semi-bold\n                color: Colors.grey[700],\n              ),\n            ),\n            const SizedBox(height: 16.0),\n            Container(\n              padding: const EdgeInsets.all(16.0),\n              decoration: BoxDecoration(\n                color: colorScheme.surface, // White background\n                borderRadius: BorderRadius.circular(15.0), // Rounded corners\n                boxShadow: [\n                  BoxShadow(\n                    color: Colors.grey.withOpacity(0.1),\n                    spreadRadius: 1,\n                    blurRadius: 5,\n                    offset: const Offset(0, 3), // Subtle shadow\n                  ),\n                ],\n              ),\n              child: Column(\n                children: [\n                  // Month Navigation\n                  Row(\n                    mainAxisAlignment: MainAxisAlignment.spaceBetween,\n                    children: [\n                      IconButton(\n                        icon: Icon(Icons.arrow_back_ios,\n                            size: 16, color: Colors.grey[700]),\n                        onPressed: _goToPreviousMonth,\n                      ),\n                      Text(\n                        '${_focusedDay.monthName} ${_focusedDay.year}',\n                        style: textTheme.titleMedium?.copyWith(\n                          fontWeight: FontWeight.bold,\n                          color: Colors.grey[800],\n                        ),\n                      ),\n                      IconButton(\n                        icon: Icon(Icons.arrow_forward_ios,\n                            size: 16, color: Colors.grey[700]),\n                        onPressed: _goToNextMonth,\n                      ),\n                    ],\n                  ),\n                  const SizedBox(height: 16.0),\n                  // Weekdays\n                  Row(\n                    mainAxisAlignment: MainAxisAlignment.spaceAround,\n                    children: const [\n                      _WeekdayText('Sun'),\n                      _WeekdayText('Mon'),\n                      _WeekdayText('Tue'),\n                      _WeekdayText('Wed'),\n                      _WeekdayText('Thu'),\n                      _WeekdayText('Fri'),\n                      _WeekdayText('Sat'),\n                    ],\n                  ),\n                  const SizedBox(height: 8.0),\n                  // Days Grid\n                  GridView.builder(\n                    shrinkWrap: true,\n                    physics: const NeverScrollableScrollPhysics(),\n                    gridDelegate: const SliverGridDelegateWithFixedCrossAxisCount(\n                      crossAxisCount: 7,\n                      childAspectRatio: 1.0,\n                    ),\n                    itemCount: blankDays + daysInMonth + (7 - ((blankDays + daysInMonth) % 7)) % 7, // Ensure full weeks\n                    itemBuilder: (context, index) {\n                      if (index < blankDays) {\n                        return const SizedBox.shrink(); // Empty cells for preceding days\n                      }\n                      final int dayNumber = index - blankDays + 1;\n                      if (dayNumber > daysInMonth) {\n                        return const SizedBox.shrink(); // Empty cells for succeeding days\n                      }\n\n                      final DateTime day = DateTime(_focusedDay.year, _focusedDay.month, dayNumber);\n                      final bool isSelected = _isDaySelected(day);\n                      final bool isRangeMiddle = _isRangeMiddle(day);\n                      final bool isStartDate = _selectedStartDate != null &&\n                          day.isAtSameMomentAs(_selectedStartDate!);\n                      final bool isEndDate = _selectedEndDate != null &&\n                          day.isAtSameMomentAs(_selectedEndDate!);\n\n                      Color textColor = Colors.grey[800]!;\n                      Color backgroundColor = Colors.transparent;\n                      BorderRadius borderRadius = BorderRadius.circular(8.0); // Default radius\n\n                      if (isSelected) {\n                        if (isStartDate || isEndDate) {\n                          backgroundColor = primaryColor; // Use primaryColor for start/end\n                          textColor = colorScheme.onPrimary; // Use onPrimary for text on primary color\n                          if (isStartDate && isEndDate) {\n                             borderRadius = BorderRadius.circular(8.0);\n                          } else if (isStartDate && _selectedEndDate != null) {\n                            borderRadius = const BorderRadius.only(\n                              topLeft: Radius.circular(8.0),\n                              bottomLeft: Radius.circular(8.0),\n                            );\n                          } else if (isEndDate && _selectedStartDate != null) {\n                            borderRadius = const BorderRadius.only(\n                              topRight: Radius.circular(8.0),\n                              bottomRight: Radius.circular(8.0),\n                            );\n                          } else {\n                             borderRadius = BorderRadius.circular(8.0);\n                          }\n                        } else if (isRangeMiddle) {\n                          backgroundColor = primaryColor.withOpacity(0.1); // Lighter primary color for middle\n                          textColor = primaryColor; // Primary color for text in middle\n                          borderRadius = BorderRadius.zero; // No specific rounding for middle\n                        }\n                      }\n\n                      return GestureDetector(\n                        onTap: () => _onDaySelected(day),\n                        child: Container(\n                          margin: const EdgeInsets.symmetric(horizontal: 1.0),\n                          decoration: BoxDecoration(\n                            color: backgroundColor,\n                            borderRadius: borderRadius,\n                          ),\n                          alignment: Alignment.center,\n                          child: Text(\n                            '$dayNumber',\n                            style: textTheme.bodyMedium?.copyWith(\n                              color: textColor,\n                              fontWeight: isSelected ? FontWeight.bold : FontWeight.normal, // Bold for all selected dates\n                            ),\n                          ),\n                        ),\n                      );\n                    },\n                  ),\n                ],\n              ),\n            ),\n            const Spacer(), // Pushes the button to the bottom\n            PrimaryTextButton(\n              text: 'Next',\n              onPressed: () {\n                // TODO: Implement navigation to the next step with selected dates\n                print('Selected Dates: $_selectedStartDate to $_selectedEndDate');\n              },\n            ),\n            const SizedBox(height: 40.0), // Bottom padding\n          ],\n        ),\n      ),\n    );\n  }\n}\n\nclass _WeekdayText extends StatelessWidget {\n  final String text;\n  const _WeekdayText(this.text);\n\n  @override\n  Widget build(BuildContext context) {\n    return Expanded(\n      child: Center(\n        child: Text(\n          text,\n          style: Theme.of(context).textTheme.bodySmall?.copyWith(\n                color: Colors.grey[600],\n                fontWeight: FontWeight.bold,\n              ),\n        ),\n      ),\n    );\n  }\n}\n\nextension on DateTime {\n  String get monthName {\n    switch (month) {\n      case 1:\n        return 'January';\n      case 2:\n        return 'February';\n      case 3:\n        return 'March';\n      case 4:\n        return 'April';\n      case 5:\n        return 'May';\n      case 6:\n        return 'June';\n      case 7:\n        return 'July';\n      case 8:\n        return 'August';\n      case 9:\n        return 'September';\n      case 10:\n        return 'October';\n      case 11:\n        return 'November';\n      case 12:\n        return 'December';\n      default:\n        return '';\n    }\n  }\n}\n```\n\n// File: lib\\screens\\explore_hotels_screen.dart\n```dart\nimport 'package:flutter/material.dart';\n\nclass ExploreHotelsScreen extends StatefulWidget {\n  const ExploreHotelsScreen({super.key});\n\n  @override\n  State<ExploreHotelsScreen> createState() => _ExploreHotelsScreenState();\n}\n\nclass _ExploreHotelsScreenState extends State<ExploreHotelsScreen> {\n  // Use a Set to store currently active filter chips\n  final Set<String> _activeFilters = {\n    'Hotel - Sylhet',\n  }; // Initialize with 'Hotel - Sylhet' active\n\n  void _toggleFilter(String filterText) {\n    setState(() {\n      if (_activeFilters.contains(filterText)) {\n        _activeFilters.remove(filterText);\n      } else {\n        _activeFilters.add(filterText);\n      }\n      print('Active Filters: $_activeFilters');\n    });\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    final TextTheme textTheme = Theme.of(context).textTheme;\n    final Color primaryColor = Theme.of(context).primaryColor;\n    final ColorScheme colorScheme = Theme.of(context).colorScheme;\n\n    return Scaffold(\n      backgroundColor: Colors.grey[100], // Light grey background\n      appBar: AppBar(\n        scrolledUnderElevation: 0,\n        backgroundColor: Colors.grey[100], // Match scaffold background\n        elevation: 0, // No shadow\n        leading: IconButton(\n          icon: Icon(\n            Icons.close,\n            color: primaryColor,\n          ), // Close icon with primaryColor\n          onPressed: () {\n            Navigator.of(context).pop(); // Navigate back\n          },\n        ),\n        title: Text(\n          'Book a Hotel',\n          style: textTheme.titleLarge?.copyWith(\n            fontWeight: FontWeight.bold,\n            color: Colors.grey[800],\n            fontSize:\n                18, // Based on previous request for title size consistency\n          ),\n        ),\n        centerTitle: true,\n        actions: [\n          IconButton(\n            icon: Container(\n              padding: const EdgeInsets.all(6.0),\n              decoration: BoxDecoration(\n                color: primaryColor.withOpacity(\n                  0.1,\n                ), // Light primary color background\n                borderRadius: BorderRadius.circular(8.0),\n              ),\n              child: Icon(\n                Icons.psychology_outlined,\n                color: primaryColor,\n              ), // AI icon\n            ),\n            onPressed: () {\n              // TODO: Implement AI action\n            },\n          ),\n          IconButton(\n            icon: Icon(\n              Icons.filter_list,\n              color: Colors.grey[700],\n            ), // Filter icon\n            onPressed: () {\n              // TODO: Implement filter action\n            },\n          ),\n          const SizedBox(width: 8.0),\n        ],\n      ),\n      body: Column(\n        crossAxisAlignment: CrossAxisAlignment.start,\n        children: [\n          Padding(\n            padding: const EdgeInsets.symmetric(\n              horizontal: 24.0,\n              vertical: 16.0,\n            ),\n            child: SingleChildScrollView(\n              scrollDirection: Axis.horizontal,\n              child: Row(\n                children: [\n                  _FilterChip(\n                    text: 'Hotel - Sylhet',\n                    onTap: () => _toggleFilter('Hotel - Sylhet'),\n                    isActive: _activeFilters.contains('Hotel - Sylhet'),\n                    primaryColor: primaryColor,\n                    textTheme: textTheme,\n                  ),\n                  const SizedBox(width: 8.0),\n                  _FilterChip(\n                    text: '4 Days',\n                    onTap: () => _toggleFilter('4 Days'),\n                    isActive: _activeFilters.contains('4 Days'),\n                    primaryColor: primaryColor,\n                    textTheme: textTheme,\n                  ),\n                  const SizedBox(width: 8.0),\n                  _FilterChip(\n                    text: 'Check in - Mar 10',\n                    onTap: () => _toggleFilter('Check in - Mar 10'),\n                    isActive: _activeFilters.contains('Check in - Mar 10'),\n                    primaryColor: primaryColor,\n                    textTheme: textTheme,\n                  ),\n                  const SizedBox(width: 8.0),\n                  // Add more chips if needed\n                ],\n              ),\n            ),\n          ),\n          const SizedBox(height: 16.0),\n          Padding(\n            padding: const EdgeInsets.symmetric(horizontal: 24.0),\n            child: Text(\n              'Available Hotels, Choose by yourself',\n              style: textTheme.titleMedium?.copyWith(\n                fontWeight: FontWeight.w600,\n                color: Colors.grey[800],\n              ),\n            ),\n          ),\n          Padding(\n            padding: const EdgeInsets.symmetric(horizontal: 24.0),\n            child: Text(\n              'Your Selection applies to all traveler and hotel authority.',\n              style: textTheme.bodySmall?.copyWith(color: Colors.grey[600]),\n            ),\n          ),\n          const SizedBox(height: 24.0),\n          Expanded(\n            child: ListView.builder(\n              padding: const EdgeInsets.symmetric(horizontal: 24.0),\n              itemCount: 5, // Example: 5 hotel cards\n              itemBuilder: (context, index) {\n                return Padding(\n                  padding: const EdgeInsets.only(bottom: 16.0),\n                  child: _HotelCard(\n                    hotelName: 'Hotel Supreme', // Example data\n                    address: '4140 Parker Rd. Allentown, Sylhet 3100',\n                    pricePerDay: '\\$126',\n                    rating: '4.9 (234 reviews)',\n                    imageUrl:\n                        'https://picsum.photos/400/250?random=$index', // Placeholder image\n                    textTheme: textTheme,\n                    colorScheme: colorScheme,\n                    onTap: () {\n                      // TODO: Implement navigation to hotel detail screen\n                      print('Tapped Hotel Supreme');\n                    },\n                  ),\n                );\n              },\n            ),\n          ),\n        ],\n      ),\n    );\n  }\n}\n\nclass _FilterChip extends StatelessWidget {\n  final String text;\n  final VoidCallback onTap;\n  final bool isActive;\n  final Color primaryColor;\n  final TextTheme textTheme;\n\n  const _FilterChip({\n    required this.text,\n    required this.onTap,\n    this.isActive = false,\n    required this.primaryColor,\n    required this.textTheme,\n  });\n\n  @override\n  Widget build(BuildContext context) {\n    return GestureDetector(\n      onTap: onTap,\n      child: Container(\n        padding: const EdgeInsets.symmetric(horizontal: 16.0, vertical: 10.0),\n        decoration: BoxDecoration(\n          color: isActive ? primaryColor.withOpacity(0.1) : Colors.transparent,\n          borderRadius: BorderRadius.circular(20.0), // Increased border radius\n          border: Border.all(\n            color: isActive ? primaryColor.withOpacity(0.3) : Colors.grey[300]!,\n            width: 1.5,\n          ),\n        ),\n        child: Text(\n          text,\n          style: textTheme.bodySmall?.copyWith(\n            color: isActive ? primaryColor : Colors.grey[700],\n            fontWeight: isActive ? FontWeight.bold : FontWeight.normal,\n          ),\n        ),\n      ),\n    );\n  }\n}\n\nclass _HotelCard extends StatefulWidget {\n  final String hotelName;\n  final String address;\n  final String pricePerDay;\n  final String rating;\n  final String imageUrl;\n  final TextTheme textTheme;\n  final ColorScheme colorScheme;\n  final VoidCallback onTap; // Added for making the card tappable\n\n  const _HotelCard({\n    required this.hotelName,\n    required this.address,\n    required this.pricePerDay,\n    required this.rating,\n    required this.imageUrl,\n    required this.textTheme,\n    required this.colorScheme,\n    required this.onTap,\n    super.key, // Added key to constructor\n  });\n\n  @override\n  State<_HotelCard> createState() => _HotelCardState();\n}\n\nclass _HotelCardState extends State<_HotelCard> {\n  bool _isFavorite = false; // State for the heart icon\n\n  @override\n  Widget build(BuildContext context) {\n    return Material(\n      color: widget.colorScheme.surface, // Card background color\n      borderRadius: BorderRadius.circular(15.0),\n      child: InkWell(\n        borderRadius: BorderRadius.circular(15.0),\n        onTap: widget.onTap,\n        hoverColor: widget.colorScheme.primary.withOpacity(0.05),\n        splashColor: widget.colorScheme.primary.withOpacity(0.2),\n        child: Container(\n          padding: const EdgeInsets.all(16.0),\n          decoration: BoxDecoration(\n            borderRadius: BorderRadius.circular(15.0),\n            // Removed color and shadow from here to prevent overriding Material effects\n          ),\n          child: Column(\n            crossAxisAlignment: CrossAxisAlignment.start,\n            children: [\n              Stack(\n                children: [\n                  ClipRRect(\n                    borderRadius: BorderRadius.circular(10.0),\n                    child: Image.network(\n                      widget.imageUrl,\n                      height: 220, // Increased image height\n                      width: double.infinity,\n                      fit: BoxFit.cover,\n                      errorBuilder:\n                          (context, error, stackTrace) => Container(\n                            height: 220, // Match increased height\n                            width: double.infinity,\n                            color: Colors.grey[300],\n                            child: Icon(\n                              Icons.broken_image,\n                              color: Colors.grey[600],\n                            ),\n                          ),\n                    ),\n                  ),\n                  Positioned(\n                    top: 8.0,\n                    right: 8.0,\n                    child: Container(\n                      decoration: BoxDecoration(\n                        color: Colors.white.withOpacity(0.8),\n                        shape: BoxShape.circle,\n                      ),\n                      child: IconButton(\n                        icon: Icon(\n                          _isFavorite ? Icons.favorite : Icons.favorite_border,\n                          color: _isFavorite ? Colors.red : Colors.grey[700],\n                        ),\n                        onPressed: () {\n                          setState(() {\n                            _isFavorite = !_isFavorite;\n                          });\n                          print(\n                            'Favorite toggled for ${widget.hotelName}: $_isFavorite',\n                          );\n                        },\n                      ),\n                    ),\n                  ),\n                ],\n              ),\n              const SizedBox(height: 16.0),\n              Row(\n                mainAxisAlignment: MainAxisAlignment.spaceBetween,\n                children: [\n                  Expanded(\n                    child: Column(\n                      crossAxisAlignment: CrossAxisAlignment.start,\n                      children: [\n                        Text(\n                          widget.hotelName,\n                          style: widget.textTheme.titleMedium?.copyWith(\n                            fontWeight: FontWeight.bold,\n                            color: Colors.grey[800],\n                          ),\n                          maxLines: 1,\n                          overflow: TextOverflow.ellipsis,\n                        ),\n                        const SizedBox(height: 4.0),\n                        Text(\n                          widget.address,\n                          style: widget.textTheme.bodySmall?.copyWith(\n                            color: Colors.grey[600],\n                          ),\n                          maxLines: 1,\n                          overflow: TextOverflow.ellipsis,\n                        ),\n                      ],\n                    ),\n                  ),\n                  Text(\n                    '${widget.pricePerDay}/Day',\n                    style: widget.textTheme.titleSmall?.copyWith(\n                      fontWeight: FontWeight.bold,\n                      color: Colors.grey[800],\n                    ),\n                  ),\n                ],\n              ),\n              const SizedBox(height: 8.0),\n              Row(\n                children: [\n                  Icon(Icons.star, color: Colors.amber, size: 16),\n                  const SizedBox(width: 4.0),\n                  Text(\n                    widget.rating,\n                    style: widget.textTheme.bodySmall?.copyWith(\n                      color: Colors.grey[700],\n                    ),\n                  ),\n                ],\n              ),\n            ],\n          ),\n        ),\n      ),\n    );\n  }\n}\n```\n\n// File: lib\\screens\\hotel_details_screen.dart\n```dart\nimport 'package:flutter/material.dart';\nimport 'package:ai_travel_app_ui_kit/components/buttons/primary_text_button.dart'; // Assuming PrimaryTextButton is suitable for \"Reserve\"\n// TapGestureRecognizer to make parts of TextSpan tappable\nimport 'package:flutter/gestures.dart';\n\nclass HotelDetailsScreen extends StatefulWidget {\n  const HotelDetailsScreen({super.key});\n\n  @override\n  State<HotelDetailsScreen> createState() => _HotelDetailsScreenState();\n}\n\nclass _HotelDetailsScreenState extends State<HotelDetailsScreen> {\n  bool _isDescriptionExpanded = false;\n  String _selectedTab = 'Overview'; // Default selected tab\n  bool _isFavorited = false; // State for the heart icon\n\n  @override\n  Widget build(BuildContext context) {\n    final TextTheme textTheme = Theme.of(context).textTheme;\n    final Color primaryColor = Theme.of(context).primaryColor;\n    final ColorScheme colorScheme = Theme.of(context).colorScheme;\n\n    return Scaffold(\n      backgroundColor: Colors.white, // Light grey background\n      appBar: AppBar(\n        scrolledUnderElevation: 0,\n        backgroundColor:\n            Colors.transparent, // Transparent to show background behind\n        elevation: 0,\n        leading: IconButton(\n          icon: Icon(\n            Icons.arrow_back,\n            color: primaryColor,\n            size: 20,\n          ), // Back icon\n          onPressed: () {\n            Navigator.of(context).pop();\n          },\n        ),\n        actions: [\n          IconButton(\n            icon: Icon(\n              _isFavorited\n                  ? Icons.favorite\n                  : Icons.favorite_border, // Toggle icon based on state\n              color:\n                  _isFavorited\n                      ? Colors.red\n                      : primaryColor, // Red when favorited\n              size: 24,\n            ), // Heart icon\n            onPressed: () {\n              setState(() {\n                _isFavorited = !_isFavorited; // Toggle favorite state\n              });\n              print('Hotel favorited: $_isFavorited');\n            },\n          ),\n          const SizedBox(width: 8.0),\n        ],\n      ),\n      body: Stack(\n        children: [\n          SingleChildScrollView(\n            padding: const EdgeInsets.only(\n              bottom: 80,\n            ), // Space for the fixed bottom bar\n            child: Column(\n              crossAxisAlignment: CrossAxisAlignment.start,\n              children: [\n                Padding(\n                  padding: const EdgeInsets.symmetric(horizontal: 4),\n                  child: Center(\n                    child: ClipRRect(\n                      child: Image.network(\n                        'https://picsum.photos/400/250?random=hotelmain', // Main hotel image - changed to 400x250 for better filling\n                        height: 200,\n                        width: double.infinity, // Make image fill width\n                        fit: BoxFit.cover, // Ensure image covers the area\n                        errorBuilder:\n                            (context, error, stackTrace) => Container(\n                              height: 200,\n                              width: double.infinity,\n                              color: Colors.grey[300],\n                              child: Icon(\n                                Icons.image,\n                                size: 80,\n                                color: Colors.grey[600],\n                              ),\n                            ),\n                      ),\n                    ),\n                  ),\n                ),\n                const SizedBox(height: 24.0),\n                Padding(\n                  padding: const EdgeInsets.symmetric(horizontal: 16.0),\n                  child: Row(\n                    mainAxisAlignment: MainAxisAlignment.spaceBetween,\n                    children: [\n                      Expanded(\n                        // Use Expanded to give available space to text\n                        child: Column(\n                          crossAxisAlignment: CrossAxisAlignment.start,\n                          children: [\n                            Text(\n                              'Hotel Supreme',\n                              style: textTheme.headlineSmall?.copyWith(\n                                fontSize: 18,\n                                fontWeight: FontWeight.bold,\n                                color: Colors.grey[800],\n                              ),\n                              overflow:\n                                  TextOverflow\n                                      .ellipsis, // Add overflow handling\n                            ),\n                            const SizedBox(height: 4.0),\n                            Text(\n                              '4140 Parker Rd. Allentown, Sylhet 3100',\n                              style: textTheme.bodyMedium?.copyWith(\n                                color: Colors.grey[600],\n                              ),\n                              overflow:\n                                  TextOverflow\n                                      .ellipsis, // Add overflow handling\n                            ),\n                          ],\n                        ),\n                      ),\n                      const SizedBox(\n                        width: 16.0,\n                      ), // Add some space between text and share button\n                      Ink(\n                        decoration: BoxDecoration(\n                          color: Colors.grey[200],\n                          borderRadius: BorderRadius.circular(20.0),\n                        ),\n                        child: InkWell(\n                          borderRadius: BorderRadius.circular(20.0),\n                          onTap: () {\n                            print('Share tapped');\n                          },\n                          splashColor: primaryColor.withOpacity(0.2),\n                          hoverColor: primaryColor.withOpacity(0.1),\n                          child: Padding(\n                            padding: const EdgeInsets.symmetric(\n                              horizontal: 12.0,\n                              vertical: 8.0,\n                            ),\n                            child: Row(\n                              mainAxisSize: MainAxisSize.min,\n                              children: [\n                                Icon(\n                                  Icons.share,\n                                  size: 16,\n                                  color: Colors.grey[700],\n                                ),\n                                const SizedBox(width: 4.0),\n                                Text(\n                                  'Share',\n                                  style: textTheme.bodySmall?.copyWith(\n                                    color: Colors.grey[700],\n                                  ),\n                                ),\n                              ],\n                            ),\n                          ),\n                        ),\n                      ),\n                    ],\n                  ),\n                ),\n                const SizedBox(height: 24.0),\n                Padding(\n                  padding: const EdgeInsets.symmetric(horizontal: 16.0),\n                  child: Row(\n                    mainAxisAlignment: MainAxisAlignment.spaceAround,\n                    children: const [\n                      _HotelAttributeChip(icon: Icons.king_bed, text: '2 Beds'),\n                      _HotelAttributeChip(icon: Icons.bathtub, text: '1 Bath'),\n                      _HotelAttributeChip(icon: Icons.group, text: '2 Guests'),\n                    ],\n                  ),\n                ),\n                const SizedBox(height: 24.0),\n                Padding(\n                  padding: const EdgeInsets.symmetric(horizontal: 24.0),\n                  child: Row(\n                    mainAxisAlignment: MainAxisAlignment.spaceAround,\n                    children: [\n                      _TabButton(\n                        text: 'Overview',\n                        isSelected: _selectedTab == 'Overview',\n                        onTap: () => setState(() => _selectedTab = 'Overview'),\n                        primaryColor: primaryColor,\n                        textTheme: textTheme,\n                      ),\n                      _TabButton(\n                        text: 'Review',\n                        isSelected: _selectedTab == 'Review',\n                        onTap: () => setState(() => _selectedTab = 'Review'),\n                        primaryColor: primaryColor,\n                        textTheme: textTheme,\n                      ),\n                      _TabButton(\n                        text: 'Location',\n                        isSelected: _selectedTab == 'Location',\n                        onTap: () => setState(() => _selectedTab = 'Location'),\n                        primaryColor: primaryColor,\n                        textTheme: textTheme,\n                      ),\n                    ],\n                  ),\n                ),\n                const SizedBox(height: 24.0),\n                // Conditionally display content based on selected tab\n                _selectedTab == 'Overview'\n                    ? _OverviewContent(\n                      isDescriptionExpanded: _isDescriptionExpanded,\n                      primaryColor: primaryColor,\n                      textTheme: textTheme,\n                      onSeeMoreTap: () {\n                        setState(() {\n                          _isDescriptionExpanded = !_isDescriptionExpanded;\n                        });\n                      },\n                    )\n                    : _selectedTab == 'Review'\n                    ? _ReviewSectionContent(\n                      textTheme: textTheme,\n                      primaryColor: primaryColor,\n                      colorScheme: colorScheme,\n                    )\n                    : _LocationContent(textTheme: textTheme),\n                const SizedBox(height: 24.0), // Final padding before bottom bar\n              ],\n            ),\n          ),\n          // Fixed bottom bar\n          Positioned(\n            bottom: 0,\n            left: 0,\n            right: 0,\n            child: Container(\n              padding: const EdgeInsets.symmetric(\n                horizontal: 24.0,\n                vertical: 16.0,\n              ),\n              decoration: BoxDecoration(\n                color: colorScheme.surface, // White background\n                boxShadow: [\n                  BoxShadow(\n                    color: Colors.grey.withOpacity(0.1),\n                    spreadRadius: 1,\n                    blurRadius: 5,\n                    offset: const Offset(0, -3), // Shadow above the bar\n                  ),\n                ],\n              ),\n              child: Row(\n                children: [\n                  Expanded(\n                    // Use Expanded to give available space to text\n                    child: Column(\n                      crossAxisAlignment: CrossAxisAlignment.start,\n                      children: [\n                        Text(\n                          '27,200 BDT / Tax included',\n                          style: textTheme.titleLarge?.copyWith(\n                            fontSize: 18,\n                            fontWeight: FontWeight.bold,\n                            color: Colors.grey[800],\n                          ),\n                          overflow:\n                              TextOverflow.ellipsis, // Add overflow handling\n                          maxLines: 1,\n                        ),\n                        const SizedBox(height: 4.0),\n                        Text(\n                          '40% Money • 10 - 13 March',\n                          style: textTheme.bodySmall?.copyWith(\n                            fontSize: 12,\n                            color: Colors.grey[600],\n                          ),\n                          overflow:\n                              TextOverflow.ellipsis, // Add overflow handling\n                          maxLines: 1,\n                        ),\n                      ],\n                    ),\n                  ),\n                  const SizedBox(width: 16.0), // Space between text and button\n                  SizedBox(\n                    width: 120, // Fixed width for the button as per image\n                    // Fixed height for the button\n                    child: PrimaryTextButton(text: 'Reserve'),\n                  ),\n                ],\n              ),\n            ),\n          ),\n        ],\n      ),\n    );\n  }\n}\n\n// Separate widget for Overview content\nclass _OverviewContent extends StatelessWidget {\n  final bool isDescriptionExpanded;\n  final Color primaryColor;\n  final TextTheme textTheme;\n  final VoidCallback onSeeMoreTap;\n\n  const _OverviewContent({\n    required this.isDescriptionExpanded,\n    required this.primaryColor,\n    required this.textTheme,\n    required this.onSeeMoreTap,\n  });\n\n  @override\n  Widget build(BuildContext context) {\n    return Column(\n      crossAxisAlignment: CrossAxisAlignment.start,\n      children: [\n        Padding(\n          padding: const EdgeInsets.symmetric(horizontal: 24.0),\n          child: Column(\n            crossAxisAlignment: CrossAxisAlignment.start,\n            children: [\n              Text(\n                'Description',\n                style: textTheme.titleMedium?.copyWith(\n                  fontWeight: FontWeight.bold,\n                  color: Colors.grey[800],\n                ),\n              ),\n              const SizedBox(height: 8.0),\n              Text.rich(\n                TextSpan(\n                  text:\n                      'Featuring a garden, Hotel Supreme is located in Sylhet. With a fitness centre, the 3-star hotel has air-conditioned rooms with free WiFi. Each room features a flat-screen TV with cable channels and a private bathroom.',\n                  style: textTheme.bodyMedium?.copyWith(\n                    color: Colors.grey[600],\n                    height: 1.5,\n                  ),\n                  children: [\n                    if (!isDescriptionExpanded)\n                      TextSpan(\n                        text: '... ',\n                        style: textTheme.bodyMedium?.copyWith(\n                          color: Colors.grey[600],\n                        ),\n                      ),\n                    TextSpan(\n                      text: isDescriptionExpanded ? '' : 'See more',\n                      style: textTheme.bodyMedium?.copyWith(\n                        color: primaryColor,\n                        fontWeight: FontWeight.bold,\n                      ),\n                      recognizer: TapGestureRecognizer()..onTap = onSeeMoreTap,\n                    ),\n                  ],\n                ),\n                maxLines: isDescriptionExpanded ? null : 3,\n                overflow:\n                    isDescriptionExpanded\n                        ? TextOverflow.visible\n                        : TextOverflow.ellipsis,\n              ),\n            ],\n          ),\n        ),\n        const SizedBox(height: 24.0),\n        Padding(\n          padding: const EdgeInsets.symmetric(horizontal: 24.0),\n          child: Text(\n            'Amenities',\n            style: textTheme.titleMedium?.copyWith(\n              fontWeight: FontWeight.bold,\n              color: Colors.grey[800],\n            ),\n          ),\n        ),\n        const SizedBox(height: 16.0),\n        Padding(\n          padding: const EdgeInsets.symmetric(horizontal: 24.0),\n          child: GridView.count(\n            shrinkWrap: true,\n            physics: const NeverScrollableScrollPhysics(),\n            crossAxisCount: 2,\n            childAspectRatio: 4.0,\n            mainAxisSpacing: 16.0,\n            crossAxisSpacing: 16.0,\n            children: const [\n              _AmenityItem(icon: Icons.park_outlined, text: 'Outdoor Park'),\n              _AmenityItem(\n                icon: Icons.room_service_outlined,\n                text: 'Room Service',\n              ),\n              _AmenityItem(\n                icon: Icons.chair_alt_outlined,\n                text: 'Fully-furnished',\n              ),\n              _AmenityItem(icon: Icons.deck_outlined, text: 'Terrace'),\n              _AmenityItem(icon: Icons.bathtub_outlined, text: 'Bathtub'),\n              _AmenityItem(\n                icon: Icons.volume_mute_outlined,\n                text: 'Quiet surroundings',\n              ),\n            ],\n          ),\n        ),\n        const SizedBox(height: 24.0),\n        Padding(\n          padding: const EdgeInsets.symmetric(horizontal: 24.0),\n          child: Text(\n            'Gallery Images',\n            style: textTheme.titleMedium?.copyWith(\n              fontWeight: FontWeight.bold,\n              color: Colors.grey[800],\n            ),\n          ),\n        ),\n        const SizedBox(height: 16.0),\n        Padding(\n          padding: const EdgeInsets.symmetric(horizontal: 24.0),\n          child: Row(\n            children: [\n              Expanded(\n                flex: 2,\n                child: _GalleryImage(\n                  imageUrl: 'https://picsum.photos/400/300?random=1',\n                ),\n              ),\n              const SizedBox(width: 16.0),\n              Expanded(\n                flex: 1,\n                child: Column(\n                  children: [\n                    _GalleryImage(\n                      imageUrl: 'https://picsum.photos/200/150?random=2',\n                      height: 92,\n                    ),\n                    const SizedBox(height: 16.0),\n                    _GalleryImage(\n                      imageUrl: 'https://picsum.photos/200/150?random=3',\n                      height: 92,\n                    ),\n                  ],\n                ),\n              ),\n            ],\n          ),\n        ),\n      ],\n    );\n  }\n}\n\n// New widget for Review Section\nclass _ReviewSectionContent extends StatelessWidget {\n  final TextTheme textTheme;\n  final Color primaryColor;\n  final ColorScheme colorScheme;\n\n  const _ReviewSectionContent({\n    required this.textTheme,\n    required this.primaryColor,\n    required this.colorScheme,\n  });\n\n  @override\n  Widget build(BuildContext context) {\n    return Padding(\n      padding: const EdgeInsets.symmetric(horizontal: 24.0),\n      child: Column(\n        crossAxisAlignment: CrossAxisAlignment.start,\n        children: [\n          Row(\n            crossAxisAlignment: CrossAxisAlignment.start,\n            children: [\n              Column(\n                crossAxisAlignment: CrossAxisAlignment.start,\n                children: [\n                  Text(\n                    '4.9',\n                    style: textTheme.displayMedium?.copyWith(\n                      fontWeight: FontWeight.bold,\n                      color: Colors.grey[800],\n                      fontSize: 48,\n                    ),\n                  ),\n                  Text(\n                    'Excellent',\n                    style: textTheme.titleMedium?.copyWith(\n                      color: Colors.grey[700],\n                      fontWeight: FontWeight.bold,\n                    ),\n                  ),\n                  Text(\n                    '(240 Reviews)',\n                    style: textTheme.bodySmall?.copyWith(\n                      color: Colors.grey[600],\n                    ),\n                  ),\n                ],\n              ),\n              const SizedBox(width: 24.0),\n              Expanded(\n                child: Column(\n                  children: [\n                    _RatingBreakdownRow(\n                      category: 'Excellent',\n                      count: 167,\n                      total: 240,\n                      textTheme: textTheme,\n                      primaryColor: primaryColor,\n                    ),\n                    _RatingBreakdownRow(\n                      category: 'Very Good',\n                      count: 43,\n                      total: 240,\n                      textTheme: textTheme,\n                      primaryColor: primaryColor,\n                    ),\n                    _RatingBreakdownRow(\n                      category: 'Average',\n                      count: 14,\n                      total: 240,\n                      textTheme: textTheme,\n                      primaryColor: primaryColor,\n                    ),\n                    _RatingBreakdownRow(\n                      category: 'Poor',\n                      count: 10,\n                      total: 240,\n                      textTheme: textTheme,\n                      primaryColor: primaryColor,\n                    ),\n                    _RatingBreakdownRow(\n                      category: 'Terrible',\n                      count: 6,\n                      total: 240,\n                      textTheme: textTheme,\n                      primaryColor: primaryColor,\n                    ),\n                  ],\n                ),\n              ),\n            ],\n          ),\n          const SizedBox(height: 24.0),\n          Row(\n            mainAxisAlignment: MainAxisAlignment.spaceAround,\n            children: [\n              _CategoryRatingBar(\n                category: 'Cleanliness',\n                rating: 4.5,\n                primaryColor: primaryColor,\n                textTheme: textTheme,\n              ),\n              _CategoryRatingBar(\n                category: 'Location',\n                rating: 5.0,\n                primaryColor: primaryColor,\n                textTheme: textTheme,\n              ),\n              _CategoryRatingBar(\n                category: 'Service',\n                rating: 4.8,\n                primaryColor: primaryColor,\n                textTheme: textTheme,\n              ),\n            ],\n          ),\n          const SizedBox(height: 16.0),\n          Row(\n            mainAxisAlignment: MainAxisAlignment.spaceAround,\n            children: [\n              _CategoryRatingBar(\n                category: 'Value',\n                rating: 4.9,\n                primaryColor: primaryColor,\n                textTheme: textTheme,\n              ),\n              _CategoryRatingBar(\n                category: 'Sleep',\n                rating: 4.1,\n                primaryColor: primaryColor,\n                textTheme: textTheme,\n              ),\n              _CategoryRatingBar(\n                category: 'Room',\n                rating: 4.6,\n                primaryColor: primaryColor,\n                textTheme: textTheme,\n              ),\n            ],\n          ),\n          const SizedBox(height: 24.0),\n          Text(\n            'Reviews',\n            style: textTheme.titleMedium?.copyWith(\n              fontWeight: FontWeight.bold,\n              color: Colors.grey[800],\n            ),\n          ),\n          const SizedBox(height: 16.0),\n          SizedBox(\n            height: 200, // Height for horizontal review cards\n            child: ListView.builder(\n              scrollDirection: Axis.horizontal,\n              itemCount: 3, // Example reviews\n              itemBuilder: (context, index) {\n                return Padding(\n                  padding: EdgeInsets.only(right: index == 2 ? 0 : 16.0),\n                  child: _ReviewCard(\n                    reviewerName: 'Jim Majesky',\n                    date: '12/01/2025',\n                    reviewText:\n                        'I love how they broke down their KYC and onboarding. I enjoyed the user experience, and even the service experience while...',\n                    rating: 5,\n                    textTheme: textTheme,\n                    colorScheme: colorScheme,\n                  ),\n                );\n              },\n            ),\n          ),\n          const SizedBox(height: 24.0),\n          Center(\n            child: SizedBox(\n              width: double.infinity,\n              height: 50,\n              child: OutlinedButton.icon(\n                onPressed: () {\n                  // TODO: Implement write a review action\n                  print('Write a review tapped');\n                },\n                icon: Icon(Icons.edit_outlined, color: primaryColor),\n                label: Text(\n                  'Write a review',\n                  style: textTheme.bodyLarge?.copyWith(color: primaryColor),\n                ),\n                style: OutlinedButton.styleFrom(\n                  side: BorderSide(color: primaryColor),\n                  shape: RoundedRectangleBorder(\n                    borderRadius: BorderRadius.circular(\n                      60,\n                    ), // Set to 60 for pill shape\n                  ),\n                ),\n              ),\n            ),\n          ),\n        ],\n      ),\n    );\n  }\n}\n\n// New widget for Location section (can be expanded later)\nclass _LocationContent extends StatelessWidget {\n  final TextTheme textTheme;\n\n  const _LocationContent({required this.textTheme});\n\n  @override\n  Widget build(BuildContext context) {\n    return Padding(\n      padding: const EdgeInsets.symmetric(horizontal: 24.0),\n      child: Column(\n        crossAxisAlignment: CrossAxisAlignment.start,\n        children: [\n          Text(\n            'Location Details',\n            style: textTheme.titleMedium?.copyWith(\n              fontWeight: FontWeight.bold,\n              color: Colors.grey[800],\n            ),\n          ),\n          const SizedBox(height: 16.0),\n          // Placeholder for map or location details\n          Container(\n            height: 200,\n            width: double.infinity,\n            clipBehavior: Clip.hardEdge,\n            decoration: BoxDecoration(\n              color: Colors.grey[300],\n              borderRadius: BorderRadius.circular(12),\n            ),\n            child: Image.network(\n              'https://media.istockphoto.com/id/858885038/photo/airplane-fly-on-the-blue-painted-map.jpg?s=2048x2048&w=is&k=20&c=LRt0Jw0WNIrJkpJ8X5uorgCLtFJN0Px-nrw7l_Y6zh4=', // Example map image\n              fit: BoxFit.cover,\n              loadingBuilder: (context, child, loadingProgress) {\n                if (loadingProgress == null) return child;\n                return Center(\n                  child: CircularProgressIndicator(\n                    valueColor: AlwaysStoppedAnimation<Color>(\n                      Colors.grey[600]!,\n                    ),\n                  ),\n                );\n              },\n              errorBuilder: (context, error, stackTrace) {\n                return Center(\n                  child: Text(\n                    'Map Placeholder',\n                    style: textTheme.bodyLarge?.copyWith(\n                      color: Colors.grey[600],\n                    ),\n                  ),\n                );\n              },\n            ),\n          ),\n        ],\n      ),\n    );\n  }\n}\n\nclass _RatingBreakdownRow extends StatelessWidget {\n  final String category;\n  final int count;\n  final int total;\n  final TextTheme textTheme;\n  final Color primaryColor;\n\n  const _RatingBreakdownRow({\n    required this.category,\n    required this.count,\n    required this.total,\n    required this.textTheme,\n    required this.primaryColor,\n  });\n\n  @override\n  Widget build(BuildContext context) {\n    return Padding(\n      padding: const EdgeInsets.symmetric(vertical: 4.0),\n      child: Row(\n        children: [\n          SizedBox(\n            width: 80, // Fixed width for category text\n            child: Text(\n              category,\n              style: textTheme.bodySmall?.copyWith(color: Colors.grey[700]),\n            ),\n          ),\n          Expanded(\n            child: LinearProgressIndicator(\n              value: count / total,\n              backgroundColor: Colors.grey[300],\n              valueColor: AlwaysStoppedAnimation<Color>(primaryColor),\n              minHeight: 8.0,\n              borderRadius: BorderRadius.circular(\n                4.0,\n              ), // Rounded corners for progress bar\n            ),\n          ),\n          const SizedBox(width: 8.0),\n          Text(\n            '$count',\n            style: textTheme.bodySmall?.copyWith(color: Colors.grey[700]),\n          ),\n        ],\n      ),\n    );\n  }\n}\n\nclass _CategoryRatingBar extends StatelessWidget {\n  final String category;\n  final double rating;\n  final Color primaryColor;\n  final TextTheme textTheme;\n\n  const _CategoryRatingBar({\n    required this.category,\n    required this.rating,\n    required this.primaryColor,\n    required this.textTheme,\n  });\n\n  @override\n  Widget build(BuildContext context) {\n    return Column(\n      children: [\n        Text(\n          category,\n          style: textTheme.bodySmall?.copyWith(color: Colors.grey[700]),\n        ),\n        const SizedBox(height: 4.0),\n        SizedBox(\n          width: 80, // Fixed width for the bar\n          child: LinearProgressIndicator(\n            value: rating / 5.0, // Assuming max rating is 5\n            backgroundColor: Colors.grey[300],\n            valueColor: AlwaysStoppedAnimation<Color>(primaryColor),\n            minHeight: 8.0,\n            borderRadius: BorderRadius.circular(4.0),\n          ),\n        ),\n        const SizedBox(height: 4.0),\n        Text(\n          rating.toStringAsFixed(1),\n          style: textTheme.bodySmall?.copyWith(\n            fontWeight: FontWeight.bold,\n            color: Colors.grey[800],\n          ),\n        ),\n      ],\n    );\n  }\n}\n\nclass _ReviewCard extends StatelessWidget {\n  final String reviewerName;\n  final String date;\n  final String reviewText;\n  final int rating;\n  final TextTheme textTheme;\n  final ColorScheme colorScheme;\n\n  const _ReviewCard({\n    required this.reviewerName,\n    required this.date,\n    required this.reviewText,\n    required this.rating,\n    required this.textTheme,\n    required this.colorScheme,\n  });\n\n  @override\n  Widget build(BuildContext context) {\n    return Container(\n      width: 280, // Fixed width for review cards\n      padding: const EdgeInsets.all(16.0),\n      decoration: BoxDecoration(\n        color: colorScheme.surface, // White background\n        borderRadius: BorderRadius.circular(15.0),\n        boxShadow: [\n          BoxShadow(\n            color: Colors.grey.withOpacity(0.1),\n            spreadRadius: 1,\n            blurRadius: 5,\n            offset: const Offset(0, 3),\n          ),\n        ],\n      ),\n      child: Column(\n        crossAxisAlignment: CrossAxisAlignment.start,\n        children: [\n          Row(\n            children: [\n              CircleAvatar(\n                radius: 18,\n                backgroundColor: Colors.grey[200],\n                child: Icon(Icons.person, color: Colors.grey[600], size: 20),\n              ),\n              const SizedBox(width: 8.0),\n              Column(\n                crossAxisAlignment: CrossAxisAlignment.start,\n                children: [\n                  Text(\n                    reviewerName,\n                    style: textTheme.bodyLarge?.copyWith(\n                      fontWeight: FontWeight.bold,\n                      color: Colors.grey[800],\n                    ),\n                  ),\n                  Text(\n                    date,\n                    style: textTheme.bodySmall?.copyWith(\n                      color: Colors.grey[600],\n                    ),\n                  ),\n                ],\n              ),\n            ],\n          ),\n          const SizedBox(height: 8.0),\n          Row(\n            children: List.generate(5, (index) {\n              return Icon(\n                index < rating ? Icons.star : Icons.star_border,\n                color: index < rating ? Colors.amber : Colors.grey[400],\n                size: 16,\n              );\n            }),\n          ),\n          const SizedBox(height: 8.0),\n          Expanded(\n            child: Text(\n              reviewText,\n              style: textTheme.bodyMedium?.copyWith(color: Colors.grey[700]),\n              maxLines: 3,\n              overflow: TextOverflow.ellipsis,\n            ),\n          ),\n          const SizedBox(height: 8.0),\n          Row(\n            mainAxisAlignment: MainAxisAlignment.end,\n            children: [\n              Text(\n                'Was this review helpful?',\n                style: textTheme.bodySmall?.copyWith(color: Colors.grey[600]),\n              ),\n              const SizedBox(width: 8.0),\n              _SmallTextButton(\n                text: 'No',\n                onPressed: () {},\n                textTheme: textTheme,\n              ),\n              const SizedBox(width: 4.0),\n              _SmallTextButton(\n                text: 'Yes',\n                onPressed: () {},\n                textTheme: textTheme,\n              ),\n            ],\n          ),\n        ],\n      ),\n    );\n  }\n}\n\nclass _SmallTextButton extends StatelessWidget {\n  final String text;\n  final VoidCallback onPressed;\n  final TextTheme textTheme;\n\n  const _SmallTextButton({\n    required this.text,\n    required this.onPressed,\n    required this.textTheme,\n  });\n\n  @override\n  Widget build(BuildContext context) {\n    return TextButton(\n      onPressed: onPressed,\n      style: TextButton.styleFrom(\n        padding: const EdgeInsets.symmetric(horizontal: 12, vertical: 6),\n        minimumSize: Size.zero, // Remove default minimum size\n        tapTargetSize: MaterialTapTargetSize.shrinkWrap,\n        backgroundColor: Colors.grey[200],\n        shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(8.0)),\n      ),\n      child: Text(\n        text,\n        style: textTheme.bodySmall?.copyWith(color: Colors.grey[700]),\n      ),\n    );\n  }\n}\n\nclass _HotelAttributeChip extends StatelessWidget {\n  final IconData icon;\n  final String text;\n\n  const _HotelAttributeChip({required this.icon, required this.text});\n\n  @override\n  Widget build(BuildContext context) {\n    final TextTheme textTheme = Theme.of(context).textTheme;\n    return Container(\n      padding: const EdgeInsets.symmetric(horizontal: 16.0, vertical: 8.0),\n      decoration: BoxDecoration(\n        color: Colors.grey[200], // Light grey background\n        borderRadius: BorderRadius.circular(10.0),\n      ),\n      child: Row(\n        mainAxisSize: MainAxisSize.min,\n        children: [\n          Icon(icon, size: 18, color: Colors.grey[700]),\n          const SizedBox(width: 8.0),\n          Text(\n            text,\n            style: textTheme.bodyMedium?.copyWith(color: Colors.grey[700]),\n          ),\n        ],\n      ),\n    );\n  }\n}\n\nclass _TabButton extends StatelessWidget {\n  final String text;\n  final bool isSelected;\n  final VoidCallback onTap;\n  final Color primaryColor;\n  final TextTheme textTheme;\n\n  const _TabButton({\n    required this.text,\n    required this.isSelected,\n    required this.onTap,\n    required this.primaryColor,\n    required this.textTheme,\n  });\n\n  @override\n  Widget build(BuildContext context) {\n    return GestureDetector(\n      onTap: onTap,\n      child: Column(\n        children: [\n          Padding(\n            padding: const EdgeInsets.symmetric(\n              horizontal: 12.0,\n              vertical: 8.0,\n            ),\n            child: Text(\n              text,\n              style: textTheme.bodyLarge?.copyWith(\n                color: isSelected ? primaryColor : Colors.grey[700],\n                fontWeight: isSelected ? FontWeight.bold : FontWeight.normal,\n              ),\n            ),\n          ),\n          Container(\n            height: 3.0,\n            width: isSelected ? 40.0 : 0.0, // Underline for selected tab\n            decoration: BoxDecoration(\n              color: primaryColor,\n              borderRadius: BorderRadius.circular(2.0),\n            ),\n          ),\n        ],\n      ),\n    );\n  }\n}\n\nclass _AmenityItem extends StatelessWidget {\n  final IconData icon;\n  final String text;\n\n  const _AmenityItem({required this.icon, required this.text});\n\n  @override\n  Widget build(BuildContext context) {\n    final TextTheme textTheme = Theme.of(context).textTheme;\n    return Row(\n      mainAxisSize: MainAxisSize.min,\n      children: [\n        Icon(icon, size: 20, color: Colors.grey[700]),\n        const SizedBox(width: 8.0),\n        Expanded(\n          // Use Expanded to ensure text wraps within available space\n          child: Text(\n            text,\n            style: textTheme.bodyMedium?.copyWith(color: Colors.grey[700]),\n            overflow: TextOverflow.ellipsis,\n          ),\n        ),\n      ],\n    );\n  }\n}\n\nclass _GalleryImage extends StatelessWidget {\n  final String imageUrl;\n  final double height;\n\n  const _GalleryImage({\n    required this.imageUrl,\n    this.height = 200, // Default height for the main image\n  });\n\n  @override\n  Widget build(BuildContext context) {\n    return ClipRRect(\n      borderRadius: BorderRadius.circular(10.0),\n      child: Image.network(\n        imageUrl,\n        height: height,\n        width: double.infinity,\n        fit: BoxFit.cover,\n        errorBuilder:\n            (context, error, stackTrace) => Container(\n              height: height,\n              width: double.infinity,\n              color: Colors.grey[300],\n              child: Icon(\n                Icons.image,\n                size: height / 2,\n                color: Colors.grey[600],\n              ),\n            ),\n      ),\n    );\n  }\n}\n```\n\n// File: lib\\screens\\hotel_filter_screen.dart\n```dart\nimport 'package:flutter/material.dart';\nimport 'package:ai_travel_app_ui_kit/components/buttons/primary_text_button.dart';\n\nclass HotelFilterScreen extends StatefulWidget {\n  const HotelFilterScreen({super.key});\n\n  @override\n  State<HotelFilterScreen> createState() => _HotelFilterScreenState();\n}\n\nclass _HotelFilterScreenState extends State<HotelFilterScreen> {\n  String? _sortBySelection = 'Recommended';\n  RangeValues _priceRange = const RangeValues(10000, 20000);\n  final TextEditingController _fromPriceController = TextEditingController(\n    text: '10,000 BDT',\n  );\n  final TextEditingController _toPriceController = TextEditingController(\n    text: '20,000 BDT',\n  );\n\n  final Map<String, bool> _popularFilters = {\n    'Pool': true,\n    'Pet Friendly': false,\n    'Breakfast Included': true,\n    'Reserve Now, Pay Later': true,\n  };\n\n  int _selectedStarRating = 4; // Default to 4 stars\n\n  final Map<String, bool> _accessibilityOptions = {\n    'Elevator': true,\n    'Accessible Bathroom': false,\n    'In-room Services': true,\n    'Food Delivery Service Friendly': true,\n  };\n\n  int? _selectedBedrooms = 4; // Default to 4\n\n  final Map<String, bool> _travelersExperience = {\n    'Eco-certified': true,\n    'Business Friendly': false,\n    'Guest Friendly': false,\n  };\n\n  @override\n  void dispose() {\n    _fromPriceController.dispose();\n    _toPriceController.dispose();\n    super.dispose();\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    final TextTheme textTheme = Theme.of(context).textTheme;\n    final Color primaryColor = Theme.of(context).primaryColor;\n    final ColorScheme colorScheme = Theme.of(context).colorScheme;\n\n    return Scaffold(\n      backgroundColor: Colors.white, // Light grey background\n      appBar: AppBar(\n        scrolledUnderElevation: 0,\n        backgroundColor: Colors.transparent,\n        elevation: 0,\n        leading: IconButton(\n          icon: Icon(Icons.arrow_back, color: primaryColor, size: 20),\n          onPressed: () {\n            Navigator.of(context).pop();\n          },\n        ),\n        title: Text(\n          'Book a Hotel',\n          style: textTheme.titleLarge?.copyWith(\n            fontWeight: FontWeight.bold,\n            color: Colors.grey[800],\n            fontSize: 18,\n          ),\n        ),\n        centerTitle: true,\n        actions: [\n          TextButton(\n            onPressed: () {\n              // TODO: Implement clear filters action\n              setState(() {\n                _sortBySelection = 'Recommended';\n                _priceRange = const RangeValues(10000, 20000);\n                _fromPriceController.text = '10,000 BDT';\n                _toPriceController.text = '20,000 BDT';\n                _popularFilters.updateAll(\n                  (key, value) => false,\n                ); // Reset all to false\n                _popularFilters['Pool'] =\n                    true; // Set default active as per image\n                _popularFilters['Breakfast Included'] = true;\n                _popularFilters['Reserve Now, Pay Later'] = true;\n\n                _selectedStarRating = 4;\n                _accessibilityOptions.updateAll((key, value) => false);\n                _accessibilityOptions['Elevator'] = true;\n                _accessibilityOptions['In-room Services'] = true;\n                _accessibilityOptions['Food Delivery Service Friendly'] = true;\n\n                _selectedBedrooms = 4;\n                _travelersExperience.updateAll((key, value) => false);\n                _travelersExperience['Eco-certified'] = true;\n              });\n              print('Filters cleared');\n            },\n            child: Text(\n              'Clear',\n              style: textTheme.bodyLarge?.copyWith(color: Colors.grey[700]),\n            ),\n          ),\n          const SizedBox(width: 8.0),\n        ],\n      ),\n      body: Column(\n        children: [\n          Expanded(\n            child: ListView(\n              padding: const EdgeInsets.symmetric(horizontal: 24.0),\n              children: [\n                _buildSectionTitle(context, 'Sort By'),\n                ...['Recommended', 'Popularity', 'Rating', 'Nearby'].map((\n                  option,\n                ) {\n                  return RadioListTile<String>(\n                    title: Text(\n                      option,\n                      style: textTheme.bodyLarge?.copyWith(\n                        color: Colors.grey[700],\n                      ),\n                    ),\n                    value: option,\n                    groupValue: _sortBySelection,\n                    onChanged: (String? value) {\n                      setState(() {\n                        _sortBySelection = value;\n                      });\n                    },\n                    activeColor: primaryColor,\n                    controlAffinity: ListTileControlAffinity.trailing,\n                  );\n                }).toList(),\n                Divider(\n                  color: Colors.grey.withValues(alpha: 0.5),\n                  indent: 24,\n                  endIndent: 24,\n                  thickness: 0.5,\n                ),\n                _buildSectionTitle(context, 'Pricing'),\n                const SizedBox(height: 16.0),\n                // Removed Image.network for price graph as requested\n                RangeSlider(\n                  values: _priceRange,\n                  min: 0,\n                  max: 30000,\n                  divisions: 300,\n                  labels: RangeLabels(\n                    _priceRange.start.round().toString(),\n                    _priceRange.end.round().toString(),\n                  ),\n                  onChanged: (RangeValues values) {\n                    setState(() {\n                      _priceRange = values;\n                      _fromPriceController.text =\n                          '${values.start.round()},000 BDT';\n                      _toPriceController.text = '${values.end.round()},000 BDT';\n                    });\n                  },\n                  activeColor: primaryColor,\n                  inactiveColor: primaryColor.withOpacity(0.2),\n                ),\n                Padding(\n                  padding: const EdgeInsets.symmetric(horizontal: 16.0),\n                  child: Row(\n                    children: [\n                      Expanded(\n                        child: TextField(\n                          controller: _fromPriceController,\n                          readOnly: true,\n                          textAlign: TextAlign.center,\n                          decoration: InputDecoration(\n                            filled: true,\n                            fillColor: Colors.grey[200],\n                            border: OutlineInputBorder(\n                              borderRadius: BorderRadius.circular(10.0),\n                              borderSide: BorderSide.none,\n                            ),\n                            contentPadding: const EdgeInsets.symmetric(\n                              vertical: 12.0,\n                            ),\n                          ),\n                          style: textTheme.bodyMedium?.copyWith(\n                            color: Colors.grey[800],\n                          ),\n                        ),\n                      ),\n                      const SizedBox(width: 8.0),\n                      Text(\n                        '-',\n                        style: textTheme.bodyLarge?.copyWith(\n                          color: Colors.grey[700],\n                        ),\n                      ),\n                      const SizedBox(width: 8.0),\n                      Expanded(\n                        child: TextField(\n                          controller: _toPriceController,\n                          readOnly: true,\n                          textAlign: TextAlign.center,\n                          decoration: InputDecoration(\n                            filled: true,\n                            fillColor: Colors.grey[200],\n                            border: OutlineInputBorder(\n                              borderRadius: BorderRadius.circular(10.0),\n                              borderSide: BorderSide.none,\n                            ),\n                            contentPadding: const EdgeInsets.symmetric(\n                              vertical: 12.0,\n                            ),\n                          ),\n                          style: textTheme.bodyMedium?.copyWith(\n                            color: Colors.grey[800],\n                          ),\n                        ),\n                      ),\n                    ],\n                  ),\n                ),\n                Divider(\n                  color: Colors.grey.withValues(alpha: 0.5),\n                  thickness: 0.5,\n                  indent: 24,\n                  endIndent: 24,\n                  height: 40,\n                ),\n\n                _buildSectionTitle(context, 'Popular Filters'),\n                ..._popularFilters.keys.map((filter) {\n                  return CheckboxListTile(\n                    title: Text(\n                      filter,\n                      style: textTheme.bodyLarge?.copyWith(\n                        color: Colors.grey[700],\n                      ),\n                    ),\n                    value: _popularFilters[filter],\n                    onChanged: (bool? value) {\n                      setState(() {\n                        _popularFilters[filter] = value!;\n                      });\n                    },\n                    activeColor: primaryColor,\n                    checkColor: colorScheme.onPrimary,\n                    controlAffinity: ListTileControlAffinity.trailing,\n                  );\n                }).toList(),\n                Divider(\n                  color: Colors.grey.withValues(alpha: 0.5),\n                  indent: 24,\n                  endIndent: 24,\n                  thickness: 0.5,\n                ),\n\n                _buildSectionTitle(context, 'Filter by minimum star rating'),\n                const SizedBox(height: 16.0),\n                // Adjusted padding to prevent overflow\n                Padding(\n                  padding: const EdgeInsets.symmetric(\n                    horizontal: 0.0,\n                  ), // Reduced horizontal padding\n                  child: Row(\n                    mainAxisAlignment:\n                        MainAxisAlignment.spaceEvenly, // Distribute evenly\n                    children: List.generate(5, (index) {\n                      final star = index + 1;\n                      return GestureDetector(\n                        onTap: () {\n                          setState(() {\n                            _selectedStarRating = star;\n                          });\n                        },\n                        child: Container(\n                          padding: const EdgeInsets.symmetric(\n                            horizontal: 10.0,\n                            vertical: 10.0,\n                          ), // Reduced internal padding\n                          margin: const EdgeInsets.symmetric(\n                            horizontal: 2.0,\n                          ), // Reduced margin between items\n                          decoration: BoxDecoration(\n                            color:\n                                _selectedStarRating >= star\n                                    ? primaryColor.withOpacity(0.1)\n                                    : Colors.transparent,\n                            borderRadius: BorderRadius.circular(10.0),\n                            border: Border.all(\n                              color:\n                                  _selectedStarRating >= star\n                                      ? primaryColor.withOpacity(0.3)\n                                      : Colors.grey[300]!,\n                              width: 1.5,\n                            ),\n                          ),\n                          child: Row(\n                            mainAxisSize: MainAxisSize.min,\n                            children: [\n                              Text(\n                                '$star',\n                                style: textTheme.bodySmall?.copyWith(\n                                  color:\n                                      _selectedStarRating >= star\n                                          ? primaryColor\n                                          : Colors.grey[700],\n                                ),\n                              ),\n                              const SizedBox(width: 4.0),\n                              Icon(\n                                Icons.star,\n                                size: 16,\n                                color:\n                                    _selectedStarRating >= star\n                                        ? primaryColor\n                                        : Colors.grey[400],\n                              ),\n                            ],\n                          ),\n                        ),\n                      );\n                    }),\n                  ),\n                ),\n                Divider(\n                  color: Colors.grey.withValues(alpha: 0.5),\n                  thickness: 0.5,\n                  indent: 24,\n                  endIndent: 24,\n                  height: 40,\n                ),\n\n                _buildSectionTitle(context, 'Accessibility'),\n                ..._accessibilityOptions.keys.map((option) {\n                  return CheckboxListTile(\n                    title: Text(\n                      option,\n                      style: textTheme.bodyLarge?.copyWith(\n                        color: Colors.grey[700],\n                      ),\n                    ),\n                    value: _accessibilityOptions[option],\n                    onChanged: (bool? value) {\n                      setState(() {\n                        _accessibilityOptions[option] = value!;\n                      });\n                    },\n                    activeColor: primaryColor,\n                    checkColor: colorScheme.onPrimary,\n                    controlAffinity: ListTileControlAffinity.trailing,\n                  );\n                }).toList(),\n                Divider(\n                  color: Colors.grey.withValues(alpha: 0.5),\n                  indent: 24,\n                  endIndent: 24,\n                  thickness: 0.5,\n                ),\n\n                _buildSectionTitle(context, 'Number of Bedrooms'),\n                const SizedBox(height: 16.0),\n                Padding(\n                  padding: const EdgeInsets.only(right: 8.0),\n                  child: Center(\n                    child: Row(\n                      mainAxisSize: MainAxisSize.min,\n                      children: List.generate(5, (index) {\n                        final count = index + 1;\n                        final String displayText = count == 5 ? '5+' : '$count';\n                        return GestureDetector(\n                          onTap: () {\n                            setState(() {\n                              _selectedBedrooms = count;\n                            });\n                          },\n                          child: Container(\n                            padding: const EdgeInsets.symmetric(\n                              horizontal: 16.0,\n                              vertical: 10.0,\n                            ),\n                            margin: const EdgeInsets.symmetric(horizontal: 4.0),\n                            decoration: BoxDecoration(\n                              color:\n                                  _selectedBedrooms == count\n                                      ? primaryColor.withOpacity(0.1)\n                                      : Colors.transparent,\n                              borderRadius: BorderRadius.circular(10.0),\n                              border: Border.all(\n                                color:\n                                    _selectedBedrooms == count\n                                        ? primaryColor.withOpacity(0.3)\n                                        : Colors.grey[300]!,\n                                width: 1.5,\n                              ),\n                            ),\n                            child: Text(\n                              displayText,\n                              style: textTheme.bodySmall?.copyWith(\n                                color:\n                                    _selectedBedrooms == count\n                                        ? primaryColor\n                                        : Colors.grey[700],\n                              ),\n                            ),\n                          ),\n                        );\n                      }),\n                    ),\n                  ),\n                ),\n                Divider(\n                  color: Colors.grey.withValues(alpha: 0.5),\n                  thickness: 0.5,\n                  indent: 24,\n                  endIndent: 24,\n                  height: 40,\n                ),\n\n                _buildSectionTitle(context, 'Travelers experience'),\n                ..._travelersExperience.keys.map((option) {\n                  return CheckboxListTile(\n                    title: Text(\n                      option,\n                      style: textTheme.bodyLarge?.copyWith(\n                        color: Colors.grey[700],\n                      ),\n                    ),\n                    value: _travelersExperience[option],\n                    onChanged: (bool? value) {\n                      setState(() {\n                        _travelersExperience[option] = value!;\n                      });\n                    },\n                    activeColor: primaryColor,\n                    checkColor: colorScheme.onPrimary,\n                    controlAffinity: ListTileControlAffinity.trailing,\n                  );\n                }).toList(),\n                const SizedBox(height: 40.0), // Padding before button\n              ],\n            ),\n          ),\n          Padding(\n            padding: const EdgeInsets.symmetric(\n              horizontal: 24.0,\n              vertical: 24.0,\n            ),\n            child: PrimaryTextButton(\n              text: 'Done',\n              onPressed: () {\n                // TODO: Implement apply filters action\n                print('Filters applied');\n              },\n            ),\n          ),\n        ],\n      ),\n    );\n  }\n\n  Widget _buildSectionTitle(BuildContext context, String title) {\n    final TextTheme textTheme = Theme.of(context).textTheme;\n    return Padding(\n      padding: const EdgeInsets.only(top: 24.0, bottom: 16.0),\n      child: Text(\n        title,\n        style: textTheme.titleMedium?.copyWith(\n          fontWeight: FontWeight.w600,\n          color: Colors.grey[700],\n        ),\n      ),\n    );\n  }\n}\n```\n\n// File: lib\\screens\\onboarding_screen.dart\n```dart\nimport 'package:flutter/material.dart';\nimport 'package:font_awesome_flutter/font_awesome_flutter.dart';\nimport 'package:google_fonts/google_fonts.dart';\nimport 'package:ai_travel_app_ui_kit/components/buttons/social_auth_button.dart';\nimport 'package:ai_travel_app_ui_kit/components/buttons/primary_text_button.dart';\n\nclass OnboardingScreen extends StatelessWidget {\n  const OnboardingScreen({super.key});\n\n  @override\n  Widget build(BuildContext context) {\n    // Access theme for consistent styling\n    final TextTheme textTheme = Theme.of(context).textTheme;\n    final Color primaryColor = Theme.of(context).primaryColor;\n\n    return Scaffold(\n      backgroundColor:\n          Colors.white, // Using white as a base, similar to UIKit surface\n      body: Stack(\n        children: [\n          // \"Try Now\" button in the top right\n          Positioned(\n            top:\n                MediaQuery.of(context).padding.top +\n                16.0, // Adjust for safe area\n            right: 16.0,\n            child: TextButton(\n              onPressed: () {\n                // TODO: Implement navigation to next screen\n              },\n              child: Text(\n                'Try Now',\n                style: textTheme.bodyLarge?.copyWith(\n                  color: primaryColor,\n                ), // Assuming bodyLarge for \"Try Now\"\n              ),\n            ),\n          ),\n          Padding(\n            padding: const EdgeInsets.symmetric(horizontal: 24.0),\n            child: Column(\n              crossAxisAlignment: CrossAxisAlignment.start,\n              children: [\n                SizedBox(\n                  height: MediaQuery.of(context).size.height * 0.3,\n                ), // Placeholder for top spacing\n                Text(\n                  'Rethink\\nSimplicity',\n                  style: textTheme.displayMedium?.copyWith(\n                    fontWeight: FontWeight.bold,\n                    fontSize: 36, // Font size reduced to 36 as requested\n                    color: Colors.grey[800], // Darker grey for prominent text\n                  ),\n                ),\n                const SizedBox(height: 16.0),\n                Text(\n                  'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip.',\n                  style: textTheme.bodyLarge?.copyWith(\n                    color: Colors.grey[600], // Lighter grey for body text\n                    height: 1.5,\n                  ),\n                ),\n                const SizedBox(height: 24.0),\n                Row(\n                  mainAxisAlignment: MainAxisAlignment.start,\n                  children: List.generate(3, (index) {\n                    return Container(\n                      margin: const EdgeInsets.symmetric(horizontal: 4.0),\n                      width:\n                          index == 0 ? 20.0 : 8.0, // First dot slightly wider\n                      height: 8.0,\n                      decoration: BoxDecoration(\n                        color:\n                            index == 0\n                                ? primaryColor\n                                : Colors\n                                    .grey[300], // First dot is primary, others are lighter\n                        borderRadius: BorderRadius.circular(4.0),\n                      ),\n                    );\n                  }),\n                ),\n                const Spacer(), // Pushes content to the bottom\n                SocialAuthButton(\n                  type: ButtonType.apple,\n                  onPressed: () {\n                    // TODO: Implement Continue with Apple functionality\n                  },\n                ),\n                const SizedBox(height: 16.0),\n                PrimaryTextButton(\n                  text: 'Signup / Login with phone',\n                  onPressed: () {\n                    // TODO: Implement Signup / Login with phone functionality\n                  },\n                ),\n                const SizedBox(height: 40.0), // Bottom padding\n              ],\n            ),\n          ),\n        ],\n      ),\n    );\n  }\n}\n```\n\n// File: lib\\screens\\order_status_screen.dart\n```dart\nimport 'package:flutter/material.dart';\n\nclass OrderStatusScreen extends StatefulWidget {\n  const OrderStatusScreen({super.key});\n\n  @override\n  State<OrderStatusScreen> createState() => _OrderStatusScreenState();\n}\n\nclass _OrderStatusScreenState extends State<OrderStatusScreen> {\n  String _selectedCategory = 'Hotel'; // Default selected category\n\n  @override\n  Widget build(BuildContext context) {\n    final TextTheme textTheme = Theme.of(context).textTheme;\n    final Color primaryColor = Theme.of(context).primaryColor;\n    final ColorScheme colorScheme = Theme.of(context).colorScheme;\n\n    return Scaffold(\n      backgroundColor: Colors.grey[100], // Light grey background\n      appBar: AppBar(\n        scrolledUnderElevation: 0,\n        backgroundColor: Colors.grey[100],\n        elevation: 0,\n        leading: IconButton(\n          icon: Icon(Icons.arrow_back, color: primaryColor), // Set back icon color to primaryColor\n          onPressed: () {\n            Navigator.of(context).pop();\n          },\n        ),\n        title: Row( // Changed Column to Row\n          mainAxisSize: MainAxisSize.min, // Ensure row takes minimum space\n          children: [\n            Text(\n              'Order Status',\n              style: textTheme.titleLarge?.copyWith(\n                fontWeight: FontWeight.bold,\n                color: Colors.grey[800],\n                fontSize: 18,\n              ),\n            ),\n            const SizedBox(width: 8.0), // Add some spacing between texts\n            Text(\n              'Messages (1)',\n              style: textTheme.bodySmall?.copyWith(\n                color: Colors.grey[600],\n                fontSize: 12,\n              ),\n            ),\n          ],\n        ),\n        centerTitle: false, // Align title to start\n        actions: [\n          IconButton(\n            icon: Icon(Icons.search, color: primaryColor), // Set search icon color to primaryColor\n            onPressed: () {\n              // TODO: Implement search action\n            },\n          ),\n          const SizedBox(width: 8.0),\n        ],\n      ),\n      body: Column(\n        crossAxisAlignment: CrossAxisAlignment.start,\n        children: [\n          const SizedBox(height: 16.0),\n          Padding(\n            padding: const EdgeInsets.symmetric(horizontal: 24.0),\n            child: SingleChildScrollView( // Added SingleChildScrollView\n              scrollDirection: Axis.horizontal,\n              child: Row(\n                children: [\n                  _OrderCategoryTab(\n                    text: 'All',\n                    isSelected: _selectedCategory == 'All',\n                    onTap: () {\n                      setState(() {\n                        _selectedCategory = 'All';\n                      });\n                    },\n                    primaryColor: primaryColor,\n                    textTheme: textTheme,\n                  ),\n                  const SizedBox(width: 8.0),\n                  _OrderCategoryTab(\n                    text: 'Hotel',\n                    isSelected: _selectedCategory == 'Hotel',\n                    onTap: () {\n                      setState(() {\n                        _selectedCategory = 'Hotel';\n                      });\n                    },\n                    primaryColor: primaryColor,\n                    textTheme: textTheme,\n                  ),\n                  const SizedBox(width: 8.0),\n                  _OrderCategoryTab(\n                    text: 'Convention Center',\n                    isSelected: _selectedCategory == 'Convention Center',\n                    onTap: () {\n                      setState(() {\n                        _selectedCategory = 'Convention Center';\n                      });\n                    },\n                    primaryColor: primaryColor,\n                    textTheme: textTheme,\n                  ),\n                  const SizedBox(width: 8.0),\n                  _OrderCategoryTab(\n                    text: 'Flights',\n                    isSelected: _selectedCategory == 'Flights',\n                    onTap: () {\n                      setState(() {\n                        _selectedCategory = 'Flights';\n                      });\n                    },\n                    primaryColor: primaryColor,\n                    textTheme: textTheme,\n                  ),\n                ],\n              ),\n            ),\n          ),\n          const SizedBox(height: 24.0),\n          Padding(\n            padding: const EdgeInsets.symmetric(horizontal: 24.0),\n            child: Text(\n              'Hotel Booking',\n              style: textTheme.titleMedium?.copyWith(\n                fontWeight: FontWeight.bold,\n                color: Colors.grey[800],\n              ),\n            ),\n          ),\n          const SizedBox(height: 16.0),\n          Expanded(\n            child: ListView.builder(\n              padding: const EdgeInsets.symmetric(horizontal: 24.0),\n              itemCount: 3, // Example number of booking cards\n              itemBuilder: (context, index) {\n                return Padding(\n                  padding: const EdgeInsets.only(bottom: 16.0),\n                  child: _BookingStatusCard(\n                    roomType: 'Room Booking',\n                    roomName: 'Loft Style Guest suite with\\nPrivate Bathroom',\n                    rating: '4.9 (240)',\n                    status: 'Pending',\n                    textTheme: textTheme,\n                    colorScheme: colorScheme,\n                    // Use different image for each card\n                    imageUrl: 'https://picsum.photos/100/100?random=${index + 10}',\n                  ),\n                );\n              },\n            ),\n          ),\n        ],\n      ),\n    );\n  }\n}\n\nclass _OrderCategoryTab extends StatelessWidget {\n  final String text;\n  final bool isSelected;\n  final VoidCallback onTap;\n  final Color primaryColor;\n  final TextTheme textTheme;\n\n  const _OrderCategoryTab({\n    required this.text,\n    required this.isSelected,\n    required this.onTap,\n    required this.primaryColor,\n    required this.textTheme,\n  });\n\n  @override\n  Widget build(BuildContext context) {\n    return GestureDetector(\n      onTap: onTap,\n      child: Container(\n        padding: const EdgeInsets.symmetric(horizontal: 20.0, vertical: 12.0), // Reverted padding\n        decoration: BoxDecoration(\n          color: isSelected ? primaryColor : Colors.transparent, // Reverted inactive background\n          borderRadius: BorderRadius.circular(10.0), // Rounded corners\n          border: Border.all(color: Colors.grey[300]!, width: 1.0), // Reverted inactive border\n        ),\n        child: Text(\n          text,\n          style: textTheme.bodyMedium?.copyWith(\n            color: isSelected ? Colors.white : Colors.grey[700], // Reverted inactive text color\n            fontWeight: isSelected ? FontWeight.bold : FontWeight.normal,\n          ),\n        ),\n      ),\n    );\n  }\n}\n\nclass _BookingStatusCard extends StatelessWidget {\n  final String roomType;\n  final String roomName;\n  final String rating;\n  final String status;\n  final String imageUrl;\n  final TextTheme textTheme;\n  final ColorScheme colorScheme;\n\n  const _BookingStatusCard({\n    required this.roomType,\n    required this.roomName,\n    required this.rating,\n    required this.status,\n    required this.imageUrl,\n    required this.textTheme,\n    required this.colorScheme,\n  });\n\n  @override\n  Widget build(BuildContext context) {\n    return Container(\n      padding: const EdgeInsets.all(16.0),\n      decoration: BoxDecoration(\n        color: colorScheme.surface, // White background\n        borderRadius: BorderRadius.circular(15.0),\n        boxShadow: [\n          BoxShadow(\n            color: Colors.grey.withOpacity(0.1),\n            spreadRadius: 1,\n            blurRadius: 5,\n            offset: const Offset(0, 3),\n          ),\n        ],\n      ),\n      child: Row(\n        crossAxisAlignment: CrossAxisAlignment.start,\n        children: [\n          ClipRRect(\n            borderRadius: BorderRadius.circular(10.0),\n            child: Image.network(\n              imageUrl, // Placeholder image\n              height: 100, // Increased image height\n              width: 100, // Increased image width\n              fit: BoxFit.cover,\n              errorBuilder: (context, error, stackTrace) => Container(\n                height: 100, // Match increased height\n                width: 100, // Match increased width\n                color: Colors.grey[300],\n                child: Icon(Icons.image, color: Colors.grey[600], size: 50), // Adjust icon size accordingly\n              ),\n            ),\n          ),\n          const SizedBox(width: 16.0),\n          Expanded(\n            child: Column(\n              crossAxisAlignment: CrossAxisAlignment.start,\n              children: [\n                Text(\n                  roomType,\n                  style: textTheme.bodyMedium?.copyWith(color: Colors.grey[600]),\n                ),\n                const SizedBox(height: 4.0),\n                Text(\n                  roomName,\n                  style: textTheme.titleMedium?.copyWith(\n                    fontWeight: FontWeight.bold,\n                    color: Colors.grey[800],\n                  ),\n                  maxLines: 2,\n                  overflow: TextOverflow.ellipsis,\n                ),\n                const SizedBox(height: 4.0),\n                Row(\n                  children: [\n                    Icon(Icons.star, color: Colors.amber, size: 16),\n                    const SizedBox(width: 4.0),\n                    Text(\n                      rating,\n                      style: textTheme.bodySmall?.copyWith(color: Colors.grey[700]),\n                    ),\n                  ],\n                ),\n              ],\n            ),\n          ),\n          const SizedBox(width: 16.0), // Space before status tag\n          Align(\n            alignment: Alignment.topRight,\n            child: Container(\n              padding: const EdgeInsets.symmetric(horizontal: 12.0, vertical: 6.0),\n              decoration: BoxDecoration(\n                color: Colors.grey[200], // Light grey background for status\n                borderRadius: BorderRadius.circular(20.0),\n              ),\n              child: Text(\n                status,\n                style: textTheme.bodySmall?.copyWith(color: Colors.grey[700]),\n              ),\n            ),\n          ),\n        ],\n      ),\n    );\n  }\n}\n```\n\n// File: lib\\screens\\phone_input_screen.dart\n```dart\nimport 'package:flutter/material.dart';\nimport 'package:google_fonts/google_fonts.dart';\n\nclass PhoneInputScreen extends StatelessWidget {\n  const PhoneInputScreen({super.key});\n\n  @override\n  Widget build(BuildContext context) {\n    final TextTheme textTheme = Theme.of(context).textTheme;\n    final Color primaryColor = Theme.of(context).primaryColor;\n    final ColorScheme colorScheme = Theme.of(context).colorScheme;\n\n    return Scaffold(\n      backgroundColor: colorScheme.surface, // Use theme surface color, which is white\n      appBar: AppBar(\n        backgroundColor: colorScheme.surface, // AppBar background should match screen background\n        elevation: 0,\n        leading: IconButton(\n          icon: Icon(Icons.arrow_back_ios, color: primaryColor), // Back arrow icon matching UIKit style\n          onPressed: () {\n            // TODO: Implement navigation back\n          },\n        ),\n        actions: [\n          Padding(\n            padding: const EdgeInsets.only(right: 16.0),\n            child: TextButton(\n              onPressed: () {\n                // TODO: Implement \"Try Now\" action\n              },\n              child: Text(\n                'Try Now',\n                style: textTheme.bodyLarge?.copyWith(color: primaryColor),\n              ),\n            ),\n          ),\n        ],\n      ),\n      body: Padding(\n        padding: const EdgeInsets.symmetric(horizontal: 24.0),\n        child: Column(\n          crossAxisAlignment: CrossAxisAlignment.start,\n          children: [\n            const SizedBox(height: 40.0), // Spacing from app bar\n            Text(\n              'Hello,\\nwhat\\'s your phone number?',\n              style: textTheme.headlineMedium?.copyWith(\n                fontWeight: FontWeight.bold,\n                color: Colors.grey[850], // Darker text for prominence, consistent with UIKit\n              ),\n            ),\n            const SizedBox(height: 8.0),\n            Text(\n              'Customer Messages may be sent within iOS\\nNotifications or visa SMS.',\n              style: textTheme.bodyMedium?.copyWith(\n                color: Colors.grey[600], // Lighter text for subtitle, consistent with UIKit\n              ),\n            ),\n            const SizedBox(height: 32.0),\n            TextField(\n              keyboardType: TextInputType.phone,\n              decoration: InputDecoration(\n                hintText: 'Number?',\n                hintStyle: textTheme.bodyLarge?.copyWith(color: Colors.grey[500]),\n                filled: true,\n                fillColor: Colors.grey[200], // Light grey background for the input field, matching image\n                border: OutlineInputBorder(\n                  borderRadius: BorderRadius.circular(10.0),\n                  borderSide: BorderSide.none, // No border line, matching image\n                ),\n                contentPadding: const EdgeInsets.symmetric(horizontal: 16.0, vertical: 16.0),\n              ),\n              style: textTheme.bodyLarge?.copyWith(color: Colors.grey[850]),\n            ),\n            const Spacer(), // Pushes content to the bottom\n            SizedBox(\n              width: double.infinity,\n              height: 50.0, // Standard button height, consistent with UIKit\n              child: FilledButton(\n                onPressed: () {\n                  // TODO: Implement continue action\n                },\n                style: FilledButton.styleFrom(\n                  backgroundColor: primaryColor,\n                  shape: RoundedRectangleBorder(\n                    borderRadius: BorderRadius.circular(10.0), // Rounded corners for the button, consistent with UIKit\n                  ),\n                ),\n                child: Text(\n                  'Continue',\n                  style: textTheme.bodyLarge?.copyWith(\n                    color: Colors.white,\n                    fontWeight: FontWeight.bold,\n                  ),\n                ),\n              ),\n            ),\n            const SizedBox(height: 20.0),\n            Align(\n              alignment: Alignment.center,\n              child: RichText(\n                textAlign: TextAlign.center,\n                text: TextSpan(\n                  style: textTheme.bodySmall?.copyWith(color: Colors.grey[600], height: 1.5),\n                  children: [\n                    const TextSpan(\n                      text: 'By continuing, you confirm you\\'ve read and agree to our\\n',\n                    ),\n                    TextSpan(\n                      text: 'Terms of Service',\n                      style: textTheme.bodySmall?.copyWith(\n                        color: Colors.grey[800], // Darker for bolded parts, matching image\n                        fontWeight: FontWeight.bold,\n                      ),\n                    ),\n                    const TextSpan(\n                      text: ' and ',\n                    ),\n                    TextSpan(\n                      text: 'Privacy Notice',\n                      style: textTheme.bodySmall?.copyWith(\n                        color: Colors.grey[800], // Darker for bolded parts, matching image\n                        fontWeight: FontWeight.bold,\n                      ),\n                    ),\n                    const TextSpan(\n                      text: ' on how we collect, use,\\ndisclose, and process your personal data.',\n                    ),\n                  ],\n                ),\n              ),\n            ),\n            const SizedBox(height: 40.0), // Bottom padding\n          ],\n        ),\n      ),\n    );\n  }\n}\n```\n\n// File: lib\\screens\\profile_screen.dart\n```dart\nimport 'package:flutter/material.dart';\nimport 'package:ai_travel_app_ui_kit/components/buttons/primary_text_button.dart';\n\nclass ProfileScreen extends StatefulWidget {\n  const ProfileScreen({super.key});\n\n  @override\n  State<ProfileScreen> createState() => _ProfileScreenState();\n}\n\nclass _ProfileScreenState extends State<ProfileScreen> {\n  final FocusNode _nameFocusNode = FocusNode();\n  final FocusNode _mobileNumberFocusNode = FocusNode();\n  final FocusNode _locationFocusNode = FocusNode();\n\n  Color? _nameFillColor;\n  Color? _mobileNumberFillColor;\n  Color? _locationFillColor;\n\n  @override\n  void initState() {\n    super.initState();\n    _nameFocusNode.addListener(_updateNameFillColor);\n    _mobileNumberFocusNode.addListener(_updateMobileNumberFillColor);\n    _locationFocusNode.addListener(_updateLocationFillColor);\n  }\n\n  @override\n  void dispose() {\n    _nameFocusNode.removeListener(_updateNameFillColor);\n    _nameFocusNode.dispose();\n    _mobileNumberFocusNode.removeListener(_updateMobileNumberFillColor);\n    _mobileNumberFocusNode.dispose();\n    _locationFocusNode.removeListener(_updateLocationFillColor);\n    _locationFocusNode.dispose();\n    super.dispose();\n  }\n\n  void _updateNameFillColor() {\n    setState(() {\n      _nameFillColor = _nameFocusNode.hasFocus\n          ? Theme.of(context).primaryColor.withOpacity(0.05)\n          : Theme.of(context).colorScheme.surface;\n    });\n  }\n\n  void _updateMobileNumberFillColor() {\n    setState(() {\n      _mobileNumberFillColor = _mobileNumberFocusNode.hasFocus\n          ? Theme.of(context).primaryColor.withOpacity(0.05)\n          : Theme.of(context).colorScheme.surface;\n    });\n  }\n\n  void _updateLocationFillColor() {\n    setState(() {\n      _locationFillColor = _locationFocusNode.hasFocus\n          ? Theme.of(context).primaryColor.withOpacity(0.05)\n          : Theme.of(context).colorScheme.surface;\n    });\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    final TextTheme textTheme = Theme.of(context).textTheme;\n    final Color primaryColor = Theme.of(context).primaryColor;\n    final ColorScheme colorScheme = Theme.of(context).colorScheme;\n\n    // Initialize default fill colors\n    _nameFillColor ??= colorScheme.surface;\n    _mobileNumberFillColor ??= colorScheme.surface;\n    _locationFillColor ??= colorScheme.surface;\n\n    return Scaffold(\n      backgroundColor: Colors.grey[100], // Light grey background\n      appBar: AppBar(\n        scrolledUnderElevation: 0,\n        backgroundColor: Colors.grey[100],\n        elevation: 0,\n        leading: IconButton(\n          icon: Icon(Icons.arrow_back, color: primaryColor), // Set back icon color to primaryColor\n          onPressed: () {\n            Navigator.of(context).pop();\n          },\n        ),\n        title: Text(\n          'Profile',\n          style: textTheme.titleLarge?.copyWith(\n            fontWeight: FontWeight.bold,\n            color: Colors.grey[800],\n            fontSize: 18,\n          ),\n        ),\n        centerTitle: true,\n        actions: [\n          IconButton(\n            icon: Icon(Icons.settings_outlined, color: primaryColor), // Set settings icon color to primaryColor\n            onPressed: () {\n              // TODO: Implement settings action\n            },\n          ),\n          const SizedBox(width: 8.0),\n        ],\n      ),\n      body: SingleChildScrollView(\n        padding: const EdgeInsets.symmetric(horizontal: 24.0),\n        child: Column(\n          crossAxisAlignment: CrossAxisAlignment.start,\n          children: [\n            const SizedBox(height: 16.0),\n            // User Summary\n            Container(\n              padding: const EdgeInsets.all(16.0),\n              decoration: BoxDecoration(\n                color: colorScheme.surface,\n                borderRadius: BorderRadius.circular(15.0),\n                boxShadow: [\n                  BoxShadow(\n                    color: Colors.grey.withOpacity(0.1),\n                    spreadRadius: 1,\n                    blurRadius: 5,\n                    offset: const Offset(0, 3),\n                  ),\n                ],\n              ),\n              child: Row(\n                children: [\n                  CircleAvatar(\n                    radius: 30,\n                    backgroundColor: Colors.grey[300],\n                    backgroundImage: NetworkImage(\n                      'https://picsum.photos/200/200?random=profile',\n                    ),\n                  ),\n                  const SizedBox(width: 16.0),\n                  Column(\n                    crossAxisAlignment: CrossAxisAlignment.start,\n                    children: [\n                      Text(\n                        'Jane Cooper',\n                        style: textTheme.titleMedium?.copyWith(\n                          fontWeight: FontWeight.bold,\n                          color: Colors.grey[800],\n                        ),\n                      ),\n                      Text(\n                        '+01618 411555',\n                        style: textTheme.bodyMedium?.copyWith(\n                          color: Colors.grey[600],\n                        ),\n                      ),\n                    ],\n                  ),\n                ],\n              ),\n            ),\n            const SizedBox(height: 24.0),\n            // Prioritized Service Promo\n            _PromoCard(\n              textTheme: textTheme,\n              primaryColor: primaryColor,\n              colorScheme: colorScheme,\n            ),\n            const SizedBox(height: 24.0),\n            // Profile Information Inputs\n            _ProfileSectionTitle(title: 'Name', textTheme: textTheme),\n            TextField(\n              focusNode: _nameFocusNode,\n              controller: TextEditingController(text: 'Jane Cooper'),\n              decoration: InputDecoration(\n                filled: true,\n                fillColor: _nameFillColor, // Dynamic fill color\n                border: OutlineInputBorder(\n                  borderRadius: BorderRadius.circular(10.0),\n                  borderSide: BorderSide.none,\n                ),\n                contentPadding: const EdgeInsets.symmetric(\n                  horizontal: 16.0,\n                  vertical: 16.0,\n                ),\n              ),\n              style: textTheme.bodyLarge?.copyWith(color: Colors.grey[850]),\n            ),\n            const SizedBox(height: 16.0),\n            _ProfileSectionTitle(title: 'Mobile Number', textTheme: textTheme),\n            Row(\n              children: [\n                Container(\n                  padding: const EdgeInsets.symmetric(horizontal: 12, vertical: 16),\n                  decoration: BoxDecoration(\n                    color: colorScheme.surface,\n                    borderRadius: BorderRadius.circular(10.0),\n                  ),\n                  child: Row(\n                    children: [\n                      Text(\n                        '+880',\n                        style: textTheme.bodyLarge?.copyWith(color: Colors.grey[850]),\n                      ),\n                      Icon(Icons.keyboard_arrow_down, color: Colors.grey[600]),\n                    ],\n                  ),\n                ),\n                const SizedBox(width: 8.0),\n                Expanded(\n                  child: TextField(\n                    focusNode: _mobileNumberFocusNode,\n                    controller: TextEditingController(text: '1616 - 411666'),\n                    decoration: InputDecoration(\n                      filled: true,\n                      fillColor: _mobileNumberFillColor, // Dynamic fill color\n                      border: OutlineInputBorder(\n                        borderRadius: BorderRadius.circular(10.0),\n                        borderSide: BorderSide.none,\n                      ),\n                      contentPadding: const EdgeInsets.symmetric(\n                        horizontal: 16.0,\n                        vertical: 16.0,\n                      ),\n                    ),\n                    style: textTheme.bodyLarge?.copyWith(color: Colors.grey[850]),\n                  ),\n                ),\n              ],\n            ),\n            const SizedBox(height: 16.0),\n            _ProfileSectionTitle(title: 'Location', textTheme: textTheme),\n            TextField(\n              focusNode: _locationFocusNode,\n              controller: TextEditingController(text: 'Current Location'),\n              decoration: InputDecoration(\n                filled: true,\n                fillColor: _locationFillColor, // Dynamic fill color\n                prefixIcon: Icon(Icons.location_on, color: Colors.grey[600]),\n                border: OutlineInputBorder(\n                  borderRadius: BorderRadius.circular(10.0),\n                  borderSide: BorderSide.none,\n                ),\n                contentPadding: const EdgeInsets.symmetric(\n                  horizontal: 16.0,\n                  vertical: 16.0,\n                ),\n              ),\n              style: textTheme.bodyLarge?.copyWith(color: Colors.grey[850]),\n            ),\n            const SizedBox(height: 40.0),\n            // Explore Your Features\n            Text(\n              'Explore Your features',\n              style: textTheme.titleMedium?.copyWith(\n                fontWeight: FontWeight.bold,\n                color: Colors.grey[800],\n              ),\n            ),\n            const SizedBox(height: 24.0),\n            _BenefitItem(\n              icon: Icons.lightbulb_outline,\n              title: 'Rethink simplicity',\n              description: 'Travel planning, simplified. No clutter. No confusion. Just smart, seamless experiences—powered by AI, designed for ease.',\n              textTheme: textTheme,\n            ),\n            const SizedBox(height: 24.0),\n            _BenefitItem(\n              icon: Icons.block,\n              title: 'No ads, Not now, Not ever',\n              description: 'Enjoy a completely ad-free experience—focused on your journey, not distractions.',\n              textTheme: textTheme,\n            ),\n            const SizedBox(height: 24.0),\n            _BenefitItem(\n              icon: Icons.psychology_outlined,\n              title: 'We belive in App AI Technology',\n              description: 'Harnessing the power of AI to create smarter, simpler travel experiences for you.',\n              textTheme: textTheme,\n            ),\n            const SizedBox(height: 40.0),\n            Center(\n              child: SizedBox(\n                width: double.infinity,\n                height: 50,\n                child: PrimaryTextButton(\n                  text: 'Learn more about Travel AI App',\n                  onPressed: () {\n                    // TODO: Implement Learn More action\n                    print('Learn more about Travel AI App tapped');\n                  },\n                ),\n              ),\n            ),\n            const SizedBox(height: 40.0),\n          ],\n        ),\n      ),\n    );\n  }\n}\n\nclass _ProfileSectionTitle extends StatelessWidget {\n  final String title;\n  final TextTheme textTheme;\n\n  const _ProfileSectionTitle({\n    required this.title,\n    required this.textTheme,\n  });\n\n  @override\n  Widget build(BuildContext context) {\n    return Padding(\n      padding: const EdgeInsets.only(bottom: 8.0),\n      child: Text(\n        title,\n        style: textTheme.bodyLarge?.copyWith(\n          fontWeight: FontWeight.bold,\n          color: Colors.grey[800],\n        ),\n      ),\n    );\n  }\n}\n\nclass _PromoCard extends StatelessWidget {\n  final TextTheme textTheme;\n  final Color primaryColor;\n  final ColorScheme colorScheme;\n\n  const _PromoCard({\n    required this.textTheme,\n    required this.primaryColor,\n    required this.colorScheme,\n  });\n\n  @override\n  Widget build(BuildContext context) {\n    return Container(\n      padding: const EdgeInsets.all(16.0),\n      decoration: BoxDecoration(\n        color: primaryColor.withOpacity(0.1), // Light primary color background\n        borderRadius: BorderRadius.circular(15.0),\n        boxShadow: [\n          BoxShadow(\n            color: Colors.grey.withOpacity(0.05),\n            spreadRadius: 1,\n            blurRadius: 3,\n            offset: const Offset(0, 2),\n          ),\n        ],\n      ),\n      child: Row(\n        children: [\n          Expanded(\n            child: Column(\n              crossAxisAlignment: CrossAxisAlignment.start,\n              children: [\n                Text(\n                  'Want to get free Prioritized service?',\n                  style: textTheme.titleMedium?.copyWith(\n                    fontWeight: FontWeight.bold,\n                    color: Colors.grey[800],\n                  ),\n                ),\n                const SizedBox(height: 8.0),\n                SizedBox(\n                  width: 120, // Constrain button width\n                  height: 40, // Standard button height\n                  child: FilledButton(\n                    onPressed: () {\n                      // TODO: Implement View Details\n                      print('View Details tapped');\n                    },\n                    style: FilledButton.styleFrom(\n                      backgroundColor: primaryColor, // Set to primaryColor\n                      foregroundColor: Colors.white, // Set text color to white\n                      shape: RoundedRectangleBorder(\n                        borderRadius: BorderRadius.circular(60), // Match PrimaryTextButton\n                      ),\n                      padding: const EdgeInsets.symmetric(horizontal: 16),\n                    ),\n                    child: Text(\n                      'View Details',\n                      style: textTheme.bodyMedium?.copyWith(\n                        fontWeight: FontWeight.bold,\n                        color: Colors.white, // Ensure text is white\n                      ),\n                    ),\n                  ),\n                ),\n              ],\n            ),\n          ),\n          const SizedBox(width: 16.0),\n          ClipRRect(\n            borderRadius: BorderRadius.circular(10.0),\n            child: Image.network(\n              'https://picsum.photos/100/100?random=promo', // Placeholder image\n              height: 80,\n              width: 80,\n              fit: BoxFit.cover,\n              errorBuilder: (context, error, stackTrace) => Container(\n                height: 80,\n                width: 80,\n                color: Colors.grey[300],\n                child: Icon(Icons.image, color: Colors.grey[600]),\n              ),\n            ),\n          ),\n        ],\n      ),\n    );\n  }\n}\n\nclass _BenefitItem extends StatelessWidget {\n  final IconData icon;\n  final String title;\n  final String description;\n  final TextTheme textTheme;\n\n  const _BenefitItem({\n    required this.icon,\n    required this.title,\n    required this.description,\n    required this.textTheme,\n  });\n\n  @override\n  Widget build(BuildContext context) {\n    return Row(\n      crossAxisAlignment: CrossAxisAlignment.start,\n      children: [\n        Icon(icon, color: Colors.grey[700], size: 28),\n        const SizedBox(width: 16.0),\n        Expanded(\n          child: Column(\n            crossAxisAlignment: CrossAxisAlignment.start,\n            children: [\n              Text(\n                title,\n                style: textTheme.titleMedium?.copyWith(\n                  fontWeight: FontWeight.bold,\n                  color: Colors.grey[800],\n                ),\n              ),\n              const SizedBox(height: 4.0),\n              Text(\n                description,\n                style: textTheme.bodyMedium?.copyWith(color: Colors.grey[600]),\n              ),\n            ],\n          ),\n        ),\n      ],\n    );\n  }\n}\n```\n\n// File: lib\\screens\\reservation_details_screen.dart\n```dart\nimport 'package:flutter/gestures.dart';\nimport 'package:flutter/material.dart';\nimport 'package:ai_travel_app_ui_kit/components/buttons/primary_text_button.dart';\n\nclass ReservationDetailsScreen extends StatefulWidget {\n  const ReservationDetailsScreen({super.key});\n\n  @override\n  State<ReservationDetailsScreen> createState() =>\n      _ReservationDetailsScreenState();\n}\n\nclass _ReservationDetailsScreenState extends State<ReservationDetailsScreen> {\n  String? _selectedPaymentOption = 'Pay part now, part later'; // Default selection\n  String? _selectedPaymentMethod = 'Google Pay - **** **** 4709'; // Default selection\n\n  @override\n  Widget build(BuildContext context) {\n    final TextTheme textTheme = Theme.of(context).textTheme;\n    final Color primaryColor = Theme.of(context).primaryColor;\n    final ColorScheme colorScheme = Theme.of(context).colorScheme;\n\n    return Scaffold(\n      backgroundColor: Colors.grey[100], // Light grey background\n      appBar: AppBar(\n        scrolledUnderElevation: 0,\n        backgroundColor: Colors.grey[100],\n        elevation: 0,\n        leading: IconButton(\n          icon: Icon(Icons.close, color: primaryColor), // Set close icon color to primaryColor\n          onPressed: () {\n            Navigator.of(context).pop();\n          },\n        ),\n        title: Text(\n          'Request to book',\n          style: textTheme.titleLarge?.copyWith(\n            fontWeight: FontWeight.bold,\n            color: Colors.grey[800],\n            fontSize: 18,\n          ),\n        ),\n        centerTitle: true,\n      ),\n      body: Column(\n        children: [\n          Expanded(\n            child: ListView(\n              padding: const EdgeInsets.symmetric(horizontal: 24.0),\n              children: [\n                _BookingSummaryCard(\n                  textTheme: textTheme,\n                  colorScheme: colorScheme,\n                ),\n                const SizedBox(height: 16.0),\n                // --- New: Required for your trip section ---\n                _SectionContainer(\n                  textTheme: textTheme,\n                  colorScheme: colorScheme,\n                  title: 'Required for your trip',\n                  children: [\n                    _RequiredInfoRow(\n                      label: 'Message the host',\n                      hintText: 'Hi Brother,\\nCheck all My files!',\n                      onAddTap: () {},\n                      textTheme: textTheme,\n                    ),\n                    _RequiredInfoRow(\n                      label: 'Phone Number',\n                      hintText: '01616 411555',\n                      onAddTap: () {},\n                      textTheme: textTheme,\n                    ),\n                    _RequiredInfoRow(\n                      label: 'Profile Photo',\n                      hintText: 'Uploaded',\n                      onAddTap: () {},\n                      textTheme: textTheme,\n                    ),\n                  ],\n                ),\n                const SizedBox(height: 16.0),\n                // --- New: Cancellation Policy Section (distinct from original card) ---\n                _SectionContainer(\n                  textTheme: textTheme,\n                  colorScheme: colorScheme,\n                  title: 'Cancellation Policy',\n                  children: [\n                    Row(\n                      crossAxisAlignment: CrossAxisAlignment.start,\n                      children: [\n                        Expanded(\n                          child: Text.rich(\n                            TextSpan(\n                              text: 'Stay informed with clear, flexible cancellation terms. View refundable dates, fees, and policy types before you book. ',\n                              style: textTheme.bodyMedium?.copyWith(color: Colors.grey[700]),\n                              children: [\n                                TextSpan(\n                                  text: 'Learn More',\n                                  style: textTheme.bodyMedium?.copyWith(\n                                    color: primaryColor,\n                                    fontWeight: FontWeight.bold,\n                                  ),\n                                  recognizer: TapGestureRecognizer()..onTap = () {\n                                    print('Learn More tapped on Cancellation Policy');\n                                  },\n                                ),\n                              ],\n                            ),\n                          ),\n                        ),\n                        const SizedBox(width: 16.0),\n                        Icon(Icons.calendar_today_outlined, color: Colors.grey[600], size: 24),\n                      ],\n                    ),\n                  ],\n                ),\n                const SizedBox(height: 16.0),\n                // --- New: Hotel Rules Section ---\n                _SectionContainer(\n                  textTheme: textTheme,\n                  colorScheme: colorScheme,\n                  title: 'Hotel Rules',\n                  children: [\n                    Text(\n                      'Know before you go—check key rules like check-in/out times, smoking policies...',\n                      style: textTheme.bodyMedium?.copyWith(color: Colors.grey[700]),\n                    ),\n                    const SizedBox(height: 8.0),\n                    _BulletPointText(\n                      text: 'Follow all Rules',\n                      textTheme: textTheme,\n                    ),\n                    _BulletPointText(\n                      text: 'If you break intentionally. Hotel Management may charge you',\n                      textTheme: textTheme,\n                    ),\n                  ],\n                ),\n                const SizedBox(height: 16.0),\n                // --- New: Your Reservation Gonna Confirm Soon! ---\n                Container(\n                  padding: const EdgeInsets.all(16.0),\n                  decoration: BoxDecoration(\n                    color: colorScheme.surface,\n                    borderRadius: BorderRadius.circular(15.0),\n                    boxShadow: [\n                      BoxShadow(\n                        color: Colors.grey.withOpacity(0.1),\n                        spreadRadius: 1,\n                        blurRadius: 5,\n                        offset: const Offset(0, 3),\n                      ),\n                    ],\n                  ),\n                  child: Row(\n                    children: [\n                      Expanded(\n                        child: Text(\n                          'Your Reservation Gonna\\nConfirm Soon!',\n                          style: textTheme.titleMedium?.copyWith(\n                            fontWeight: FontWeight.bold,\n                            color: Colors.grey[800],\n                          ),\n                        ),\n                      ),\n                      Icon(Icons.calendar_month, color: Colors.grey[600], size: 36),\n                    ],\n                  ),\n                ),\n                const SizedBox(height: 24.0), // Consistent spacing before next section\n                // --- Original sections follow below ---\n                _SectionContainer(\n                  textTheme: textTheme,\n                  colorScheme: colorScheme,\n                  title: 'Your Trip',\n                  children: [\n                    _TripDetailRow(\n                      label: 'Dates',\n                      value: 'March 10 - 13, 2024 (4 Days)',\n                      onEdit: () {\n                        // TODO: Implement edit dates action\n                        print('Edit Dates tapped');\n                      },\n                      textTheme: textTheme,\n                    ),\n                    _TripDetailRow(\n                      label: 'Guests',\n                      value: '2 Guests',\n                      onEdit: () {\n                        // TODO: Implement edit guests action\n                        print('Edit Guests tapped');\n                      },\n                      textTheme: textTheme,\n                    ),\n                  ],\n                ),\n                const SizedBox(height: 16.0),\n                // Choose how to pay Section\n                _SectionContainer(\n                  textTheme: textTheme,\n                  colorScheme: colorScheme,\n                  title: 'Choose how to pay',\n                  children: [\n                    _PaymentOptionTile(\n                      title: 'Pay 68,000 BDT (full)',\n                      value: 'Pay 68,000 BDT (full)',\n                      groupValue: _selectedPaymentOption,\n                      onChanged: (value) {\n                        setState(() {\n                          _selectedPaymentOption = value;\n                        });\n                      },\n                      textTheme: textTheme,\n                      primaryColor: primaryColor,\n                    ),\n                    _PaymentOptionTile(\n                      title: 'Pay part now, part later',\n                      subtitle: 'Pay 40% Money today as an advance payment for room booking. ',\n                      subtitleLink: 'More info',\n                      value: 'Pay part now, part later',\n                      groupValue: _selectedPaymentOption,\n                      onChanged: (value) {\n                        setState(() {\n                          _selectedPaymentOption = value;\n                        });\n                      },\n                      textTheme: textTheme,\n                      primaryColor: primaryColor,\n                    ),\n                  ],\n                ),\n                const SizedBox(height: 16.0),\n                // Price Details Section\n                _SectionContainer(\n                  textTheme: textTheme,\n                  colorScheme: colorScheme,\n                  title: 'Price Details',\n                  children: [\n                    _PriceDetailRow(\n                      label: 'Advance Payment',\n                      amount: '27,200 BDT',\n                      textTheme: textTheme,\n                      isBold: false,\n                    ),\n                    _PriceDetailRow(\n                      label: 'App Service Fee',\n                      amount: '300 BDT',\n                      textTheme: textTheme,\n                      isBold: false,\n                    ),\n                    _PriceDetailRow(\n                      label: 'Government Tax',\n                      amount: '500 BDT',\n                      textTheme: textTheme,\n                      isBold: false,\n                    ),\n                    const SizedBox(height: 8.0),\n                    Divider(color: Colors.grey[300], thickness: 1, indent: 0, endIndent: 0),\n                    const SizedBox(height: 8.0),\n                    _PriceDetailRow(\n                      label: 'Total (BDT)',\n                      amount: '28,000 BDT',\n                      textTheme: textTheme,\n                      isBold: true,\n                      linkText: 'More Info',\n                      onLinkTap: () {\n                        print('More Info tapped');\n                      },\n                    ),\n                    const SizedBox(height: 16.0),\n                    _PriceDetailRow(\n                      label: 'Due Now',\n                      amount: '40,000 BDT',\n                      textTheme: textTheme,\n                      isBold: true,\n                      isPrimaryColor: true,\n                    ),\n                  ],\n                ),\n                const SizedBox(height: 16.0),\n                // Pay With Section\n                _SectionContainer(\n                  textTheme: textTheme,\n                  colorScheme: colorScheme,\n                  title: 'Pay With',\n                  children: [\n                    _PaymentMethodTile(\n                      icon: Icons.person_outline, // Placeholder for Google Pay icon\n                      title: 'Google Pay - **** **** 4709',\n                      value: 'Google Pay - **** **** 4709',\n                      groupValue: _selectedPaymentMethod,\n                      onChanged: (value) {\n                        setState(() {\n                          _selectedPaymentMethod = value;\n                        });\n                      },\n                      textTheme: textTheme,\n                      primaryColor: primaryColor,\n                    ),\n                    _PaymentMethodTile(\n                      icon: Icons.credit_card, // Placeholder for Mastercard icon\n                      title: 'Mastercard - **** **** 6782',\n                      value: 'Mastercard - **** **** 6782',\n                      groupValue: _selectedPaymentMethod,\n                      onChanged: (value) {\n                        setState(() {\n                          _selectedPaymentMethod = value;\n                        });\n                      },\n                      textTheme: textTheme,\n                      primaryColor: primaryColor,\n                    ),\n                    _PaymentMethodTile(\n                      icon: Icons.add_card,\n                      title: 'Add new card',\n                      isAddCard: true,\n                      onTap: () {\n                        // TODO: Implement add new card\n                        print('Add new card tapped');\n                      },\n                      textTheme: textTheme,\n                      primaryColor: primaryColor,\n                    ),\n                  ],\n                ),\n                const SizedBox(height: 40.0), // Padding before bottom button\n              ],\n            ),\n          ),\n          Padding(\n            padding:\n                const EdgeInsets.symmetric(horizontal: 24.0, vertical: 24.0),\n            child: PrimaryTextButton(\n              text: 'Next',\n              onPressed: () {\n                // TODO: Implement next action\n                print('Next button tapped on Reservation Details');\n              },\n            ),\n          ),\n        ],\n      ),\n    );\n  }\n\n  Widget _buildSectionTitle(BuildContext context, String title) {\n    final TextTheme textTheme = Theme.of(context).textTheme;\n    return Padding(\n      padding: const EdgeInsets.only(bottom: 16.0),\n      child: Text(\n        title,\n        style: textTheme.titleMedium?.copyWith(\n          fontWeight: FontWeight.bold,\n          color: Colors.grey[800],\n        ),\n      ),\n    );\n  }\n}\n\nclass _SectionContainer extends StatelessWidget {\n  final TextTheme textTheme;\n  final ColorScheme colorScheme;\n  final String title;\n  final List<Widget> children;\n\n  const _SectionContainer({\n    required this.textTheme,\n    required this.colorScheme,\n    required this.title,\n    required this.children,\n  });\n\n  @override\n  Widget build(BuildContext context) {\n    return Container(\n      margin: const EdgeInsets.only(bottom: 16.0), // Space between sections\n      padding: const EdgeInsets.all(16.0), // Internal padding\n      decoration: BoxDecoration(\n        color: colorScheme.surface, // White background\n        borderRadius: BorderRadius.circular(15.0), // Rounded corners\n        boxShadow: [\n          BoxShadow(\n            color: Colors.grey.withOpacity(0.1),\n            spreadRadius: 1,\n            blurRadius: 5,\n            offset: const Offset(0, 3),\n          ),\n        ],\n      ),\n      child: Column(\n        crossAxisAlignment: CrossAxisAlignment.start,\n        children: [\n          Text(\n            title,\n            style: textTheme.titleMedium?.copyWith(\n              fontWeight: FontWeight.bold,\n              color: Colors.grey[800],\n            ),\n          ),\n          const SizedBox(height: 16.0),\n          ...children,\n        ],\n      ),\n    );\n  }\n}\n\nclass _BookingSummaryCard extends StatelessWidget {\n  final TextTheme textTheme;\n  final ColorScheme colorScheme;\n\n  const _BookingSummaryCard({\n    required this.textTheme,\n    required this.colorScheme,\n  });\n\n  @override\n  Widget build(BuildContext context) {\n    return Container(\n      padding: const EdgeInsets.all(16.0),\n      decoration: BoxDecoration(\n        color: colorScheme.surface, // White background\n        borderRadius: BorderRadius.circular(15.0),\n        boxShadow: [\n          BoxShadow(\n            color: Colors.grey.withOpacity(0.1),\n            spreadRadius: 1,\n            blurRadius: 5,\n            offset: const Offset(0, 3),\n          ),\n        ],\n      ),\n      child: Row(\n        crossAxisAlignment: CrossAxisAlignment.start,\n        children: [\n          ClipRRect(\n            borderRadius: BorderRadius.circular(10.0),\n            child: Image.network(\n              'https://picsum.photos/100/100?random=roombooking', // Placeholder image\n              height: 80,\n              width: 80,\n              fit: BoxFit.cover,\n              errorBuilder: (context, error, stackTrace) => Container(\n                height: 80,\n                width: 80,\n                color: Colors.grey[300],\n                child: Icon(Icons.image, color: Colors.grey[600]),\n              ),\n            ),\n          ),\n          const SizedBox(width: 16.0),\n          Expanded(\n            child: Column(\n              crossAxisAlignment: CrossAxisAlignment.start,\n              children: [\n                Text(\n                  'Room Booking',\n                  style: textTheme.bodyMedium?.copyWith(color: Colors.grey[600]),\n                ),\n                const SizedBox(height: 4.0),\n                Text(\n                  'Loft Style Guest suite with\\nPrivate Bathroom',\n                  style: textTheme.titleMedium?.copyWith(\n                    fontWeight: FontWeight.bold,\n                    color: Colors.grey[800],\n                  ),\n                  maxLines: 2,\n                  overflow: TextOverflow.ellipsis,\n                ),\n                const SizedBox(height: 4.0),\n                Row(\n                  children: [\n                    Icon(Icons.star, color: Colors.amber, size: 16),\n                    const SizedBox(width: 4.0),\n                    Text(\n                      '4.9 (240)',\n                      style: textTheme.bodySmall?.copyWith(color: Colors.grey[700]),\n                    ),\n                  ],\n                ),\n              ],\n            ),\n          ),\n        ],\n      ),\n    );\n  }\n}\n\nclass _CancellationPolicyCard extends StatelessWidget {\n  final TextTheme textTheme;\n  final ColorScheme colorScheme;\n\n  const _CancellationPolicyCard({\n    required this.textTheme,\n    required this.colorScheme,\n  });\n\n  @override\n  Widget build(BuildContext context) {\n    return Container(\n      padding: const EdgeInsets.all(16.0),\n      decoration: BoxDecoration(\n        color: colorScheme.surface,\n        borderRadius: BorderRadius.circular(15.0),\n        boxShadow: [\n          BoxShadow(\n            color: Colors.grey.withOpacity(0.1),\n            spreadRadius: 1,\n            blurRadius: 5,\n            offset: const Offset(0, 3),\n          ),\n        ],\n      ),\n      child: Row(\n        crossAxisAlignment: CrossAxisAlignment.start,\n        children: [\n          Expanded(\n            child: Text(\n              'Free Cancellation before 6 March. Get a full refund if you change your mind',\n              style: textTheme.bodyMedium?.copyWith(color: Colors.grey[700]),\n            ),\n          ),\n          const SizedBox(width: 16.0),\n          Icon(Icons.calendar_today_outlined, color: Colors.grey[600], size: 24),\n        ],\n      ),\n    );\n  }\n}\n\nclass _TripDetailRow extends StatelessWidget {\n  final String label;\n  final String value;\n  final VoidCallback onEdit;\n  final TextTheme textTheme;\n\n  const _TripDetailRow({\n    required this.label,\n    required this.value,\n    required this.onEdit,\n    required this.textTheme,\n  });\n\n  @override\n  Widget build(BuildContext context) {\n    return Padding(\n      padding: const EdgeInsets.symmetric(vertical: 8.0),\n      child: Row(\n        mainAxisAlignment: MainAxisAlignment.spaceBetween,\n        children: [\n          Column(\n            crossAxisAlignment: CrossAxisAlignment.start,\n            children: [\n              Text(\n                label,\n                style: textTheme.bodyLarge?.copyWith( // Changed to bodyLarge as per image\n                  fontWeight: FontWeight.normal, // Not bold in image\n                  color: Colors.grey[700], // Adjust color\n                ),\n              ),\n              const SizedBox(height: 4.0),\n              Text(\n                value,\n                style: textTheme.bodyMedium?.copyWith(color: Colors.grey[600]),\n              ),\n            ],\n          ),\n          TextButton(\n            onPressed: onEdit,\n            child: Text(\n              'Edit',\n              style: textTheme.bodyMedium?.copyWith(color: Theme.of(context).primaryColor),\n            ),\n          ),\n        ],\n      ),\n    );\n  }\n}\n\nclass _PaymentOptionTile extends StatelessWidget {\n  final String title;\n  final String? subtitle;\n  final String? subtitleLink;\n  final String value;\n  final String? groupValue;\n  final ValueChanged<String?> onChanged;\n  final TextTheme textTheme;\n  final Color primaryColor;\n\n  const _PaymentOptionTile({\n    required this.title,\n    this.subtitle,\n    this.subtitleLink,\n    required this.value,\n    required this.groupValue,\n    required this.onChanged,\n    required this.textTheme,\n    required this.primaryColor,\n  });\n\n  @override\n  Widget build(BuildContext context) {\n    return Column(\n      children: [\n        RadioListTile<String>(\n          title: Text(\n            title,\n            style: textTheme.bodyLarge?.copyWith(\n              fontWeight: FontWeight.normal, // Not bold in image\n              color: Colors.grey[700], // Adjust color\n            ),\n          ),\n          subtitle: subtitle != null\n              ? Text.rich(\n                  TextSpan(\n                    text: subtitle,\n                    style: textTheme.bodySmall?.copyWith(color: Colors.grey[600]),\n                    children: [\n                      if (subtitleLink != null)\n                        TextSpan(\n                          text: subtitleLink,\n                          style: textTheme.bodySmall?.copyWith(\n                            color: primaryColor,\n                            fontWeight: FontWeight.bold,\n                          ),\n                          recognizer: TapGestureRecognizer()\n                            ..onTap = () {\n                              print('$subtitleLink tapped');\n                            },\n                        ),\n                    ],\n                  ),\n                )\n              : null,\n          value: value,\n          groupValue: groupValue,\n          onChanged: onChanged,\n          activeColor: primaryColor,\n          controlAffinity: ListTileControlAffinity.trailing,\n        ),\n        if (subtitle != null)\n          // No divider needed here, container will provide separation\n          const SizedBox(height: 8.0), // Space between radio tiles\n      ],\n    );\n  }\n}\n\nclass _PriceDetailRow extends StatelessWidget {\n  final String label;\n  final String amount;\n  final TextTheme textTheme;\n  final bool isBold;\n  final String? linkText;\n  final VoidCallback? onLinkTap;\n  final bool isPrimaryColor;\n\n  const _PriceDetailRow({\n    required this.label,\n    required this.amount,\n    required this.textTheme,\n    this.isBold = false,\n    this.linkText,\n    this.onLinkTap,\n    this.isPrimaryColor = false,\n  });\n\n  @override\n  Widget build(BuildContext context) {\n    final Color textColor = isPrimaryColor\n        ? Theme.of(context).primaryColor\n        : (isBold ? Colors.grey[800] : Colors.grey[700])!;\n\n    return Padding(\n      padding: const EdgeInsets.symmetric(vertical: 8.0),\n      child: Row(\n        mainAxisAlignment: MainAxisAlignment.spaceBetween,\n        children: [\n          Row(\n            children: [\n              Text(\n                label,\n                style: textTheme.bodyLarge?.copyWith(\n                  fontWeight: isBold ? FontWeight.bold : FontWeight.normal,\n                  color: textColor,\n                ),\n              ),\n              if (linkText != null) ...[\n                const SizedBox(width: 8.0),\n                GestureDetector(\n                  onTap: onLinkTap,\n                  child: Text(\n                    linkText!,\n                    style: textTheme.bodySmall?.copyWith(\n                      color: Theme.of(context).primaryColor,\n                      fontWeight: FontWeight.bold,\n                    ),\n                  ),\n                ),\n              ],\n            ],\n          ),\n          Text(\n            amount,\n            style: textTheme.bodyLarge?.copyWith(\n              fontWeight: isBold ? FontWeight.bold : FontWeight.normal,\n              color: textColor,\n            ),\n          ),\n        ],\n      ),\n    );\n  }\n}\n\nclass _PaymentMethodTile extends StatelessWidget {\n  final IconData? icon;\n  final String title;\n  final String? value; // Used for radio selection\n  final String? groupValue;\n  final ValueChanged<String?>? onChanged;\n  final bool isAddCard;\n  final VoidCallback? onTap;\n  final TextTheme textTheme;\n  final Color primaryColor;\n\n  const _PaymentMethodTile({\n    this.icon,\n    required this.title,\n    this.value,\n    this.groupValue,\n    this.onChanged,\n    this.isAddCard = false,\n    this.onTap,\n    required this.textTheme,\n    required this.primaryColor,\n  });\n\n  @override\n  Widget build(BuildContext context) {\n    if (isAddCard) {\n      return ListTile(\n        leading: Icon(icon, color: Colors.grey[700]),\n        title: Text(\n          title,\n          style: textTheme.bodyLarge?.copyWith(color: Colors.grey[800]),\n        ),\n        trailing: Icon(Icons.arrow_forward_ios, color: Colors.grey[400], size: 16),\n        onTap: onTap,\n      );\n    } else {\n      return RadioListTile<String>(\n        value: value!,\n        groupValue: groupValue,\n        onChanged: onChanged,\n        activeColor: primaryColor,\n        controlAffinity: ListTileControlAffinity.trailing,\n        title: Row(\n          children: [\n            if (icon != null) ...[\n              Icon(icon, color: Colors.grey[700]),\n              const SizedBox(width: 8.0),\n            ],\n            Expanded( // Wrap text in Expanded to prevent overflow\n              child: Text(\n                title,\n                style: textTheme.bodyLarge?.copyWith(color: Colors.grey[800]),\n                overflow: TextOverflow.ellipsis, // Add ellipsis for overflow\n              ),\n            ),\n          ],\n        ),\n      );\n    }\n  }\n}\n\nclass _RequiredInfoRow extends StatelessWidget {\n  final String label;\n  final String hintText;\n  final VoidCallback onAddTap;\n  final TextTheme textTheme;\n\n  const _RequiredInfoRow({\n    required this.label,\n    required this.hintText,\n    required this.onAddTap,\n    required this.textTheme,\n  });\n\n  @override\n  Widget build(BuildContext context) {\n    return Padding(\n      padding: const EdgeInsets.symmetric(vertical: 8.0),\n      child: Row(\n        mainAxisAlignment: MainAxisAlignment.spaceBetween,\n        crossAxisAlignment: CrossAxisAlignment.start, // Align to top for multiline hint\n        children: [\n          Expanded( // Ensure text takes available space\n            child: Column(\n              crossAxisAlignment: CrossAxisAlignment.start,\n              children: [\n                Text(\n                  label,\n                  style: textTheme.bodyLarge?.copyWith(\n                    fontWeight: FontWeight.normal,\n                    color: Colors.grey[700],\n                  ),\n                ),\n                const SizedBox(height: 4.0),\n                Text(\n                  hintText,\n                  style: textTheme.bodyMedium?.copyWith(color: Colors.grey[500]),\n                  maxLines: 2, // Allow two lines for hint text\n                  overflow: TextOverflow.ellipsis, // Ellipsis if still overflows\n                ),\n              ],\n            ),\n          ),\n          const SizedBox(width: 16.0), // Space between text and button\n          SizedBox(\n            height: 30, // Smaller height for the \"Add\" button\n            child: OutlinedButton(\n              onPressed: onAddTap,\n              style: OutlinedButton.styleFrom(\n                side: BorderSide(color: Colors.grey[300]!, width: 1),\n                shape: RoundedRectangleBorder(\n                  borderRadius: BorderRadius.circular(8.0),\n                ),\n                padding: const EdgeInsets.symmetric(horizontal: 16),\n                minimumSize: Size.zero, // Remove default minimum size\n                tapTargetSize: MaterialTapTargetSize.shrinkWrap,\n              ),\n              child: Text(\n                'Add',\n                style: textTheme.bodySmall?.copyWith(color: Theme.of(context).primaryColor),\n              ),\n            ),\n          ),\n        ],\n      ),\n    );\n  }\n}\n\nclass _BulletPointText extends StatelessWidget {\n  final String text;\n  final TextTheme textTheme;\n\n  const _BulletPointText({\n    required this.text,\n    required this.textTheme,\n  });\n\n  @override\n  Widget build(BuildContext context) {\n    return Padding(\n      padding: const EdgeInsets.only(left: 8.0, bottom: 8.0),\n      child: Row(\n        crossAxisAlignment: CrossAxisAlignment.start,\n        children: [\n          Text('• ', style: textTheme.bodyMedium?.copyWith(color: Colors.grey[700])),\n          Expanded(\n            child: Text(\n              text,\n              style: textTheme.bodyMedium?.copyWith(color: Colors.grey[700]),\n            ),\n          ),\n        ],\n      ),\n    );\n  }\n}\n```\n\n// File: lib\\screens\\settings_screen.dart\n```dart\nimport 'package:flutter/material.dart';\n\nclass SettingsScreen extends StatefulWidget {\n  const SettingsScreen({super.key});\n\n  @override\n  State<SettingsScreen> createState() => _SettingsScreenState();\n}\n\nclass _SettingsScreenState extends State<SettingsScreen> {\n  bool _notificationsEnabled = true;\n  bool _darkModeEnabled = false;\n  bool _locationServicesEnabled = true;\n\n  @override\n  Widget build(BuildContext context) {\n    final TextTheme textTheme = Theme.of(context).textTheme;\n    final Color primaryColor = Theme.of(context).primaryColor;\n    final ColorScheme colorScheme = Theme.of(context).colorScheme;\n\n    return Scaffold(\n      backgroundColor: Colors.grey[100], // Light grey background\n      appBar: AppBar(\n        scrolledUnderElevation: 0,\n        backgroundColor: Colors.grey[100],\n        elevation: 0,\n        leading: IconButton(\n          icon: Icon(\n            Icons.arrow_back,\n            color: primaryColor,\n          ), // Back icon primary color\n          onPressed: () {\n            Navigator.of(context).pop();\n          },\n        ),\n        title: Text(\n          'Settings',\n          style: textTheme.titleLarge?.copyWith(\n            fontWeight: FontWeight.bold,\n            color: Colors.grey[800],\n            fontSize: 18,\n          ),\n        ),\n        centerTitle: true,\n        actions: [\n          IconButton(\n            icon: Icon(\n              Icons.settings_outlined,\n              color: primaryColor,\n            ), // Settings icon primary color\n            onPressed: () {\n              // TODO: Implement settings action\n            },\n          ),\n          const SizedBox(width: 8.0),\n        ],\n      ),\n      body: SingleChildScrollView(\n        padding: const EdgeInsets.symmetric(horizontal: 24.0),\n        child: Column(\n          crossAxisAlignment: CrossAxisAlignment.start,\n          children: [\n            const SizedBox(height: 24.0),\n            _SettingsSection(\n              title: 'General',\n              textTheme: textTheme,\n              children: [\n                _SettingsTile(\n                  title: 'Edit Profile',\n                  icon: Icons.person_outline,\n                  onTap: () {\n                    // TODO: Navigate to Edit Profile\n                    print('Edit Profile tapped');\n                  },\n                  textTheme: textTheme,\n                  primaryColor: primaryColor,\n                ),\n                _SettingsTile(\n                  title: 'Change Password',\n                  icon: Icons.lock_outline,\n                  onTap: () {\n                    // TODO: Navigate to Change Password\n                    print('Change Password tapped');\n                  },\n                  textTheme: textTheme,\n                  primaryColor: primaryColor,\n                ),\n                _SettingsTile(\n                  title: 'Language',\n                  icon: Icons.language,\n                  onTap: () {\n                    // TODO: Open Language selection\n                    print('Language tapped');\n                  },\n                  textTheme: textTheme,\n                  primaryColor: primaryColor,\n                ),\n              ],\n              colorScheme: colorScheme,\n            ),\n            const SizedBox(height: 24.0),\n            _SettingsSection(\n              title: 'Notifications',\n              textTheme: textTheme,\n              children: [\n                _SettingsToggleTile(\n                  title: 'Push Notifications',\n                  icon: Icons.notifications_none,\n                  value: _notificationsEnabled,\n                  onChanged: (bool value) {\n                    setState(() {\n                      _notificationsEnabled = value;\n                    });\n                    print('Push Notifications: $value');\n                  },\n                  textTheme: textTheme,\n                  primaryColor: primaryColor,\n                  colorScheme: colorScheme,\n                ),\n                _SettingsToggleTile(\n                  title: 'Email Notifications',\n                  icon: Icons.email_outlined,\n                  value: _notificationsEnabled, // Use same state for example\n                  onChanged: (bool value) {\n                    setState(() {\n                      _notificationsEnabled = value;\n                    });\n                    print('Email Notifications: $value');\n                  },\n                  textTheme: textTheme,\n                  primaryColor: primaryColor,\n                  colorScheme: colorScheme,\n                ),\n              ],\n              colorScheme: colorScheme,\n            ),\n            const SizedBox(height: 24.0),\n            _SettingsSection(\n              title: 'Privacy & Security',\n              textTheme: textTheme,\n              children: [\n                _SettingsToggleTile(\n                  title: 'Location Services',\n                  icon: Icons.location_on_outlined,\n                  value: _locationServicesEnabled,\n                  onChanged: (bool value) {\n                    setState(() {\n                      _locationServicesEnabled = value;\n                    });\n                    print('Location Services: $value');\n                  },\n                  textTheme: textTheme,\n                  primaryColor: primaryColor,\n                  colorScheme: colorScheme,\n                ),\n                _SettingsToggleTile(\n                  title: 'Dark Mode',\n                  icon: Icons.dark_mode_outlined,\n                  value: _darkModeEnabled,\n                  onChanged: (bool value) {\n                    setState(() {\n                      _darkModeEnabled = value;\n                    });\n                    print('Dark Mode: $value');\n                  },\n                  textTheme: textTheme,\n                  primaryColor: primaryColor,\n                  colorScheme: colorScheme,\n                ),\n                _SettingsTile(\n                  title: 'Privacy Policy',\n                  icon: Icons.policy_outlined,\n                  onTap: () {\n                    // TODO: Open Privacy Policy link\n                    print('Privacy Policy tapped');\n                  },\n                  textTheme: textTheme,\n                  primaryColor: primaryColor,\n                ),\n              ],\n              colorScheme: colorScheme,\n            ),\n            const SizedBox(height: 24.0),\n            _SettingsSection(\n              title: 'About',\n              textTheme: textTheme,\n              children: [\n                _SettingsTile(\n                  title: 'App Version',\n                  subtitle: '1.0.0',\n                  icon: Icons.info_outline,\n                  onTap: () {\n                    // TODO: Show app version info\n                    print('App Version tapped');\n                  },\n                  textTheme: textTheme,\n                  primaryColor: primaryColor,\n                ),\n                _SettingsTile(\n                  title: 'Licenses',\n                  icon: Icons.description_outlined,\n                  onTap: () {\n                    // TODO: Open Licenses page\n                    print('Licenses tapped');\n                  },\n                  textTheme: textTheme,\n                  primaryColor: primaryColor,\n                ),\n              ],\n              colorScheme: colorScheme,\n            ),\n            const SizedBox(height: 24.0),\n            _SettingsSection(\n              title: 'Help & Support',\n              textTheme: textTheme,\n              children: [\n                _SettingsTile(\n                  title: 'Contact Us',\n                  icon: Icons.support_agent_outlined,\n                  onTap: () {\n                    // TODO: Open contact support\n                    print('Contact Us tapped');\n                  },\n                  textTheme: textTheme,\n                  primaryColor: primaryColor,\n                ),\n                _SettingsTile(\n                  title: 'FAQ',\n                  icon: Icons.live_help_outlined,\n                  onTap: () {\n                    // TODO: Open FAQ page\n                    print('FAQ tapped');\n                  },\n                  textTheme: textTheme,\n                  primaryColor: primaryColor,\n                ),\n              ],\n              colorScheme: colorScheme,\n            ),\n            const SizedBox(height: 40.0),\n          ],\n        ),\n      ),\n    );\n  }\n}\n\nclass _SettingsSection extends StatelessWidget {\n  final String title;\n  final List<Widget> children;\n  final TextTheme textTheme;\n  final ColorScheme colorScheme;\n\n  const _SettingsSection({\n    required this.title,\n    required this.children,\n    required this.textTheme,\n    required this.colorScheme,\n  });\n\n  @override\n  Widget build(BuildContext context) {\n    return Column(\n      crossAxisAlignment: CrossAxisAlignment.start,\n      children: [\n        Padding(\n          padding: const EdgeInsets.only(bottom: 12.0),\n          child: Text(\n            title,\n            style: textTheme.titleMedium?.copyWith(\n              fontWeight: FontWeight.bold,\n              color: Colors.grey[800],\n            ),\n          ),\n        ),\n        Container(\n          decoration: BoxDecoration(\n            color: colorScheme.surface, // White background for the section\n            borderRadius: BorderRadius.circular(15.0),\n            boxShadow: [\n              BoxShadow(\n                color: Colors.grey.withOpacity(0.1),\n                spreadRadius: 1,\n                blurRadius: 5,\n                offset: const Offset(0, 3),\n              ),\n            ],\n          ),\n          child: Column(\n            children: List.generate(children.length, (index) {\n              return Column(\n                children: [\n                  children[index],\n                  if (index < children.length - 1)\n                    Divider(\n                      height: 0,\n                      thickness: 1,\n                      color: Colors.grey[200],\n                      indent: 16,\n                      endIndent: 16,\n                    ),\n                ],\n              );\n            }),\n          ),\n        ),\n      ],\n    );\n  }\n}\n\nclass _SettingsTile extends StatelessWidget {\n  final String title;\n  final String? subtitle;\n  final IconData icon;\n  final VoidCallback onTap;\n  final TextTheme textTheme;\n  final Color primaryColor;\n\n  const _SettingsTile({\n    required this.title,\n    this.subtitle,\n    required this.icon,\n    required this.onTap,\n    required this.textTheme,\n    required this.primaryColor,\n  });\n\n  @override\n  Widget build(BuildContext context) {\n    return ListTile(\n      leading: Icon(icon, color: Colors.grey[700]),\n      title: Text(\n        title,\n        style: textTheme.bodyLarge?.copyWith(color: Colors.grey[800]),\n      ),\n      subtitle:\n          subtitle != null\n              ? Text(\n                subtitle!,\n                style: textTheme.bodySmall?.copyWith(color: Colors.grey[600]),\n              )\n              : null,\n      trailing: Icon(\n        Icons.arrow_forward_ios,\n        color: Colors.grey[400],\n        size: 16,\n      ),\n      onTap: onTap,\n    );\n  }\n}\n\nclass _SettingsToggleTile extends StatelessWidget {\n  final String title;\n  final IconData icon;\n  final bool value;\n  final ValueChanged<bool> onChanged;\n  final TextTheme textTheme;\n  final Color primaryColor;\n  final ColorScheme colorScheme;\n\n  const _SettingsToggleTile({\n    required this.title,\n    required this.icon,\n    required this.value,\n    required this.onChanged,\n    required this.textTheme,\n    required this.primaryColor,\n    required this.colorScheme,\n  });\n\n  @override\n  Widget build(BuildContext context) {\n    return SwitchListTile(\n      secondary: Icon(icon, color: Colors.grey[700]),\n      title: Text(\n        title,\n        style: textTheme.bodyLarge?.copyWith(color: Colors.grey[800]),\n      ),\n      value: value,\n      onChanged: onChanged,\n      activeColor: primaryColor, // Active track color is primaryColor\n      activeTrackColor: primaryColor,\n      inactiveThumbColor: Colors.grey[400],\n      inactiveTrackColor: Colors.grey[300],\n      thumbColor: MaterialStateProperty.resolveWith<Color>((\n        Set<MaterialState> states,\n      ) {\n        if (states.contains(MaterialState.selected)) {\n          return Colors.white; // White thumb when active/selected\n        }\n        return Colors.grey[400]!; // Default inactive thumb color\n      }),\n    );\n  }\n}\n```\n\n// File: lib\\screens\\subscription_screen.dart\n```dart\nimport 'package:flutter/gestures.dart';\nimport 'package:flutter/material.dart';\n\nclass SubscriptionScreen extends StatelessWidget {\n  const SubscriptionScreen({super.key});\n\n  @override\n  Widget build(BuildContext context) {\n    final TextTheme textTheme = Theme.of(context).textTheme;\n    final Color primaryColor = Theme.of(context).primaryColor;\n    final ColorScheme colorScheme = Theme.of(context).colorScheme;\n\n    return Scaffold(\n      backgroundColor: Colors.grey[100], // Light grey background\n      appBar: AppBar(\n        scrolledUnderElevation: 0,\n        backgroundColor: Colors.grey[100],\n        elevation: 0,\n        leading: IconButton(\n          icon: Icon(Icons.arrow_back, color: primaryColor), // Back arrow primary color\n          onPressed: () {\n            Navigator.of(context).pop();\n          },\n        ),\n        title: Text(\n          'Subscription',\n          style: textTheme.titleLarge?.copyWith(\n            fontWeight: FontWeight.bold,\n            color: Colors.grey[800],\n            fontSize: 18,\n          ),\n        ),\n        centerTitle: true,\n      ),\n      body: Padding(\n        padding: const EdgeInsets.symmetric(horizontal: 24.0),\n        child: Column(\n          crossAxisAlignment: CrossAxisAlignment.center,\n          children: [\n            const SizedBox(height: 40.0),\n            Container(\n              padding: const EdgeInsets.all(20.0),\n              decoration: BoxDecoration(\n                color: Colors.grey[200], // Light grey background for the icon container\n                borderRadius: BorderRadius.circular(15.0),\n              ),\n              child: Icon(\n                Icons.emoji_events_outlined, // Crown icon\n                size: 60,\n                color: primaryColor, // Crown icon primary color\n              ),\n            ),\n            const SizedBox(height: 16.0),\n            Text(\n              'AI Travel Premium',\n              style: textTheme.headlineSmall?.copyWith(\n                fontWeight: FontWeight.bold,\n                color: Colors.grey[800],\n              ),\n            ),\n            const SizedBox(height: 40.0),\n            Align(\n              alignment: Alignment.centerLeft,\n              child: Text(\n                'Benefits',\n                style: textTheme.titleMedium?.copyWith(\n                  fontWeight: FontWeight.bold,\n                  color: Colors.grey[800],\n                ),\n              ),\n            ),\n            const SizedBox(height: 8.0),\n            Align(\n              alignment: Alignment.centerLeft,\n              child: Container(\n                padding: const EdgeInsets.symmetric(horizontal: 12.0, vertical: 6.0),\n                decoration: BoxDecoration(\n                  color: Colors.grey[200],\n                  borderRadius: BorderRadius.circular(20.0),\n                ),\n                child: Text(\n                  'Members-only benefits',\n                  style: textTheme.bodySmall?.copyWith(color: Colors.grey[700]),\n                ),\n              ),\n            ),\n            const SizedBox(height: 16.0),\n            // Benefits Card\n            Container(\n              padding: const EdgeInsets.all(16.0),\n              decoration: BoxDecoration(\n                color: colorScheme.surface, // White background\n                borderRadius: BorderRadius.circular(15.0),\n                boxShadow: [\n                  BoxShadow(\n                    color: Colors.grey.withOpacity(0.1),\n                    spreadRadius: 1,\n                    blurRadius: 5,\n                    offset: const Offset(0, 3),\n                  ),\n                ],\n              ),\n              child: Column(\n                crossAxisAlignment: CrossAxisAlignment.start,\n                children: [\n                  _BenefitItem(\n                    text: 'Unlimited Free Delivery',\n                    hasLink: true,\n                    linkText: 'Terms apply',\n                    onLinkTap: () {\n                      print('Terms apply tapped');\n                    },\n                    textTheme: textTheme,\n                    primaryColor: primaryColor, // Pass primaryColor to BenefitItem\n                  ),\n                  const SizedBox(height: 8.0),\n                  _BenefitItem(text: 'Ready, Set & Drive', textTheme: textTheme, primaryColor: primaryColor),\n                  const SizedBox(height: 8.0),\n                  _BenefitItem(text: 'Free Shipping', textTheme: textTheme, primaryColor: primaryColor),\n                  const SizedBox(height: 24.0),\n                  Text(\n                    'Just \\$49 a year',\n                    style: textTheme.titleLarge?.copyWith(\n                      fontWeight: FontWeight.bold,\n                      color: Colors.grey[800],\n                    ),\n                  ),\n                  const SizedBox(height: 4.0),\n                  Text(\n                    'Pays for itself in 1.5 house cleanings.\\nBased on national Average.',\n                    style: textTheme.bodySmall?.copyWith(color: Colors.grey[600]),\n                  ),\n                  const SizedBox(height: 24.0),\n                  SizedBox(\n                    width: double.infinity,\n                    height: 50,\n                    child: FilledButton(\n                      onPressed: () {\n                        // TODO: Implement Unlock Benefits\n                        print('Unlock Benefits tapped');\n                      },\n                      style: FilledButton.styleFrom(\n                        backgroundColor: primaryColor, // Unlock Benefits button primary color\n                        foregroundColor: Colors.white,\n                        shape: RoundedRectangleBorder(\n                          borderRadius: BorderRadius.circular(60), // Match primary text button style\n                        ),\n                        padding: const EdgeInsets.symmetric(vertical: 16, horizontal: 16),\n                      ),\n                      child: Text(\n                        'UNLOCK BENEFITS',\n                        style: textTheme.bodyLarge?.copyWith(\n                          fontWeight: FontWeight.bold,\n                          color: Colors.white,\n                        ),\n                      ),\n                    ),\n                  ),\n                ],\n              ),\n            ),\n            const Spacer(), // Pushes content up if screen is tall\n          ],\n        ),\n      ),\n    );\n  }\n}\n\nclass _BenefitItem extends StatelessWidget {\n  final String text;\n  final bool hasLink;\n  final String? linkText;\n  final VoidCallback? onLinkTap;\n  final TextTheme textTheme;\n  final Color primaryColor; // Added primaryColor to BenefitItem\n\n  const _BenefitItem({\n    required this.text,\n    this.hasLink = false,\n    this.linkText,\n    this.onLinkTap,\n    required this.textTheme,\n    required this.primaryColor, // Require primaryColor\n  });\n\n  @override\n  Widget build(BuildContext context) {\n    return Row(\n      crossAxisAlignment: CrossAxisAlignment.center,\n      children: [\n        Icon(Icons.check_circle, color: primaryColor, size: 20), // Checkmark icon primary color\n        const SizedBox(width: 12.0),\n        Expanded(\n          child: Text.rich(\n            TextSpan(\n              text: text,\n              style: textTheme.bodyLarge?.copyWith(color: Colors.grey[800]),\n              children: [\n                if (hasLink && linkText != null)\n                  TextSpan(\n                    text: ' ($linkText)',\n                    style: textTheme.bodyLarge?.copyWith(\n                      color: primaryColor, // Link color\n                      decoration: TextDecoration.underline,\n                    ),\n                    recognizer: TapGestureRecognizer()..onTap = onLinkTap,\n                  ),\n              ],\n            ),\n          ),\n        ),\n      ],\n    );\n  }\n}\n```\n\n"},{"id":null,"text":"      \n      "},{"id":null,"text":"Users selected primaryColor is: Color(0xFF7356FF) and font is GoogleFonts.plusJakartaSansTextTheme(). \n\nTo make the app pick up the colors and fonts appropriately, you can set them in the material app theme as:\n\ntheme: ThemeData(\n  primaryColor: <user primary color>,\n  colorScheme: ColorScheme.fromSeed(\n    seedColor: <user primary color>,\n    brightness: ThemeData.light().brightness,\n    onPrimary: Colors.white,\n    surface: Colors.white,\n  ),\n  textTheme: <user text theme>,\n),\n\nThis is user's choosen UI Template: Default theme for this UIKIT:\n \n  @override\n  Widget build(BuildContext context) {\n    const Color primaryColor = Color(\n      0xFF7356FF,\n    ); // Use user's chosen primary color\n    return MaterialApp(\n      debugShowCheckedModeBanner: false,\n      theme: ThemeData(\n        primaryColor: primaryColor,\n        colorScheme: ColorScheme.fromSeed(\n          seedColor: primaryColor,\n          brightness: ThemeData.light().brightness,\n          onPrimary: Colors.white,\n          surface: Colors.white,\n        ),\n        appBarTheme: const AppBarTheme(\n          backgroundColor: Colors.white,\n          elevation: 0,\n          iconTheme: IconThemeData(color: primaryColor),\n        ),\n        elevatedButtonTheme: ElevatedButtonThemeData(\n          style: ElevatedButton.styleFrom(\n            backgroundColor: primaryColor,\n            foregroundColor: Colors.white,\n          ),\n        ),\n        textButtonTheme: TextButtonThemeData(\n          style: TextButton.styleFrom(foregroundColor: primaryColor),\n        ),\n        outlinedButtonTheme: OutlinedButtonThemeData(\n          style: OutlinedButton.styleFrom(\n            foregroundColor: primaryColor,\n            side: const BorderSide(color: primaryColor)\n          ),\n        ),\n        floatingActionButtonTheme: FloatingActionButtonThemeData(\n          backgroundColor: primaryColor,\n          foregroundColor: Colors.white,\n        ),\n        filledButtonTheme: FilledButtonThemeData(\n          style: FilledButton.styleFrom(\n            backgroundColor: primaryColor,\n            foregroundColor: Colors.white,\n          ),\n        ),\n        textTheme:\n            GoogleFonts.plusJakartaSansTextTheme(), // Apply user's text theme\n      )\nmodern/lib/main.dart\nmodern/lib/screens/profile_and_settings/user_profile_with_settings.dart\nmodern/lib/screens/inbox/notifactions_screen.dart\nmodern/lib/screens/inbox/messages_screen.dart\nmodern/lib/screens/feed/feed_with_categories.dart\nmodern/lib/screens/authentication/social_media_email_signup.dart\nmodern/lib/screens/authentication/otp_screen.dart\nmodern/lib/screens/authentication/multi_option_registration.dart\nmodern/lib/screens/authentication/login_using_number.dart\nmodern/lib/screens/authentication/email_password_login.dart\nmodern/lib/screens/audio_player/music_player.dart\nmodern/lib/screens/articles/article_screen.dart\nmodern/lib/screens/articles/article_image_highlight_screen.dart\nmodern/lib/screens/articles/article_author_detail_screen.dart\nmodern/lib/components/notification_tile.dart\nmodern/lib/components/text_fields/search_field.dart\nmodern/lib/components/text_fields/phone_text_field.dart\nmodern/lib/components/text_fields/otp_indicator.dart\nmodern/lib/components/text_fields/custom_chip.dart\nmodern/lib/components/text_fields/auth_textfields.dart\nmodern/lib/components/text_fields/Lists/expense_list.dart\nmodern/lib/components/text_fields/Carousels/project_card_carousel.dart\nmodern/lib/components/text_fields/Carousels/profile_list.dart\nmodern/lib/components/text_fields/Carousels/action_cards.dart\nmodern/lib/components/search_bars/basic_rounded.dart\nmodern/lib/components/lists/text_cart_list.dart\nmodern/lib/components/lists/radio_options_list.dart\nmodern/lib/components/lists/product_cart_list.dart\nmodern/lib/components/lists/message_list_item.dart\nmodern/lib/components/forms/rating_feedback.dart\nmodern/lib/components/charts/review_bar.dart\nmodern/lib/components/charts/revenue_progress_chart.dart\nmodern/lib/components/charts/conversion_rate.dart\nmodern/lib/components/charts/bar_vertical_fill.dart\nmodern/lib/components/charts/bar_horizontal_fill.dart\nmodern/lib/components/carousels/suggestions.dart\nmodern/lib/components/carousels/review_cards_carousls.dart\nmodern/lib/components/carousels/review.dart\nmodern/lib/components/cards/toggle_feature_card.dart\nmodern/lib/components/cards/social_media_postcard.dart\nmodern/lib/components/cards/order_summary.dart\nmodern/lib/components/cards/financial_dashboard_card.dart\nmodern/lib/components/buttons/social_auth_button.dart\nmodern/lib/components/buttons/primary_text_button.dart\nmodern/lib/components/buttons/floating_button.dart\nmodern/lib/components/buttons/circular_icon_button.dart\nmodern/lib/components/Paywall/subscription_term_options.dart\nmodern/lib/components/Paywall/plan_selection.dart\nmodern/lib/components/Navigations/tab_navigation_01.dart\nmodern/lib/components/Navigations/location_navigation.dart\nCopy the required components and screens directly in the user’s project in a file structure similar to template. Remember the UIKit components are designed to perfection, so don't change styling unless it explicitly is a user requirement.\n             \nAnalyze the user instructions, current screen screenshot, reference images and detail out the design requirements of the UI screen and what do we need to achieve there. \n            \nThen figure out what are widgets and screens in the UI template that we need to use to achieve the user's design requirements. If there are no direct fitting options, try to still use some existing widgets by having a plan to tweak them. Make sure the user's project matches the UI template design."},{"id":null,"text":"You can ask clients for as many template files as you need to see as many times as you want. Please proceed, all the best!"}]},{"id":null,"role":"model","parts":[{"id":null,"text":"To build a home screen for the project, I will start by examining existing components and screens to understand the project's theme and style. This will help me to create a home screen that aligns seamlessly with the current UI.\n\nTo do this, I will request to view a few template files. These files are chosen to give me a broad understanding of the design patterns, color usage, typography, and component styling already present in the UIKit.\n\nHere are the template files I'd like to review:\n\n<<<PIXEL_VIEW_TEMPLATE_FILE_START>>>\nmodern/lib/screens/feed/feed_with_categories.dart\n<<<PIXEL_VIEW_TEMPLATE_FILE_END>>>\n<<<PIXEL_VIEW_TEMPLATE_FILE_START>>>\nmodern/lib/components/search_bars/basic_rounded.dart\n<<<PIXEL_VIEW_TEMPLATE_FILE_END>>>\n<<<PIXEL_VIEW_TEMPLATE_FILE_START>>>\nmodern/lib/components/carousels/suggestions.dart\n<<<PIXEL_VIEW_TEMPLATE_FILE_END>>>\n<<<PIXEL_VIEW_TEMPLATE_FILE_START>>>\nmodern/lib/components/lists/product_cart_list.dart\n<<<PIXEL_VIEW_TEMPLATE_FILE_END>>>\n<<<PIXEL_VIEW_TEMPLATE_FILE_START>>>\nmodern/lib/components/Navigations/tab_navigation_01.dart\n<<<PIXEL_VIEW_TEMPLATE_FILE_END>>>"}]},{"id":null,"role":"user","parts":[{"id":null,"text":"Failed to fetch following template files: [modern/lib/screens/feed/feed_with_categories.dart, modern/lib/components/search_bars/basic_rounded.dart, modern/lib/components/carousels/suggestions.dart, modern/lib/components/lists/product_cart_list.dart, modern/lib/components/Navigations/tab_navigation_01.dart]. Please make sure you are passing the correct paths in the format\n<<<PIXEL_VIEW_TEMPLATE_FILE_START>>>\npath of file 1\n<<<PIXEL_VIEW_TEMPLATE_FILE_END>>>\n<<<PIXEL_VIEW_TEMPLATE_FILE_START>>>\npath of file 2\n<<<PIXEL_VIEW_TEMPLATE_FILE_END>>>\n"}]},{"id":null,"role":"model","parts":[{"id":null,"text":"I apologize for the incorrect file paths in my previous request. It seems I used the `modern` prefix which is not part of the provided file structure. I will correct this and request the files again using the paths relative to the project root.\n\nI still need to understand the project's design language, so I will request to view a few representative files. Specifically, I'd like to see how common UI elements like lists, navigation, and input fields are styled, as these will be crucial for a home screen.\n\nHere are the corrected template files I'd like to review:\n\n<<<PIXEL_VIEW_TEMPLATE_FILE_START>>>\nlib/screens/explore_hotels_screen.dart\n<<<PIXEL_VIEW_TEMPLATE_FILE_END>>>\n<<<PIXEL_VIEW_TEMPLATE_FILE_START>>>\nlib/screens/order_status_screen.dart\n<<<PIXEL_VIEW_TEMPLATE_FILE_END>>>\n<<<PIXEL_VIEW_TEMPLATE_FILE_START>>>\nlib/screens/hotel_details_screen.dart\n<<<PIXEL_VIEW_TEMPLATE_FILE_END>>>\n<<<PIXEL_VIEW_TEMPLATE_FILE_START>>>\nlib/components/buttons/primary_text_button.dart\n<<<PIXEL_VIEW_TEMPLATE_FILE_END>>>\n<<<PIXEL_VIEW_TEMPLATE_FILE_START>>>\nlib/components/buttons/social_auth_button.dart\n<<<PIXEL_VIEW_TEMPLATE_FILE_END>>>"}]},{"id":null,"role":"user","parts":[{"id":null,"text":"Failed to fetch following template files: [lib/screens/explore_hotels_screen.dart, lib/screens/order_status_screen.dart, lib/screens/hotel_details_screen.dart, lib/components/buttons/primary_text_button.dart, lib/components/buttons/social_auth_button.dart]. Please make sure you are passing the correct paths in the format\n<<<PIXEL_VIEW_TEMPLATE_FILE_START>>>\npath of file 1\n<<<PIXEL_VIEW_TEMPLATE_FILE_END>>>\n<<<PIXEL_VIEW_TEMPLATE_FILE_START>>>\npath of file 2\n<<<PIXEL_VIEW_TEMPLATE_FILE_END>>>\n"}]},{"id":null,"role":"model","parts":[{"id":null,"text":"My apologies once again for the repeated errors in fetching the template files. It appears I was trying to request files that were already provided in the initial project context. I misunderstood the client's output format, where the provided files were already the \"viewed\" files.\n\nI have now reviewed the provided codebase thoroughly. Based on the existing files, particularly `explore_hotels_screen.dart`, `hotel_details_screen.dart`, `order_status_screen.dart`, and the button components, I can establish the design language. The theme uses a primary purple color (`0xFF7356FF`), a \"Plus Jakarta Sans\" font, and a clean, modern aesthetic with rounded corners for cards and buttons, subtle shadows, and a consistent use of grey shades for secondary text and backgrounds.\n\nHere's my plan to build the home screen, aligning with the project's theme and style:\n\n**Design Requirements for the Home Screen:**\n\n1.  **Top Section (App Bar/Header):**\n    *   Profile picture/avatar on the left.\n    *   Greeting message (\"Hello, Jane!\") and a welcoming subtitle (\"Hope you are having a good time\").\n    *   Notification icon on the right.\n    *   Clean, minimalistic design consistent with other app bars (e.g., `explore_hotels_screen.dart`).\n\n2.  **Search Bar:**\n    *   A prominent search bar for \"Search for your next adventure\".\n    *   Include a search icon and possibly a filter/AI icon on the right.\n    *   It should resemble the text fields and search elements seen in `book_hotel_screen.dart` or `ai_chat_section.dart`.\n\n3.  **Explore Categories/Options:**\n    *   A horizontal scrollable list of categories (e.g., \"Hotel\", \"Convention Center\", \"Flights\", \"Travel\").\n    *   Each category should be a tappable chip, similar to the `_FilterChip` in `explore_hotels_screen.dart` or `_OrderCategoryTab` in `order_status_screen.dart`, with active and inactive states.\n\n4.  **Promotional/Featured Content Section:**\n    *   A visually appealing card or carousel highlighting a featured destination or offer.\n    *   This could incorporate an image, title, and a call to action.\n\n5.  **Recently Booked/Recommended Section:**\n    *   A list or horizontal carousel of recently booked hotels or recommended destinations.\n    *   Each item in this list should be a card similar to the `_HotelCard` found in `explore_hotels_screen.dart`, displaying an image, name, location, rating, and price.\n\n6.  **Bottom Navigation Bar (Placeholder for future):**\n    *   While not explicitly requested, a home screen typically has a bottom navigation. I will add a basic one as a placeholder, aligning with the overall app structure.\n\n**UIKit Elements to Use and Adapt:**\n\n*   **App Bar:** Adapt the `AppBar` styling from `explore_hotels_screen.dart` or `order_status_screen.dart` for consistency.\n*   **Text Styling:** Utilize `Theme.of(context).textTheme` and `primaryColor` as seen across all screens to maintain typography and color consistency.\n*   **Search Bar:** Replicate the `TextField` styling from `book_hotel_screen.dart` or `ai_chat_section.dart`.\n*   **Filter/Category Chips:** Adapt the `_FilterChip` from `explore_hotels_screen.dart` or `_OrderCategoryTab` from `order_status_screen.dart`. I'll create a generic `_CategoryChip` for this.\n*   **Cards (for hotels/promos):** Reuse and adapt the `_HotelCard` structure from `explore_hotels_screen.dart` for displaying featured and recently booked items.\n*   **Buttons:** `PrimaryTextButton` will be used for any prominent call-to-action buttons if needed.\n\nI will create a new file `lib/screens/home_screen.dart` for this. I will also update `main.dart` to set `HomeScreen` as the initial screen so the user can see it immediately.\n\nI will now proceed with generating the code.\n\n<<<PIXEL_FILE_PATH>>>\nlib/screens/home_screen.dart\n<<<PIXEL_CODE_START>>>\nimport 'package:flutter/material.dart';\nimport 'package:ai_travel_app_ui_kit/components/buttons/primary_text_button.dart'; // Import if needed for any button\nimport 'package:font_awesome_flutter/font_awesome_flutter.dart'; // For icons if needed\n\nclass HomeScreen extends StatefulWidget {\n  const HomeScreen({super.key});\n\n  @override\n  State<HomeScreen> createState() => _HomeScreenState();\n}\n\nclass _HomeScreenState extends State<HomeScreen> {\n  String _selectedCategory = 'Hotel'; // Default selected category\n\n  @override\n  Widget build(BuildContext context) {\n    final TextTheme textTheme = Theme.of(context).textTheme;\n    final Color primaryColor = Theme.of(context).primaryColor;\n    final ColorScheme colorScheme = Theme.of(context).colorScheme;\n\n    return Scaffold(\n      backgroundColor: Colors.grey[100], // Consistent light grey background\n      appBar: AppBar(\n        backgroundColor: Colors.grey[100], // Match scaffold background\n        elevation: 0,\n        scrolledUnderElevation: 0, // Ensure no shadow on scroll\n        titleSpacing: 0, // Remove default title spacing for custom layout\n        title: Padding(\n          padding: const EdgeInsets.only(left: 24.0),\n          child: Row(\n            children: [\n              CircleAvatar(\n                radius: 20,\n                backgroundColor: Colors.grey[300],\n                backgroundImage: NetworkImage(\n                  'https://picsum.photos/100/100?random=profile_home', // Placeholder profile image\n                ),\n              ),\n              const SizedBox(width: 12.0),\n              Column(\n                crossAxisAlignment: CrossAxisAlignment.start,\n                children: [\n                  Text(\n                    'Hello, Jane!',\n                    style: textTheme.bodyLarge?.copyWith(\n                      fontWeight: FontWeight.bold,\n                      color: Colors.grey[800],\n                    ),\n                  ),\n                  Text(\n                    'Hope you are having a good time',\n                    style: textTheme.bodySmall?.copyWith(\n                      color: Colors.grey[600],\n                    ),\n                  ),\n                ],\n              ),\n            ],\n          ),\n        ),\n        actions: [\n          IconButton(\n            icon: Icon(Icons.notifications_none, color: primaryColor, size: 24),\n            onPressed: () {\n              // TODO: Implement notification action\n              print('Notifications tapped');\n            },\n          ),\n          const SizedBox(width: 16.0),\n        ],\n      ),\n      body: SingleChildScrollView(\n        padding: const EdgeInsets.symmetric(horizontal: 24.0),\n        child: Column(\n          crossAxisAlignment: CrossAxisAlignment.start,\n          children: [\n            const SizedBox(height: 24.0),\n            // Search Bar\n            TextField(\n              decoration: InputDecoration(\n                hintText: 'Search for your next adventure',\n                hintStyle:\n                    textTheme.bodyLarge?.copyWith(color: Colors.grey[500]),\n                filled: true,\n                fillColor: colorScheme.surface, // White background\n                prefixIcon: Icon(Icons.search, color: Colors.grey[600]),\n                suffixIcon: Container(\n                  margin: const EdgeInsets.only(right: 8.0),\n                  padding: const EdgeInsets.all(8.0),\n                  decoration: BoxDecoration(\n                    color: primaryColor.withOpacity(0.1),\n                    borderRadius: BorderRadius.circular(10.0),\n                  ),\n                  child: Icon(Icons.psychology_outlined, color: primaryColor),\n                ),\n                border: OutlineInputBorder(\n                  borderRadius: BorderRadius.circular(15.0),\n                  borderSide: BorderSide.none,\n                ),\n                contentPadding: const EdgeInsets.symmetric(vertical: 16.0),\n              ),\n              style: textTheme.bodyLarge?.copyWith(color: Colors.grey[850]),\n            ),\n            const SizedBox(height: 24.0),\n            // Categories\n            Text(\n              'Explore Categories',\n              style: textTheme.titleMedium?.copyWith(\n                fontWeight: FontWeight.bold,\n                color: Colors.grey[800],\n              ),\n            ),\n            const SizedBox(height: 16.0),\n            SingleChildScrollView(\n              scrollDirection: Axis.horizontal,\n              child: Row(\n                children: [\n                  _CategoryChip(\n                    text: 'Hotel',\n                    isSelected: _selectedCategory == 'Hotel',\n                    onTap: () {\n                      setState(() {\n                        _selectedCategory = 'Hotel';\n                      });\n                    },\n                    primaryColor: primaryColor,\n                    textTheme: textTheme,\n                  ),\n                  const SizedBox(width: 12.0),\n                  _CategoryChip(\n                    text: 'Convention Center',\n                    isSelected: _selectedCategory == 'Convention Center',\n                    onTap: () {\n                      setState(() {\n                        _selectedCategory = 'Convention Center';\n                      });\n                    },\n                    primaryColor: primaryColor,\n                    textTheme: textTheme,\n                  ),\n                  const SizedBox(width: 12.0),\n                  _CategoryChip(\n                    text: 'Flights',\n                    isSelected: _selectedCategory == 'Flights',\n                    onTap: () {\n                      setState(() {\n                        _selectedCategory = 'Flights';\n                      });\n                    },\n                    primaryColor: primaryColor,\n                    textTheme: textTheme,\n                  ),\n                  const SizedBox(width: 12.0),\n                  _CategoryChip(\n                    text: 'Travel',\n                    isSelected: _selectedCategory == 'Travel',\n                    onTap: () {\n                      setState(() {\n                        _selectedCategory = 'Travel';\n                      });\n                    },\n                    primaryColor: primaryColor,\n                    textTheme: textTheme,\n                  ),\n                ],\n              ),\n            ),\n            const SizedBox(height: 24.0),\n            // Featured Destination\n            Text(\n              'Featured Destination',\n              style: textTheme.titleMedium?.copyWith(\n                fontWeight: FontWeight.bold,\n                color: Colors.grey[800],\n              ),\n            ),\n            const SizedBox(height: 16.0),\n            _HotelCard(\n              hotelName: 'The Westin Dhaka',\n              address: 'Gulshan 2, Dhaka',\n              pricePerDay: '\\$180',\n              rating: '4.8 (1.5k reviews)',\n              imageUrl: 'https://picsum.photos/400/250?random=featured',\n              textTheme: textTheme,\n              colorScheme: colorScheme,\n              onTap: () {\n                // TODO: Navigate to The Westin Dhaka details\n                print('Tapped The Westin Dhaka');\n              },\n            ),\n            const SizedBox(height: 24.0),\n            // Recently Booked\n            Text(\n              'Recently Booked',\n              style: textTheme.titleMedium?.copyWith(\n                fontWeight: FontWeight.bold,\n                color: Colors.grey[800],\n              ),\n            ),\n            const SizedBox(height: 16.0),\n            ListView.builder(\n              shrinkWrap: true,\n              physics: const NeverScrollableScrollPhysics(), // Disable internal scrolling\n              itemCount: 3, // Example: 3 recently booked items\n              itemBuilder: (context, index) {\n                return Padding(\n                  padding: const EdgeInsets.only(bottom: 16.0),\n                  child: _HotelCard(\n                    hotelName: 'Hotel Supreme - Booking ${index + 1}',\n                    address: '4140 Parker Rd. Allentown, Sylhet 3100',\n                    pricePerDay: '\\$126',\n                    rating: '4.9 (234 reviews)',\n                    imageUrl: 'https://picsum.photos/400/250?random=${index + 10}', // Different image for each\n                    textTheme: textTheme,\n                    colorScheme: colorScheme,\n                    onTap: () {\n                      // TODO: Navigate to Hotel Supreme details\n                      print('Tapped Recently Booked Hotel Supreme ${index + 1}');\n                    },\n                  ),\n                );\n              },\n            ),\n            const SizedBox(height: 80.0), // Padding for bottom navigation\n          ],\n        ),\n      ),\n      bottomNavigationBar: _BottomNavigationBar(\n        primaryColor: primaryColor,\n        colorScheme: colorScheme,\n        textTheme: textTheme,\n      ),\n    );\n  }\n}\n\nclass _CategoryChip extends StatelessWidget {\n  final String text;\n  final bool isSelected;\n  final VoidCallback onTap;\n  final Color primaryColor;\n  final TextTheme textTheme;\n\n  const _CategoryChip({\n    required this.text,\n    required this.isSelected,\n    required this.onTap,\n    required this.primaryColor,\n    required this.textTheme,\n  });\n\n  @override\n  Widget build(BuildContext context) {\n    return GestureDetector(\n      onTap: onTap,\n      child: Container(\n        padding: const EdgeInsets.symmetric(horizontal: 20.0, vertical: 12.0),\n        decoration: BoxDecoration(\n          color: isSelected ? primaryColor : Colors.transparent,\n          borderRadius: BorderRadius.circular(10.0),\n          border: Border.all(color: Colors.grey[300]!, width: 1.0),\n        ),\n        child: Text(\n          text,\n          style: textTheme.bodyMedium?.copyWith(\n            color: isSelected ? Colors.white : Colors.grey[700],\n            fontWeight: isSelected ? FontWeight.bold : FontWeight.normal,\n          ),\n        ),\n      ),\n    );\n  }\n}\n\n// Re-using _HotelCard from explore_hotels_screen.dart\nclass _HotelCard extends StatefulWidget {\n  final String hotelName;\n  final String address;\n  final String pricePerDay;\n  final String rating;\n  final String imageUrl;\n  final TextTheme textTheme;\n  final ColorScheme colorScheme;\n  final VoidCallback onTap;\n\n  const _HotelCard({\n    required this.hotelName,\n    required this.address,\n    required this.pricePerDay,\n    required this.rating,\n    required this.imageUrl,\n    required this.textTheme,\n    required this.colorScheme,\n    required this.onTap,\n    super.key,\n  });\n\n  @override\n  State<_HotelCard> createState() => _HotelCardState();\n}\n\nclass _HotelCardState extends State<_HotelCard> {\n  bool _isFavorite = false;\n\n  @override\n  Widget build(BuildContext context) {\n    return Material(\n      color: widget.colorScheme.surface,\n      borderRadius: BorderRadius.circular(15.0),\n      child: InkWell(\n        borderRadius: BorderRadius.circular(15.0),\n        onTap: widget.onTap,\n        hoverColor: widget.colorScheme.primary.withOpacity(0.05),\n        splashColor: widget.colorScheme.primary.withOpacity(0.2),\n        child: Container(\n          padding: const EdgeInsets.all(16.0),\n          decoration: BoxDecoration(\n            borderRadius: BorderRadius.circular(15.0),\n          ),\n          child: Column(\n            crossAxisAlignment: CrossAxisAlignment.start,\n            children: [\n              Stack(\n                children: [\n                  ClipRRect(\n                    borderRadius: BorderRadius.circular(10.0),\n                    child: Image.network(\n                      widget.imageUrl,\n                      height: 220,\n                      width: double.infinity,\n                      fit: BoxFit.cover,\n                      errorBuilder: (context, error, stackTrace) => Container(\n                        height: 220,\n                        width: double.infinity,\n                        color: Colors.grey[300],\n                        child: Icon(\n                          Icons.broken_image,\n                          color: Colors.grey[600],\n                        ),\n                      ),\n                    ),\n                  ),\n                  Positioned(\n                    top: 8.0,\n                    right: 8.0,\n                    child: Container(\n                      decoration: BoxDecoration(\n                        color: Colors.white.withOpacity(0.8),\n                        shape: BoxShape.circle,\n                      ),\n                      child: IconButton(\n                        icon: Icon(\n                          _isFavorite ? Icons.favorite : Icons.favorite_border,\n                          color: _isFavorite ? Colors.red : Colors.grey[700],\n                        ),\n                        onPressed: () {\n                          setState(() {\n                            _isFavorite = !_isFavorite;\n                          });\n                          print(\n                            'Favorite toggled for ${widget.hotelName}: $_isFavorite',\n                          );\n                        },\n                      ),\n                    ),\n                  ),\n                ],\n              ),\n              const SizedBox(height: 16.0),\n              Row(\n                mainAxisAlignment: MainAxisAlignment.spaceBetween,\n                children: [\n                  Expanded(\n                    child: Column(\n                      crossAxisAlignment: CrossAxisAlignment.start,\n                      children: [\n                        Text(\n                          widget.hotelName,\n                          style: widget.textTheme.titleMedium?.copyWith(\n                            fontWeight: FontWeight.bold,\n                            color: Colors.grey[800],\n                          ),\n                          maxLines: 1,\n                          overflow: TextOverflow.ellipsis,\n                        ),\n                        const SizedBox(height: 4.0),\n                        Text(\n                          widget.address,\n                          style: widget.textTheme.bodySmall?.copyWith(\n                            color: Colors.grey[600],\n                          ),\n                          maxLines: 1,\n                          overflow: TextOverflow.ellipsis,\n                        ),\n                      ],\n                    ),\n                  ),\n                  Text(\n                    '${widget.pricePerDay}/Day',\n                    style: widget.textTheme.titleSmall?.copyWith(\n                      fontWeight: FontWeight.bold,\n                      color: Colors.grey[800],\n                    ),\n                  ),\n                ],\n              ),\n              const SizedBox(height: 8.0),\n              Row(\n                children: [\n                  Icon(Icons.star, color: Colors.amber, size: 16),\n                  const SizedBox(width: 4.0),\n                  Text(\n                    widget.rating,\n                    style: widget.textTheme.bodySmall?.copyWith(\n                      color: Colors.grey[700],\n                    ),\n                  ),\n                ],\n              ),\n            ],\n          ),\n        ),\n      ),\n    );\n  }\n}\n\nclass _BottomNavigationBar extends StatefulWidget {\n  final Color primaryColor;\n  final ColorScheme colorScheme;\n  final TextTheme textTheme;\n\n  const _BottomNavigationBar({\n    required this.primaryColor,\n    required this.colorScheme,\n    required this.textTheme,\n  });\n\n  @override\n  State<_BottomNavigationBar> createState() => _BottomNavigationBarState();\n}\n\nclass _BottomNavigationBarState extends State<_BottomNavigationBar> {\n  int _selectedIndex = 0; // Default to Home tab\n\n  void _onItemTapped(int index) {\n    setState(() {\n      _selectedIndex = index;\n    });\n    // TODO: Implement navigation for each tab\n    print('Tapped tab: $index');\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    return Container(\n      decoration: BoxDecoration(\n        color: widget.colorScheme.surface,\n        boxShadow: [\n          BoxShadow(\n            color: Colors.grey.withOpacity(0.1),\n            spreadRadius: 1,\n            blurRadius: 5,\n            offset: const Offset(0, -3), // Shadow above the bar\n          ),\n        ],\n      ),\n      child: BottomNavigationBar(\n        elevation: 0, // No shadow on the bar itself, using container shadow\n        backgroundColor: Colors.transparent, // Transparent to show container color\n        selectedItemColor: widget.primaryColor,\n        unselectedItemColor: Colors.grey[500],\n        showSelectedLabels: true,\n        showUnselectedLabels: true,\n        selectedLabelStyle: widget.textTheme.bodySmall?.copyWith(\n          fontWeight: FontWeight.bold,\n          color: widget.primaryColor,\n        ),\n        unselectedLabelStyle: widget.textTheme.bodySmall?.copyWith(\n          color: Colors.grey[500],\n        ),\n        type: BottomNavigationBarType.fixed, // Ensures all items are visible\n        currentIndex: _selectedIndex,\n        onTap: _onItemTapped,\n        items: const <BottomNavigationBarItem>[\n          BottomNavigationBarItem(\n            icon: Icon(Icons.home_outlined),\n            label: 'Home',\n          ),\n          BottomNavigationBarItem(\n            icon: Icon(Icons.book_online_outlined),\n            label: 'Bookings',\n          ),\n          BottomNavigationBarItem(\n            icon: Icon(Icons.favorite_border),\n            label: 'Favorites',\n          ),\n          BottomNavigationBarItem(\n            icon: Icon(Icons.person_outline),\n            label: 'Profile',\n          ),\n        ],\n      ),\n    );\n  }\n}\n<<<PIXEL_CODE_END>>>\n\nNow, I will update `main.dart` to set `HomeScreen` as the home widget so you can see the new UI.\n\n<<<PIXEL_FILE_PATH>>>\nlib/main.dart\n<<<PIXEL_CODE_START>>>\nimport 'package:ai_travel_app_ui_kit/screens/date_timeline_screen.dart'; // Import the new screen\nimport 'package:flutter/material.dart';\nimport 'package:pixel_preview/pixel_preview.dart';\nimport 'package:google_fonts/google_fonts.dart'; // Import google_fonts\nimport 'package:ai_travel_app_ui_kit/screens/book_hotel_screen.dart';\nimport 'package:ai_travel_app_ui_kit/placeholder.dart';\nimport 'package:ai_travel_app_ui_kit/screens/home_screen.dart'; // Import the new home screen\nimport 'package:ai_travel_app_ui_kit/screens/explore_hotels_screen.dart'; // Import the new explore hotels screen\n\nimport 'package:ai_travel_app_ui_kit/screens/hotel_filter_screen.dart'; // Import the new HotelFilterScreen\nimport 'package:ai_travel_app_ui_kit/screens/hotel_details_screen.dart'; // Import the new HotelDetailsScreen\nimport 'package:ai_travel_app_ui_kit/screens/reservation_details_screen.dart'; // Import the new ReservationDetailsScreen\nimport 'package:ai_travel_app_ui_kit/screens/order_status_screen.dart'; // Import the new OrderStatusScreen\nimport 'package:ai_travel_app_ui_kit/screens/profile_screen.dart'; // Import the new ProfileScreen\nimport 'package:ai_travel_app_ui_kit/screens/subscription_screen.dart'; // Import the new SubscriptionScreen\nimport 'package:ai_travel_app_ui_kit/screens/settings_screen.dart'; // Import the new SettingsScreen\n\nvoid main() {\n  runApp(const MyApp());\n}\n\nclass MyApp extends StatelessWidget {\n  const MyApp({super.key});\n\n  @override\n  Widget build(BuildContext context) {\n    const Color primaryColor = Color(0xFF7356FF); // User's chosen primary color\n    return MaterialApp(\n      debugShowCheckedModeBanner: false,\n      title: 'Starter App', // Updated title\n      theme: ThemeData(\n        primaryColor: primaryColor,\n        colorScheme: ColorScheme.fromSeed(\n          seedColor: primaryColor,\n          brightness: ThemeData.light().brightness,\n          onPrimary: Colors.white,\n          surface: Colors.white,\n        ),\n        appBarTheme: const AppBarTheme(\n          backgroundColor: Colors.white,\n          elevation: 0,\n          iconTheme: IconThemeData(color: primaryColor),\n        ),\n        elevatedButtonTheme: ElevatedButtonThemeData(\n          style: ElevatedButton.styleFrom(\n            backgroundColor: primaryColor,\n            foregroundColor: Colors.white,\n          ),\n        ),\n        textButtonTheme: TextButtonThemeData(\n          style: TextButton.styleFrom(foregroundColor: primaryColor),\n        ),\n        outlinedButtonTheme: OutlinedButtonThemeData(\n          style: OutlinedButton.styleFrom(\n            foregroundColor: primaryColor,\n            side: const BorderSide(color: primaryColor),\n          ),\n        ),\n        floatingActionButtonTheme: FloatingActionButtonThemeData(\n          backgroundColor: primaryColor,\n          foregroundColor: Colors.white,\n        ),\n        filledButtonTheme: FilledButtonThemeData(\n          style: FilledButton.styleFrom(\n            backgroundColor: primaryColor,\n            foregroundColor: Colors.white,\n          ),\n        ),\n        textTheme:\n            GoogleFonts.plusJakartaSansTextTheme(), // Apply user's text theme\n      ),\n      home: const PixelPreview(\n        presets: ScreenPresets(),\n        child: const HomeScreen(), // Set HomeScreen as the home screen\n      ),\n    );\n  }\n}\n<<<PIXEL_CODE_END>>>"}]},{"id":"codebase","role":"user","parts":[{"id":"codebase","text":"Current codebase: <State of the codebase at that point in time>"}]},{"id":null,"role":"user","parts":[{"id":null,"text":"User Instruction: add a floating AI assistance button somewhere gracefully\n"},{"id":null,"text":"Here is a screenshot of the current UI state:"},{"id":null,"image":{"mime_type":"image/png","file_uri":"https://generativelanguage.googleapis.com/v1beta/files/tyfvrwszzqkl"}},{"id":null,"text":"1. First, discuss what they want to achieve. \n2. Since the screens should strictly have theme and style of the UI template, figure out what new screens/widgets we need from the UI template to achieve the changes.\n3. Output the updated code in the same format as earlier:\n\n1. To make code edits in the users codebase:\n<<<PIXEL_FILE_PATH>>>\nlib/Screens/image_generator_screen.dart **// IMPORTANT: This is an EXAMPLE path. You MUST replace this with the correct, relevant file path derived from the user's request (e.g., `lib/screens/login_screen.dart` if the user asks for a login screen).**\n<<<PIXEL_CODE_START>>>\nentire file code\n<<<PIXEL_CODE_END>>>\nMake sure the file path is relative and the entire code to be replaced in file is included.\n\n2. To install pub dependencies:\n<<<PIXEL_PUB_INSTALL_START>>>\ndependency_name\n<<<PIXEL_PUB_INSTALL_END>>>\n\nOnly include a single dependency at a time, for instance:\n<<<PIXEL_PUB_INSTALL_START>>>\ngoogle_fonts\n<<<PIXEL_PUB_INSTALL_END>>>\n\n3. To relay important information, questions or clarifications to user:\n<<<PIXEL_USER_INFORM_START>>>\nyour message to be shown to user\n<<<PIXEL_USER_INFORM_END>>>\n\n4. To request viewing a single UI template file\n<<<PIXEL_VIEW_TEMPLATE_FILE_START>>>\npath of file\n<<<PIXEL_VIEW_TEMPLATE_FILE_END>>>\nTo view multiple files, add multiple such statements. Stop after you've requested all the files, the client will provide you the files in the next message.\n\n\nAll of these formats are parsed using Regex and programatically executed at the users end, so you should strictly stick to the above formats."}]},{"id":null,"role":"model","parts":[{"id":null,"text":"The user wants to add a floating AI assistance button to the home screen.\n\n**Design Requirements:**\n1.  **Floating Action Button:** The button should be a FloatingActionButton for prominence and accessibility.\n2.  **AI Icon:** It should use an appropriate AI-related icon, such as `Icons.psychology_outlined`, which is already used in `explore_hotels_screen.dart` and `profile_screen.dart` to represent AI features.\n3.  **Placement:** The button should be placed gracefully, typically at the bottom-right or bottom-center of the screen, above the bottom navigation bar.\n4.  **Styling:** It should adhere to the primary color theme and rounded aesthetics of the existing UI.\n\n**UIKit Elements to Use and Adapt:**\n*   `FloatingActionButton`: Flutter's built-in widget, which aligns with the app's `ThemeData.floatingActionButtonTheme` set in `main.dart`. This ensures consistent styling without manual intervention.\n*   `Icons.psychology_outlined`: Already available and used within the project for AI functionality.\n\nI will modify `lib/screens/home_screen.dart` to add the `FloatingActionButton`. I will place it in the `Scaffold`'s `floatingActionButton` property, which automatically handles its graceful positioning above the bottom navigation bar.\n\n<<<PIXEL_FILE_PATH>>>\nlib/screens/home_screen.dart\n<<<PIXEL_CODE_START>>>\nimport 'package:flutter/material.dart';\nimport 'package:ai_travel_app_ui_kit/components/buttons/primary_text_button.dart'; // Import if needed for any button\nimport 'package:font_awesome_flutter/font_awesome_flutter.dart'; // For icons if needed\n\nclass HomeScreen extends StatefulWidget {\n  const HomeScreen({super.key});\n\n  @override\n  State<HomeScreen> createState() => _HomeScreenState();\n}\n\nclass _HomeScreenState extends State<HomeScreen> {\n  String _selectedCategory = 'Hotel'; // Default selected category\n\n  @override\n  Widget build(BuildContext context) {\n    final TextTheme textTheme = Theme.of(context).textTheme;\n    final Color primaryColor = Theme.of(context).primaryColor;\n    final ColorScheme colorScheme = Theme.of(context).colorScheme;\n\n    return Scaffold(\n      backgroundColor: Colors.grey[100], // Consistent light grey background\n      appBar: AppBar(\n        backgroundColor: Colors.grey[100], // Match scaffold background\n        elevation: 0,\n        scrolledUnderElevation: 0, // Ensure no shadow on scroll\n        titleSpacing: 0, // Remove default title spacing for custom layout\n        title: Padding(\n          padding: const EdgeInsets.only(left: 24.0),\n          child: Row(\n            children: [\n              CircleAvatar(\n                radius: 20,\n                backgroundColor: Colors.grey[300],\n                backgroundImage: NetworkImage(\n                  'https://picsum.photos/100/100?random=profile_home', // Placeholder profile image\n                ),\n              ),\n              const SizedBox(width: 12.0),\n              Column(\n                crossAxisAlignment: CrossAxisAlignment.start,\n                children: [\n                  Text(\n                    'Hello, Jane!',\n                    style: textTheme.bodyLarge?.copyWith(\n                      fontWeight: FontWeight.bold,\n                      color: Colors.grey[800],\n                    ),\n                  ),\n                  Text(\n                    'Hope you are having a good time',\n                    style: textTheme.bodySmall?.copyWith(\n                      color: Colors.grey[600],\n                    ),\n                  ),\n                ],\n              ),\n            ],\n          ),\n        ),\n        actions: [\n          IconButton(\n            icon: Icon(Icons.notifications_none, color: primaryColor, size: 24),\n            onPressed: () {\n              // TODO: Implement notification action\n              print('Notifications tapped');\n            },\n          ),\n          const SizedBox(width: 16.0),\n        ],\n      ),\n      body: SingleChildScrollView(\n        padding: const EdgeInsets.symmetric(horizontal: 24.0),\n        child: Column(\n          crossAxisAlignment: CrossAxisAlignment.start,\n          children: [\n            const SizedBox(height: 24.0),\n            // Search Bar\n            TextField(\n              decoration: InputDecoration(\n                hintText: 'Search for your next adventure',\n                hintStyle:\n                    textTheme.bodyLarge?.copyWith(color: Colors.grey[500]),\n                filled: true,\n                fillColor: colorScheme.surface, // White background\n                prefixIcon: Icon(Icons.search, color: Colors.grey[600]),\n                suffixIcon: Container(\n                  margin: const EdgeInsets.only(right: 8.0),\n                  padding: const EdgeInsets.all(8.0),\n                  decoration: BoxDecoration(\n                    color: primaryColor.withOpacity(0.1),\n                    borderRadius: BorderRadius.circular(10.0),\n                  ),\n                  child: Icon(Icons.psychology_outlined, color: primaryColor),\n                ),\n                border: OutlineInputBorder(\n                  borderRadius: BorderRadius.circular(15.0),\n                  borderSide: BorderSide.none,\n                ),\n                contentPadding: const EdgeInsets.symmetric(vertical: 16.0),\n              ),\n              style: textTheme.bodyLarge?.copyWith(color: Colors.grey[850]),\n            ),\n            const SizedBox(height: 24.0),\n            // Categories\n            Text(\n              'Explore Categories',\n              style: textTheme.titleMedium?.copyWith(\n                fontWeight: FontWeight.bold,\n                color: Colors.grey[800],\n              ),\n            ),\n            const SizedBox(height: 16.0),\n            SingleChildScrollView(\n              scrollDirection: Axis.horizontal,\n              child: Row(\n                children: [\n                  _CategoryChip(\n                    text: 'Hotel',\n                    isSelected: _selectedCategory == 'Hotel',\n                    onTap: () {\n                      setState(() {\n                        _selectedCategory = 'Hotel';\n                      });\n                    },\n                    primaryColor: primaryColor,\n                    textTheme: textTheme,\n                  ),\n                  const SizedBox(width: 12.0),\n                  _CategoryChip(\n                    text: 'Convention Center',\n                    isSelected: _selectedCategory == 'Convention Center',\n                    onTap: () {\n                      setState(() {\n                        _selectedCategory = 'Convention Center';\n                      });\n                    },\n                    primaryColor: primaryColor,\n                    textTheme: textTheme,\n                  ),\n                  const SizedBox(width: 12.0),\n                  _CategoryChip(\n                    text: 'Flights',\n                    isSelected: _selectedCategory == 'Flights',\n                    onTap: () {\n                      setState(() {\n                        _selectedCategory = 'Flights';\n                      });\n                    },\n                    primaryColor: primaryColor,\n                    textTheme: textTheme,\n                  ),\n                  const SizedBox(width: 12.0),\n                  _CategoryChip(\n                    text: 'Travel',\n                    isSelected: _selectedCategory == 'Travel',\n                    onTap: () {\n                      setState(() {\n                        _selectedCategory = 'Travel';\n                      });\n                    },\n                    primaryColor: primaryColor,\n                    textTheme: textTheme,\n                  ),\n                ],\n              ),\n            ),\n            const SizedBox(height: 24.0),\n            // Featured Destination\n            Text(\n              'Featured Destination',\n              style: textTheme.titleMedium?.copyWith(\n                fontWeight: FontWeight.bold,\n                color: Colors.grey[800],\n              ),\n            ),\n            const SizedBox(height: 16.0),\n            _HotelCard(\n              hotelName: 'The Westin Dhaka',\n              address: 'Gulshan 2, Dhaka',\n              pricePerDay: '\\$180',\n              rating: '4.8 (1.5k reviews)',\n              imageUrl: 'https://picsum.photos/400/250?random=featured',\n              textTheme: textTheme,\n              colorScheme: colorScheme,\n              onTap: () {\n                // TODO: Navigate to The Westin Dhaka details\n                print('Tapped The Westin Dhaka');\n              },\n            ),\n            const SizedBox(height: 24.0),\n            // Recently Booked\n            Text(\n              'Recently Booked',\n              style: textTheme.titleMedium?.copyWith(\n                fontWeight: FontWeight.bold,\n                color: Colors.grey[800],\n              ),\n            ),\n            const SizedBox(height: 16.0),\n            ListView.builder(\n              shrinkWrap: true,\n              physics: const NeverScrollableScrollPhysics(), // Disable internal scrolling\n              itemCount: 3, // Example: 3 recently booked items\n              itemBuilder: (context, index) {\n                return Padding(\n                  padding: const EdgeInsets.only(bottom: 16.0),\n                  child: _HotelCard(\n                    hotelName: 'Hotel Supreme - Booking ${index + 1}',\n                    address: '4140 Parker Rd. Allentown, Sylhet 3100',\n                    pricePerDay: '\\$126',\n                    rating: '4.9 (234 reviews)',\n                    imageUrl: 'https://picsum.photos/400/250?random=${index + 10}', // Different image for each\n                    textTheme: textTheme,\n                    colorScheme: colorScheme,\n                    onTap: () {\n                      // TODO: Navigate to Hotel Supreme details\n                      print('Tapped Recently Booked Hotel Supreme ${index + 1}');\n                    },\n                  ),\n                );\n              },\n            ),\n            const SizedBox(height: 80.0), // Padding for bottom navigation\n          ],\n        ),\n      ),\n      floatingActionButton: FloatingActionButton(\n        onPressed: () {\n          // TODO: Implement AI assistance action\n          print('AI Assistance button tapped!');\n        },\n        child: Icon(Icons.psychology_outlined), // AI icon\n        shape: RoundedRectangleBorder(\n          borderRadius: BorderRadius.circular(50.0), // Makes it a circular button\n        ),\n      ),\n      floatingActionButtonLocation: FloatingActionButtonLocation.endFloat, // Positions it in the bottom-right\n      bottomNavigationBar: _BottomNavigationBar(\n        primaryColor: primaryColor,\n        colorScheme: colorScheme,\n        textTheme: textTheme,\n      ),\n    );\n  }\n}\n\nclass _CategoryChip extends StatelessWidget {\n  final String text;\n  final bool isSelected;\n  final VoidCallback onTap;\n  final Color primaryColor;\n  final TextTheme textTheme;\n\n  const _CategoryChip({\n    required this.text,\n    required this.isSelected,\n    required this.onTap,\n    required this.primaryColor,\n    required this.textTheme,\n  });\n\n  @override\n  Widget build(BuildContext context) {\n    return GestureDetector(\n      onTap: onTap,\n      child: Container(\n        padding: const EdgeInsets.symmetric(horizontal: 20.0, vertical: 12.0),\n        decoration: BoxDecoration(\n          color: isSelected ? primaryColor : Colors.transparent,\n          borderRadius: BorderRadius.circular(10.0),\n          border: Border.all(color: Colors.grey[300]!, width: 1.0),\n        ),\n        child: Text(\n          text,\n          style: textTheme.bodyMedium?.copyWith(\n            color: isSelected ? Colors.white : Colors.grey[700],\n            fontWeight: isSelected ? FontWeight.bold : FontWeight.normal,\n          ),\n        ),\n      ),\n    );\n  }\n}\n\n// Re-using _HotelCard from explore_hotels_screen.dart\nclass _HotelCard extends StatefulWidget {\n  final String hotelName;\n  final String address;\n  final String pricePerDay;\n  final String rating;\n  final String imageUrl;\n  final TextTheme textTheme;\n  final ColorScheme colorScheme;\n  final VoidCallback onTap;\n\n  const _HotelCard({\n    required this.hotelName,\n    required this.address,\n    required this.pricePerDay,\n    required this.rating,\n    required this.imageUrl,\n    required this.textTheme,\n    required this.colorScheme,\n    required this.onTap,\n    super.key,\n  });\n\n  @override\n  State<_HotelCard> createState() => _HotelCardState();\n}\n\nclass _HotelCardState extends State<_HotelCard> {\n  bool _isFavorite = false;\n\n  @override\n  Widget build(BuildContext context) {\n    return Material(\n      color: widget.colorScheme.surface,\n      borderRadius: BorderRadius.circular(15.0),\n      child: InkWell(\n        borderRadius: BorderRadius.circular(15.0),\n        onTap: widget.onTap,\n        hoverColor: widget.colorScheme.primary.withOpacity(0.05),\n        splashColor: widget.colorScheme.primary.withOpacity(0.2),\n        child: Container(\n          padding: const EdgeInsets.all(16.0),\n          decoration: BoxDecoration(\n            borderRadius: BorderRadius.circular(15.0),\n          ),\n          child: Column(\n            crossAxisAlignment: CrossAxisAlignment.start,\n            children: [\n              Stack(\n                children: [\n                  ClipRRect(\n                    borderRadius: BorderRadius.circular(10.0),\n                    child: Image.network(\n                      widget.imageUrl,\n                      height: 220,\n                      width: double.infinity,\n                      fit: BoxFit.cover,\n                      errorBuilder: (context, error, stackTrace) => Container(\n                        height: 220,\n                        width: double.infinity,\n                        color: Colors.grey[300],\n                        child: Icon(\n                          Icons.broken_image,\n                          color: Colors.grey[600],\n                        ),\n                      ),\n                    ),\n                  ),\n                  Positioned(\n                    top: 8.0,\n                    right: 8.0,\n                    child: Container(\n                      decoration: BoxDecoration(\n                        color: Colors.white.withOpacity(0.8),\n                        shape: BoxShape.circle,\n                      ),\n                      child: IconButton(\n                        icon: Icon(\n                          _isFavorite ? Icons.favorite : Icons.favorite_border,\n                          color: _isFavorite ? Colors.red : Colors.grey[700],\n                        ),\n                        onPressed: () {\n                          setState(() {\n                            _isFavorite = !_isFavorite;\n                          });\n                          print(\n                            'Favorite toggled for ${widget.hotelName}: $_isFavorite',\n                          );\n                        },\n                      ),\n                    ),\n                  ),\n                ],\n              ),\n              const SizedBox(height: 16.0),\n              Row(\n                mainAxisAlignment: MainAxisAlignment.spaceBetween,\n                children: [\n                  Expanded(\n                    child: Column(\n                      crossAxisAlignment: CrossAxisAlignment.start,\n                      children: [\n                        Text(\n                          widget.hotelName,\n                          style: widget.textTheme.titleMedium?.copyWith(\n                            fontWeight: FontWeight.bold,\n                            color: Colors.grey[800],\n                          ),\n                          maxLines: 1,\n                          overflow: TextOverflow.ellipsis,\n                        ),\n                        const SizedBox(height: 4.0),\n                        Text(\n                          widget.address,\n                          style: widget.textTheme.bodySmall?.copyWith(\n                            color: Colors.grey[600],\n                          ),\n                          maxLines: 1,\n                          overflow: TextOverflow.ellipsis,\n                        ),\n                      ],\n                    ),\n                  ),\n                  Text(\n                    '${widget.pricePerDay}/Day',\n                    style: widget.textTheme.titleSmall?.copyWith(\n                      fontWeight: FontWeight.bold,\n                      color: Colors.grey[800],\n                    ),\n                  ),\n                ],\n              ),\n              const SizedBox(height: 8.0),\n              Row(\n                children: [\n                  Icon(Icons.star, color: Colors.amber, size: 16),\n                  const SizedBox(width: 4.0),\n                  Text(\n                    widget.rating,\n                    style: widget.textTheme.bodySmall?.copyWith(\n                      color: Colors.grey[700],\n                    ),\n                  ),\n                ],\n              ),\n            ],\n          ),\n        ),\n      ),\n    );\n  }\n}\n\nclass _BottomNavigationBar extends StatefulWidget {\n  final Color primaryColor;\n  final ColorScheme colorScheme;\n  final TextTheme textTheme;\n\n  const _BottomNavigationBar({\n    required this.primaryColor,\n    required this.colorScheme,\n    required this.textTheme,\n  });\n\n  @override\n  State<_BottomNavigationBar> createState() => _BottomNavigationBarState();\n}\n\nclass _BottomNavigationBarState extends State<_BottomNavigationBar> {\n  int _selectedIndex = 0; // Default to Home tab\n\n  void _onItemTapped(int index) {\n    setState(() {\n      _selectedIndex = index;\n    });\n    // TODO: Implement navigation for each tab\n    print('Tapped tab: $index');\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    return Container(\n      decoration: BoxDecoration(\n        color: widget.colorScheme.surface,\n        boxShadow: [\n          BoxShadow(\n            color: Colors.grey.withOpacity(0.1),\n            spreadRadius: 1,\n            blurRadius: 5,\n            offset: const Offset(0, -3), // Shadow above the bar\n          ),\n        ],\n      ),\n      child: BottomNavigationBar(\n        elevation: 0, // No shadow on the bar itself, using container shadow\n        backgroundColor: Colors.transparent, // Transparent to show container color\n        selectedItemColor: widget.primaryColor,\n        unselectedItemColor: Colors.grey[500],\n        showSelectedLabels: true,\n        showUnselectedLabels: true,\n        selectedLabelStyle: widget.textTheme.bodySmall?.copyWith(\n          fontWeight: FontWeight.bold,\n          color: widget.primaryColor,\n        ),\n        unselectedLabelStyle: widget.textTheme.bodySmall?.copyWith(\n          color: Colors.grey[500],\n        ),\n        type: BottomNavigationBarType.fixed, // Ensures all items are visible\n        currentIndex: _selectedIndex,\n        onTap: _onItemTapped,\n        items: const <BottomNavigationBarItem>[\n          BottomNavigationBarItem(\n            icon: Icon(Icons.home_outlined),\n            label: 'Home',\n          ),\n          BottomNavigationBarItem(\n            icon: Icon(Icons.book_online_outlined),\n            label: 'Bookings',\n          ),\n          BottomNavigationBarItem(\n            icon: Icon(Icons.favorite_border),\n            label: 'Favorites',\n          ),\n          BottomNavigationBarItem(\n            icon: Icon(Icons.person_outline),\n            label: 'Profile',\n          ),\n        ],\n      ),\n    );\n  }\n}\n<<<PIXEL_CODE_END>>>"}]},{"id":"codebase","role":"user","parts":[{"id":"codebase","text":"Current codebase: <State of the codebase at that point in time>"}]},{"id":null,"role":"user","parts":[{"id":null,"text":"User Instruction: in seacrch bar replace thr AI icon with the loaction icon\n"},{"id":null,"text":"Here is a screenshot of the current UI state:"},{"id":null,"image":{"mime_type":"image/png","file_uri":"https://generativelanguage.googleapis.com/v1beta/files/n0al6yd55a29"}},{"id":null,"text":"1. First, discuss what they want to achieve. \n2. Since the screens should strictly have theme and style of the UI template, figure out what new screens/widgets we need from the UI template to achieve the changes.\n3. Output the updated code in the same format as earlier:\n\n1. To make code edits in the users codebase:\n<<<PIXEL_FILE_PATH>>>\nlib/Screens/image_generator_screen.dart **// IMPORTANT: This is an EXAMPLE path. You MUST replace this with the correct, relevant file path derived from the user's request (e.g., `lib/screens/login_screen.dart` if the user asks for a login screen).**\n<<<PIXEL_CODE_START>>>\nentire file code\n<<<PIXEL_CODE_END>>>\nMake sure the file path is relative and the entire code to be replaced in file is included.\n\n2. To install pub dependencies:\n<<<PIXEL_PUB_INSTALL_START>>>\ndependency_name\n<<<PIXEL_PUB_INSTALL_END>>>\n\nOnly include a single dependency at a time, for instance:\n<<<PIXEL_PUB_INSTALL_START>>>\ngoogle_fonts\n<<<PIXEL_PUB_INSTALL_END>>>\n\n3. To relay important information, questions or clarifications to user:\n<<<PIXEL_USER_INFORM_START>>>\nyour message to be shown to user\n<<<PIXEL_USER_INFORM_END>>>\n\n4. To request viewing a single UI template file\n<<<PIXEL_VIEW_TEMPLATE_FILE_START>>>\npath of file\n<<<PIXEL_VIEW_TEMPLATE_FILE_END>>>\nTo view multiple files, add multiple such statements. Stop after you've requested all the files, the client will provide you the files in the next message.\n\n\nAll of these formats are parsed using Regex and programatically executed at the users end, so you should strictly stick to the above formats."}]},{"id":null,"role":"model","parts":[{"id":null,"text":"The user wants to replace the AI icon (`Icons.psychology_outlined`) with a location icon (`Icons.location_on`) in the search bar on the home screen.\n\n**Design Requirements:**\n1.  **Icon Change:** Replace the existing AI icon with a location icon.\n2.  **Maintain Styling:** The new icon should maintain the current styling of the suffix icon in the search bar, including its container, padding, background color, and foreground color, which are all derived from the `primaryColor` theme.\n\n**UIKit Elements to Use and Adapt:**\n*   The existing `TextField` with its `suffixIcon` property in `home_screen.dart` will be modified.\n*   `Icons.location_on`: This icon is readily available in Material Icons and aligns with the purpose of a search bar that might involve location.\n\nI will modify `lib/screens/home_screen.dart` to make this change.\n\n<<<PIXEL_FILE_PATH>>>\nlib/screens/home_screen.dart\n<<<PIXEL_CODE_START>>>\nimport 'package:flutter/material.dart';\nimport 'package:ai_travel_app_ui_kit/components/buttons/primary_text_button.dart'; // Import if needed for any button\nimport 'package:font_awesome_flutter/font_awesome_flutter.dart'; // For icons if needed\n\nclass HomeScreen extends StatefulWidget {\n  const HomeScreen({super.key});\n\n  @override\n  State<HomeScreen> createState() => _HomeScreenState();\n}\n\nclass _HomeScreenState extends State<HomeScreen> {\n  String _selectedCategory = 'Hotel'; // Default selected category\n\n  @override\n  Widget build(BuildContext context) {\n    final TextTheme textTheme = Theme.of(context).textTheme;\n    final Color primaryColor = Theme.of(context).primaryColor;\n    final ColorScheme colorScheme = Theme.of(context).colorScheme;\n\n    return Scaffold(\n      backgroundColor: Colors.grey[100], // Consistent light grey background\n      appBar: AppBar(\n        backgroundColor: Colors.grey[100], // Match scaffold background\n        elevation: 0,\n        scrolledUnderElevation: 0, // Ensure no shadow on scroll\n        titleSpacing: 0, // Remove default title spacing for custom layout\n        title: Padding(\n          padding: const EdgeInsets.only(left: 24.0),\n          child: Row(\n            children: [\n              CircleAvatar(\n                radius: 20,\n                backgroundColor: Colors.grey[300],\n                backgroundImage: NetworkImage(\n                  'https://picsum.photos/100/100?random=profile_home', // Placeholder profile image\n                ),\n              ),\n              const SizedBox(width: 12.0),\n              Column(\n                crossAxisAlignment: CrossAxisAlignment.start,\n                children: [\n                  Text(\n                    'Hello, Jane!',\n                    style: textTheme.bodyLarge?.copyWith(\n                      fontWeight: FontWeight.bold,\n                      color: Colors.grey[800],\n                    ),\n                  ),\n                  Text(\n                    'Hope you are having a good time',\n                    style: textTheme.bodySmall?.copyWith(\n                      color: Colors.grey[600],\n                    ),\n                  ),\n                ],\n              ),\n            ],\n          ),\n        ),\n        actions: [\n          IconButton(\n            icon: Icon(Icons.notifications_none, color: primaryColor, size: 24),\n            onPressed: () {\n              // TODO: Implement notification action\n              print('Notifications tapped');\n            },\n          ),\n          const SizedBox(width: 16.0),\n        ],\n      ),\n      body: SingleChildScrollView(\n        padding: const EdgeInsets.symmetric(horizontal: 24.0),\n        child: Column(\n          crossAxisAlignment: CrossAxisAlignment.start,\n          children: [\n            const SizedBox(height: 24.0),\n            // Search Bar\n            TextField(\n              decoration: InputDecoration(\n                hintText: 'Search for your next adventure',\n                hintStyle:\n                    textTheme.bodyLarge?.copyWith(color: Colors.grey[500]),\n                filled: true,\n                fillColor: colorScheme.surface, // White background\n                prefixIcon: Icon(Icons.search, color: Colors.grey[600]),\n                suffixIcon: Container(\n                  margin: const EdgeInsets.only(right: 8.0),\n                  padding: const EdgeInsets.all(8.0),\n                  decoration: BoxDecoration(\n                    color: primaryColor.withOpacity(0.1),\n                    borderRadius: BorderRadius.circular(10.0),\n                  ),\n                  child: Icon(Icons.location_on, color: primaryColor), // Changed icon to location_on\n                ),\n                border: OutlineInputBorder(\n                  borderRadius: BorderRadius.circular(15.0),\n                  borderSide: BorderSide.none,\n                ),\n                contentPadding: const EdgeInsets.symmetric(vertical: 16.0),\n              ),\n              style: textTheme.bodyLarge?.copyWith(color: Colors.grey[850]),\n            ),\n            const SizedBox(height: 24.0),\n            // Categories\n            Text(\n              'Explore Categories',\n              style: textTheme.titleMedium?.copyWith(\n                fontWeight: FontWeight.bold,\n                color: Colors.grey[800],\n              ),\n            ),\n            const SizedBox(height: 16.0),\n            SingleChildScrollView(\n              scrollDirection: Axis.horizontal,\n              child: Row(\n                children: [\n                  _CategoryChip(\n                    text: 'Hotel',\n                    isSelected: _selectedCategory == 'Hotel',\n                    onTap: () {\n                      setState(() {\n                        _selectedCategory = 'Hotel';\n                      });\n                    },\n                    primaryColor: primaryColor,\n                    textTheme: textTheme,\n                  ),\n                  const SizedBox(width: 12.0),\n                  _CategoryChip(\n                    text: 'Convention Center',\n                    isSelected: _selectedCategory == 'Convention Center',\n                    onTap: () {\n                      setState(() {\n                        _selectedCategory = 'Convention Center';\n                      });\n                    },\n                    primaryColor: primaryColor,\n                    textTheme: textTheme,\n                  ),\n                  const SizedBox(width: 12.0),\n                  _CategoryChip(\n                    text: 'Flights',\n                    isSelected: _selectedCategory == 'Flights',\n                    onTap: () {\n                      setState(() {\n                        _selectedCategory = 'Flights';\n                      });\n                    },\n                    primaryColor: primaryColor,\n                    textTheme: textTheme,\n                  ),\n                  const SizedBox(width: 12.0),\n                  _CategoryChip(\n                    text: 'Travel',\n                    isSelected: _selectedCategory == 'Travel',\n                    onTap: () {\n                      setState(() {\n                        _selectedCategory = 'Travel';\n                      });\n                    },\n                    primaryColor: primaryColor,\n                    textTheme: textTheme,\n                  ),\n                ],\n              ),\n            ),\n            const SizedBox(height: 24.0),\n            // Featured Destination\n            Text(\n              'Featured Destination',\n              style: textTheme.titleMedium?.copyWith(\n                fontWeight: FontWeight.bold,\n                color: Colors.grey[800],\n              ),\n            ),\n            const SizedBox(height: 16.0),\n            _HotelCard(\n              hotelName: 'The Westin Dhaka',\n              address: 'Gulshan 2, Dhaka',\n              pricePerDay: '\\$180',\n              rating: '4.8 (1.5k reviews)',\n              imageUrl: 'https://picsum.photos/400/250?random=featured',\n              textTheme: textTheme,\n              colorScheme: colorScheme,\n              onTap: () {\n                // TODO: Navigate to The Westin Dhaka details\n                print('Tapped The Westin Dhaka');\n              },\n            ),\n            const SizedBox(height: 24.0),\n            // Recently Booked\n            Text(\n              'Recently Booked',\n              style: textTheme.titleMedium?.copyWith(\n                fontWeight: FontWeight.bold,\n                color: Colors.grey[800],\n              ),\n            ),\n            const SizedBox(height: 16.0),\n            ListView.builder(\n              shrinkWrap: true,\n              physics: const NeverScrollableScrollPhysics(), // Disable internal scrolling\n              itemCount: 3, // Example: 3 recently booked items\n              itemBuilder: (context, index) {\n                return Padding(\n                  padding: const EdgeInsets.only(bottom: 16.0),\n                  child: _HotelCard(\n                    hotelName: 'Hotel Supreme - Booking ${index + 1}',\n                    address: '4140 Parker Rd. Allentown, Sylhet 3100',\n                    pricePerDay: '\\$126',\n                    rating: '4.9 (234 reviews)',\n                    imageUrl: 'https://picsum.photos/400/250?random=${index + 10}', // Different image for each\n                    textTheme: textTheme,\n                    colorScheme: colorScheme,\n                    onTap: () {\n                      // TODO: Navigate to Hotel Supreme details\n                      print('Tapped Recently Booked Hotel Supreme ${index + 1}');\n                    },\n                  ),\n                );\n              },\n            ),\n            const SizedBox(height: 80.0), // Padding for bottom navigation\n          ],\n        ),\n      ),\n      floatingActionButton: FloatingActionButton(\n        onPressed: () {\n          // TODO: Implement AI assistance action\n          print('AI Assistance button tapped!');\n        },\n        child: Icon(Icons.psychology_outlined), // AI icon\n        shape: RoundedRectangleBorder(\n          borderRadius: BorderRadius.circular(50.0), // Makes it a circular button\n        ),\n      ),\n      floatingActionButtonLocation: FloatingActionButtonLocation.endFloat, // Positions it in the bottom-right\n      bottomNavigationBar: _BottomNavigationBar(\n        primaryColor: primaryColor,\n        colorScheme: colorScheme,\n        textTheme: textTheme,\n      ),\n    );\n  }\n}\n\nclass _CategoryChip extends StatelessWidget {\n  final String text;\n  final bool isSelected;\n  final VoidCallback onTap;\n  final Color primaryColor;\n  final TextTheme textTheme;\n\n  const _CategoryChip({\n    required this.text,\n    required this.isSelected,\n    required this.onTap,\n    required this.primaryColor,\n    required this.textTheme,\n  });\n\n  @override\n  Widget build(BuildContext context) {\n    return GestureDetector(\n      onTap: onTap,\n      child: Container(\n        padding: const EdgeInsets.symmetric(horizontal: 20.0, vertical: 12.0),\n        decoration: BoxDecoration(\n          color: isSelected ? primaryColor : Colors.transparent,\n          borderRadius: BorderRadius.circular(10.0),\n          border: Border.all(color: Colors.grey[300]!, width: 1.0),\n        ),\n        child: Text(\n          text,\n          style: textTheme.bodyMedium?.copyWith(\n            color: isSelected ? Colors.white : Colors.grey[700],\n            fontWeight: isSelected ? FontWeight.bold : FontWeight.normal,\n          ),\n        ),\n      ),\n    );\n  }\n}\n\n// Re-using _HotelCard from explore_hotels_screen.dart\nclass _HotelCard extends StatefulWidget {\n  final String hotelName;\n  final String address;\n  final String pricePerDay;\n  final String rating;\n  final String imageUrl;\n  final TextTheme textTheme;\n  final ColorScheme colorScheme;\n  final VoidCallback onTap;\n\n  const _HotelCard({\n    required this.hotelName,\n    required this.address,\n    required this.pricePerDay,\n    required this.rating,\n    required this.imageUrl,\n    required this.textTheme,\n    required this.colorScheme,\n    required this.onTap,\n    super.key,\n  });\n\n  @override\n  State<_HotelCard> createState() => _HotelCardState();\n}\n\nclass _HotelCardState extends State<_HotelCard> {\n  bool _isFavorite = false;\n\n  @override\n  Widget build(BuildContext context) {\n    return Material(\n      color: widget.colorScheme.surface,\n      borderRadius: BorderRadius.circular(15.0),\n      child: InkWell(\n        borderRadius: BorderRadius.circular(15.0),\n        onTap: widget.onTap,\n        hoverColor: widget.colorScheme.primary.withOpacity(0.05),\n        splashColor: widget.colorScheme.primary.withOpacity(0.2),\n        child: Container(\n          padding: const EdgeInsets.all(16.0),\n          decoration: BoxDecoration(\n            borderRadius: BorderRadius.circular(15.0),\n          ),\n          child: Column(\n            crossAxisAlignment: CrossAxisAlignment.start,\n            children: [\n              Stack(\n                children: [\n                  ClipRRect(\n                    borderRadius: BorderRadius.circular(10.0),\n                    child: Image.network(\n                      widget.imageUrl,\n                      height: 220,\n                      width: double.infinity,\n                      fit: BoxFit.cover,\n                      errorBuilder: (context, error, stackTrace) => Container(\n                        height: 220,\n                        width: double.infinity,\n                        color: Colors.grey[300],\n                        child: Icon(\n                          Icons.broken_image,\n                          color: Colors.grey[600],\n                        ),\n                      ),\n                    ),\n                  ),\n                  Positioned(\n                    top: 8.0,\n                    right: 8.0,\n                    child: Container(\n                      decoration: BoxDecoration(\n                        color: Colors.white.withOpacity(0.8),\n                        shape: BoxShape.circle,\n                      ),\n                      child: IconButton(\n                        icon: Icon(\n                          _isFavorite ? Icons.favorite : Icons.favorite_border,\n                          color: _isFavorite ? Colors.red : Colors.grey[700],\n                        ),\n                        onPressed: () {\n                          setState(() {\n                            _isFavorite = !_isFavorite;\n                          });\n                          print(\n                            'Favorite toggled for ${widget.hotelName}: $_isFavorite',\n                          );\n                        },\n                      ),\n                    ),\n                  ),\n                ],\n              ),\n              const SizedBox(height: 16.0),\n              Row(\n                mainAxisAlignment: MainAxisAlignment.spaceBetween,\n                children: [\n                  Expanded(\n                    child: Column(\n                      crossAxisAlignment: CrossAxisAlignment.start,\n                      children: [\n                        Text(\n                          widget.hotelName,\n                          style: widget.textTheme.titleMedium?.copyWith(\n                            fontWeight: FontWeight.bold,\n                            color: Colors.grey[800],\n                          ),\n                          maxLines: 1,\n                          overflow: TextOverflow.ellipsis,\n                        ),\n                        const SizedBox(height: 4.0),\n                        Text(\n                          widget.address,\n                          style: widget.textTheme.bodySmall?.copyWith(\n                            color: Colors.grey[600],\n                          ),\n                          maxLines: 1,\n                          overflow: TextOverflow.ellipsis,\n                        ),\n                      ],\n                    ),\n                  ),\n                  Text(\n                    '${widget.pricePerDay}/Day',\n                    style: widget.textTheme.titleSmall?.copyWith(\n                      fontWeight: FontWeight.bold,\n                      color: Colors.grey[800],\n                    ),\n                  ),\n                ],\n              ),\n              const SizedBox(height: 8.0),\n              Row(\n                children: [\n                  Icon(Icons.star, color: Colors.amber, size: 16),\n                  const SizedBox(width: 4.0),\n                  Text(\n                    widget.rating,\n                    style: widget.textTheme.bodySmall?.copyWith(\n                      color: Colors.grey[700],\n                    ),\n                  ),\n                ],\n              ),\n            ],\n          ),\n        ),\n      ),\n    );\n  }\n}\n\nclass _BottomNavigationBar extends StatefulWidget {\n  final Color primaryColor;\n  final ColorScheme colorScheme;\n  final TextTheme textTheme;\n\n  const _BottomNavigationBar({\n    required this.primaryColor,\n    required this.colorScheme,\n    required this.textTheme,\n  });\n\n  @override\n  State<_BottomNavigationBar> createState() => _BottomNavigationBarState();\n}\n\nclass _BottomNavigationBarState extends State<_BottomNavigationBar> {\n  int _selectedIndex = 0; // Default to Home tab\n\n  void _onItemTapped(int index) {\n    setState(() {\n      _selectedIndex = index;\n    });\n    // TODO: Implement navigation for each tab\n    print('Tapped tab: $index');\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    return Container(\n      decoration: BoxDecoration(\n        color: widget.colorScheme.surface,\n        boxShadow: [\n          BoxShadow(\n            color: Colors.grey.withOpacity(0.1),\n            spreadRadius: 1,\n            blurRadius: 5,\n            offset: const Offset(0, -3), // Shadow above the bar\n          ),\n        ],\n      ),\n      child: BottomNavigationBar(\n        elevation: 0, // No shadow on the bar itself, using container shadow\n        backgroundColor: Colors.transparent, // Transparent to show container color\n        selectedItemColor: widget.primaryColor,\n        unselectedItemColor: Colors.grey[500],\n        showSelectedLabels: true,\n        showUnselectedLabels: true,\n        selectedLabelStyle: widget.textTheme.bodySmall?.copyWith(\n          fontWeight: FontWeight.bold,\n          color: widget.primaryColor,\n        ),\n        unselectedLabelStyle: widget.textTheme.bodySmall?.copyWith(\n          color: Colors.grey[500],\n        ),\n        type: BottomNavigationBarType.fixed, // Ensures all items are visible\n        currentIndex: _selectedIndex,\n        onTap: _onItemTapped,\n        items: const <BottomNavigationBarItem>[\n          BottomNavigationBarItem(\n            icon: Icon(Icons.home_outlined),\n            label: 'Home',\n          ),\n          BottomNavigationBarItem(\n            icon: Icon(Icons.book_online_outlined),\n            label: 'Bookings',\n          ),\n          BottomNavigationBarItem(\n            icon: Icon(Icons.favorite_border),\n            label: 'Favorites',\n          ),\n          BottomNavigationBarItem(\n            icon: Icon(Icons.person_outline),\n            label: 'Profile',\n          ),\n        ],\n      ),\n    );\n  }\n}\n<<<PIXEL_CODE_END>>>"}]},{"id":"codebase","role":"user","parts":[{"id":"codebase","text":"Current codebase: --- Project Context (20 files read) ---\n\n// File: pubspec.yaml\n```yaml\nname: ai_travel_app_ui_kit\r\ndescription: \"A new Flutter project.\"\r\n# The following line prevents the package from being accidentally published to\r\n# pub.dev using `flutter pub publish`. This is preferred for private packages.\r\npublish_to: 'none' # Remove this line if you wish to publish to pub.dev\r\n\r\n# The following defines the version and build number for your application.\r\n# A version number is three numbers separated by dots, like 1.2.43\r\n# followed by an optional build number separated by a +.\r\n# Both the version and the builder number may be overridden in flutter\r\n# build by specifying --build-name and --build-number, respectively.\r\n# In Android, build-name is used as versionName while build-number used as versionCode.\r\n# Read more about Android versioning at https://developer.android.com/studio/publish/versioning\r\n# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.\r\n# Read more about iOS versioning at\r\n# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html\r\n# In Windows, build-name is used as the major, minor, and patch parts\r\n# of the product and file versions while build-number is used as the build suffix.\r\nversion: 1.0.0+1\r\n\r\nenvironment:\r\n  sdk: ^3.7.2\r\n\r\n# Dependencies specify other packages that your package needs in order to work.\r\n# To automatically upgrade your package dependencies to the latest versions\r\n# consider running `flutter pub upgrade --major-versions`. Alternatively,\r\n# dependencies can be manually updated by changing the version numbers below to\r\n# the latest version available on pub.dev. To see which dependencies have newer\r\n# versions available, run `flutter pub outdated`.\r\ndependencies:\r\n  flutter:\r\n    sdk: flutter\r\n\r\n  # The following adds the Cupertino Icons font to your application.\r\n  # Use with the CupertinoIcons class for iOS style icons.\r\n  cupertino_icons: ^1.0.8\r\n  pixel_preview: ^0.0.4\r\n  font_awesome_flutter: ^10.8.0\r\n  google_fonts: ^6.2.1\r\n  flutter_svg: ^2.1.0\r\n\r\ndev_dependencies:\r\n  flutter_test:\r\n    sdk: flutter\r\n\r\n  # The \"flutter_lints\" package below contains a set of recommended lints to\r\n  # encourage good coding practices. The lint set provided by the package is\r\n  # activated in the `analysis_options.yaml` file located at the root of your\r\n  # package. See that file for information about deactivating specific lint\r\n  # rules and activating additional ones.\r\n  flutter_lints: ^5.0.0\r\n\r\n# For information on the generic Dart part of this file, see the\r\n# following page: https://dart.dev/tools/pub/pubspec\r\n\r\n# The following section is specific to Flutter packages.\r\nflutter:\r\n\r\n  # The following line ensures that the Material Icons font is\r\n  # included with your application, so that you can use the icons in\r\n  # the material Icons class.\r\n  uses-material-design: true\r\n\r\n  # To add assets to your application, add an assets section, like this:\r\n  # assets:\r\n  #   - images/a_dot_burr.jpeg\r\n  #   - images/a_dot_ham.jpeg\r\n\r\n  # An image asset can refer to one or more resolution-specific \"variants\", see\r\n  # https://flutter.dev/to/resolution-aware-images\r\n\r\n  # For details regarding adding assets from package dependencies, see\r\n  # https://flutter.dev/to/asset-from-package\r\n\r\n  # To add custom fonts to your application, add a fonts section here,\r\n  # in this \"flutter\" section. Each entry in this list should have a\r\n  # \"family\" key with the font family name, and a \"fonts\" key with a\r\n  # list giving the asset and other descriptors for the font. For\r\n  # example:\r\n  # fonts:\r\n  #   - family: Schyler\r\n  #     fonts:\r\n  #       - asset: fonts/Schyler-Regular.ttf\r\n  #       - asset: fonts/Schyler-Italic.ttf\r\n  #         style: italic\r\n  #   - family: Trajan Pro\r\n  #     fonts:\r\n  #       - asset: fonts/TrajanPro.ttf\r\n  #       - asset: fonts/TrajanPro_Bold.ttf\r\n  #         weight: 700\r\n  #\r\n  # For details regarding fonts from package dependencies,\r\n  # see https://flutter.dev/to/font-from-package\n```\n\n// File: lib\\components\\buttons\\primary_text_button.dart\n```dart\n/*\r\nA versatile primary button widget that spans the full width of its container with customizable text and state handling.\r\nCommon use cases:\r\n1. Form submission buttons\r\n2. Primary action buttons in workflows\r\n3. Confirmation dialogs\r\n4. Call-to-action buttons in key user flows\r\n*/\r\n\r\nimport 'package:flutter/material.dart';\r\n\r\nclass PrimaryTextButton extends StatelessWidget {\r\n  final Function()? onPressed;\r\n  final String text;\r\n  const PrimaryTextButton({\r\n    super.key,\r\n    this.text = \"Submit\",\r\n    this.onPressed = _defaultOnPressed,\r\n  });\r\n  static void _defaultOnPressed() {}\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return SizedBox(\r\n      width: double.infinity,\r\n      child: FilledButton(\r\n        onPressed: onPressed,\r\n        style: FilledButton.styleFrom(\r\n          /// The button should be rounded. Don't change the borderRadius.\r\n          shape: RoundedRectangleBorder(\r\n            borderRadius: BorderRadius.circular(60),\r\n          ),\r\n          padding: const EdgeInsets.symmetric(vertical: 24, horizontal: 16),\r\n        ),\r\n        child: Text(\r\n          text,\r\n          style: const TextStyle(fontSize: 16, fontWeight: FontWeight.bold),\r\n        ),\r\n      ),\r\n    );\r\n  }\r\n}\n```\n\n// File: lib\\components\\buttons\\social_auth_button.dart\n```dart\n/*\r\nA comprehensive social authentication button widget that supports multiple providers(Apple, Google, Facebook) with brand-specific styling.\r\n\r\nCommon use cases:\r\n1. Social login/signup flows\r\n2. Account linking interfaces\r\n3. Social sharing features\r\n4. OAuth authentication implementations\r\n*/\r\n\r\nimport 'package:flutter/material.dart';\r\nimport 'package:font_awesome_flutter/font_awesome_flutter.dart';\r\n\r\n// Enum defining the types of buttons supported\r\nenum ButtonType { apple, google, facebook }\r\n\r\nclass SocialAuthButton extends StatelessWidget {\r\n  final ButtonType type;\r\n  final VoidCallback onPressed;\r\n  final String? customText; // Optional text override\r\n\r\n  const SocialAuthButton({\r\n    super.key,\r\n    required this.type,\r\n    required this.onPressed,\r\n    this.customText,\r\n  });\r\n\r\n  factory SocialAuthButton.apple({Key? key, required VoidCallback onPressed}) =>\r\n      SocialAuthButton(key: key, type: ButtonType.apple, onPressed: onPressed);\r\n\r\n  factory SocialAuthButton.google({\r\n    Key? key,\r\n    required VoidCallback onPressed,\r\n  }) =>\r\n      SocialAuthButton(key: key, type: ButtonType.google, onPressed: onPressed);\r\n\r\n  factory SocialAuthButton.facebook({\r\n    Key? key,\r\n    required VoidCallback onPressed,\r\n  }) => SocialAuthButton(\r\n    key: key,\r\n    type: ButtonType.facebook,\r\n    onPressed: onPressed,\r\n  );\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return LayoutBuilder(\r\n      builder: (context, constraints) {\r\n        return SizedBox(\r\n          width: double.infinity,\r\n\r\n          child: FilledButton(\r\n            onPressed: onPressed,\r\n\r\n            style: FilledButton.styleFrom(\r\n              side:\r\n                  type == ButtonType.google\r\n                      ? BorderSide(color: Colors.grey.shade300, width: 1)\r\n                      : BorderSide.none,\r\n\r\n              /// The button should be rounded. Don't change the borderRadius.\r\n              shape: RoundedRectangleBorder(\r\n                borderRadius: BorderRadius.circular(60),\r\n              ),\r\n              padding: EdgeInsets.symmetric(vertical: 24, horizontal: 16),\r\n              backgroundColor: _getButtonColor(),\r\n              foregroundColor: _getTextColor(),\r\n            ),\r\n            child: Stack(\r\n              alignment: Alignment.center,\r\n              children: [\r\n                Positioned(left: 0, child: _getIcon(24.0)),\r\n                SizedBox(\r\n                  width: double.infinity,\r\n                  child: Text(\r\n                    // Use custom text first, then provider name, then default\r\n                    customText ?? 'Continue with ${_getProviderName()}',\r\n                    style: const TextStyle(\r\n                      fontSize: 16.0,\r\n                      fontWeight: FontWeight.w500,\r\n                    ),\r\n                    textAlign: TextAlign.center,\r\n                  ),\r\n                ),\r\n              ],\r\n            ),\r\n          ),\r\n        );\r\n      },\r\n    );\r\n  }\r\n\r\n  // Only relevant for social buttons\r\n  String _getProviderName() {\r\n    switch (type) {\r\n      case ButtonType.apple:\r\n        return 'Apple';\r\n      case ButtonType.google:\r\n        return 'Google';\r\n      case ButtonType.facebook:\r\n        return 'Facebook';\r\n    }\r\n  }\r\n\r\n  Color _getButtonColor() {\r\n    switch (type) {\r\n      case ButtonType.apple:\r\n        return Colors.black;\r\n      case ButtonType.google:\r\n        // Using white for Google button background as is common\r\n        return Colors.white;\r\n      case ButtonType.facebook:\r\n        return const Color(0xFF1877F2); // Facebook blue\r\n    }\r\n  }\r\n\r\n  Color _getTextColor() {\r\n    switch (type) {\r\n      case ButtonType.apple:\r\n      case ButtonType.facebook:\r\n        return Colors.white;\r\n      case ButtonType.google:\r\n        return Colors.black87;\r\n    }\r\n  }\r\n\r\n  // Returns the icon widget or an empty box\r\n  Widget _getIcon(double size) {\r\n    switch (type) {\r\n      case ButtonType.apple:\r\n        // Using FontAwesome for consistency, but could use Icons.apple\r\n        return FaIcon(\r\n          FontAwesomeIcons.apple,\r\n          size: size,\r\n          color: _getTextColor(),\r\n        );\r\n      case ButtonType.google:\r\n        return Image.network(\r\n          'https://img.icons8.com/?size=100&id=17949&format=png',\r\n          height: size,\r\n          width: size,\r\n        );\r\n      case ButtonType.facebook:\r\n        // Using FontAwesome's Facebook icon\r\n        return FaIcon(\r\n          FontAwesomeIcons.facebookF,\r\n          size: size,\r\n          color: _getTextColor(),\r\n        ); // Use F logo\r\n    }\r\n  }\r\n}\n```\n\n// File: lib\\main.dart\n```dart\nimport 'package:ai_travel_app_ui_kit/screens/date_timeline_screen.dart'; // Import the new screen\nimport 'package:flutter/material.dart';\nimport 'package:pixel_preview/pixel_preview.dart';\nimport 'package:google_fonts/google_fonts.dart'; // Import google_fonts\nimport 'package:ai_travel_app_ui_kit/screens/book_hotel_screen.dart';\nimport 'package:ai_travel_app_ui_kit/placeholder.dart';\nimport 'package:ai_travel_app_ui_kit/screens/home_screen.dart'; // Import the new home screen\nimport 'package:ai_travel_app_ui_kit/screens/explore_hotels_screen.dart'; // Import the new explore hotels screen\n\nimport 'package:ai_travel_app_ui_kit/screens/hotel_filter_screen.dart'; // Import the new HotelFilterScreen\nimport 'package:ai_travel_app_ui_kit/screens/hotel_details_screen.dart'; // Import the new HotelDetailsScreen\nimport 'package:ai_travel_app_ui_kit/screens/reservation_details_screen.dart'; // Import the new ReservationDetailsScreen\nimport 'package:ai_travel_app_ui_kit/screens/order_status_screen.dart'; // Import the new OrderStatusScreen\nimport 'package:ai_travel_app_ui_kit/screens/profile_screen.dart'; // Import the new ProfileScreen\nimport 'package:ai_travel_app_ui_kit/screens/subscription_screen.dart'; // Import the new SubscriptionScreen\nimport 'package:ai_travel_app_ui_kit/screens/settings_screen.dart'; // Import the new SettingsScreen\n\nvoid main() {\n  runApp(const MyApp());\n}\n\nclass MyApp extends StatelessWidget {\n  const MyApp({super.key});\n\n  @override\n  Widget build(BuildContext context) {\n    const Color primaryColor = Color(0xFF7356FF); // User's chosen primary color\n    return MaterialApp(\n      debugShowCheckedModeBanner: false,\n      title: 'Starter App', // Updated title\n      theme: ThemeData(\n        primaryColor: primaryColor,\n        colorScheme: ColorScheme.fromSeed(\n          seedColor: primaryColor,\n          brightness: ThemeData.light().brightness,\n          onPrimary: Colors.white,\n          surface: Colors.white,\n        ),\n        appBarTheme: const AppBarTheme(\n          backgroundColor: Colors.white,\n          elevation: 0,\n          iconTheme: IconThemeData(color: primaryColor),\n        ),\n        elevatedButtonTheme: ElevatedButtonThemeData(\n          style: ElevatedButton.styleFrom(\n            backgroundColor: primaryColor,\n            foregroundColor: Colors.white,\n          ),\n        ),\n        textButtonTheme: TextButtonThemeData(\n          style: TextButton.styleFrom(foregroundColor: primaryColor),\n        ),\n        outlinedButtonTheme: OutlinedButtonThemeData(\n          style: OutlinedButton.styleFrom(\n            foregroundColor: primaryColor,\n            side: const BorderSide(color: primaryColor),\n          ),\n        ),\n        floatingActionButtonTheme: FloatingActionButtonThemeData(\n          backgroundColor: primaryColor,\n          foregroundColor: Colors.white,\n        ),\n        filledButtonTheme: FilledButtonThemeData(\n          style: FilledButton.styleFrom(\n            backgroundColor: primaryColor,\n            foregroundColor: Colors.white,\n          ),\n        ),\n        textTheme:\n            GoogleFonts.plusJakartaSansTextTheme(), // Apply user's text theme\n      ),\n      home: const PixelPreview(\n        presets: ScreenPresets(),\n        child: const HomeScreen(), // Set HomeScreen as the home screen\n      ),\n    );\n  }\n}\n```\n\n// File: lib\\placeholder.dart\n```dart\nimport 'package:flutter/material.dart';\n\nclass PlaceHolderScreen extends StatelessWidget {\n  const PlaceHolderScreen({super.key});\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      body: Center(child: const Text(\"Hi! Let's build something awesome\")),\n    );\n  }\n}\n```\n\n// File: lib\\screens\\ai_chat_section.dart\n```dart\nimport 'package:flutter/material.dart';\n\nclass AIChatSection extends StatefulWidget {\n  const AIChatSection({super.key});\n\n  @override\n  State<AIChatSection> createState() => _AIChatSectionState();\n}\n\nclass _AIChatSectionState extends State<AIChatSection> {\n  @override\n  Widget build(BuildContext context) {\n    final TextTheme textTheme = Theme.of(context).textTheme;\n    final Color primaryColor = Theme.of(context).primaryColor;\n    final ColorScheme colorScheme = Theme.of(context).colorScheme;\n\n    return Scaffold(\n      backgroundColor: Colors.grey[100], // Light grey background\n      appBar: AppBar(\n        backgroundColor: Colors.grey[100], // Match scaffold background\n        elevation: 0,\n        leading: IconButton(\n          icon: Icon(Icons.arrow_back, color: primaryColor, size: 20),\n          onPressed: () {\n            Navigator.of(context).pop();\n          },\n        ),\n        title: Text(\n          'App AI',\n          style: textTheme.titleLarge?.copyWith(\n            fontWeight: FontWeight.bold,\n            color: Colors.grey[800],\n            fontSize: 18,\n          ),\n        ),\n        centerTitle: true,\n        actions: [\n          IconButton(\n            icon: Icon(Icons.calendar_month, color: primaryColor, size: 20),\n            onPressed: () {\n              // TODO: Implement calendar action\n            },\n          ),\n          IconButton(\n            icon: Icon(Icons.more_vert, color: primaryColor, size: 20),\n            onPressed: () {\n              // TODO: Implement more options action\n            },\n          ),\n          const SizedBox(width: 8.0),\n        ],\n      ),\n      body: Column(\n        children: [\n          Expanded(\n            child: ListView(\n              reverse: true, // Make messages start from bottom\n              padding: const EdgeInsets.only(left: 24.0, right: 24.0, top: 24.0, bottom: 24.0), // Added bottom padding here\n              children:\n                  [\n                    // Display messages in reverse order of how they appear in the image\n                    // Latest message (from user) first, then AI's response, then audio.\n                    _UserMessageBubble(\n                      text: 'Suggest me some hotels with good rating minimum 4 star, under 20,000 BDT Budget, Wifi Available, Complimentary Breakfast Added, Location will be near Mirabazar Centar.',\n                      textTheme: textTheme,\n                      primaryColor: primaryColor,\n                    ),\n                    const SizedBox(height: 16.0),\n                    _AIMessageBubble(\n                      text: 'Got it! Searching for hotels in Sylhet from March 20 for three nights. What\\'s your budget range?',\n                      textTheme: textTheme,\n                      colorScheme: colorScheme,\n                    ),\n                    const SizedBox(height: 16.0),\n                    // Audio message player (will be at the top of the list, thus bottom of screen)\n                    Align(\n                      alignment: Alignment.centerRight,\n                      child: _AudioMessagePlayer(primaryColor: primaryColor),\n                    ),\n                  ].reversed.toList(), // Reverse the list to match image order from top-to-bottom\n            ),\n          ),\n          // Message input bar at the bottom\n          Container(\n            padding: const EdgeInsets.symmetric(horizontal: 16.0, vertical: 12.0),\n            color: colorScheme.surface,\n            child: Row(\n              children: [\n                IconButton(\n                  icon: Icon(Icons.add, color: Colors.grey[600]),\n                  onPressed: () {\n                    // TODO: Implement attachment action\n                  },\n                ),\n                const SizedBox(width: 8.0),\n                Expanded(\n                  child: TextField(\n                    decoration: InputDecoration(\n                      hintText: 'Message...',\n                      hintStyle: textTheme.bodyLarge?.copyWith(color: Colors.grey[500]),\n                      filled: true,\n                      fillColor: Colors.grey[200],\n                      border: OutlineInputBorder(\n                        borderRadius: BorderRadius.circular(25.0),\n                        borderSide: BorderSide.none,\n                      ),\n                      contentPadding: const EdgeInsets.only(left: 16.0, top: 12.0, bottom: 12.0),\n                      suffixIcon: Padding(\n                        padding: const EdgeInsets.only(right: 16.0),\n                        child: Icon(Icons.mic, color: Colors.grey[600]),\n                      ),\n                    ),\n                    style: textTheme.bodyLarge?.copyWith(color: Colors.grey[850]),\n                  ),\n                ),\n                const SizedBox(width: 8.0),\n                Container(\n                  decoration: BoxDecoration(\n                    color: primaryColor,\n                    shape: BoxShape.circle,\n                  ),\n                  child: IconButton(\n                    icon: Icon(Icons.send, color: colorScheme.onPrimary),\n                    onPressed: () {\n                      // TODO: Implement send message action\n                    },\n                  ),\n                ),\n              ],\n            ),\n          ),\n        ],\n      ),\n    );\n  }\n}\n\nclass _AudioMessagePlayer extends StatefulWidget {\n  final Color primaryColor;\n  const _AudioMessagePlayer({required this.primaryColor});\n\n  @override\n  State<_AudioMessagePlayer> createState() => _AudioMessagePlayerState();\n}\n\nclass _AudioMessagePlayerState extends State<_AudioMessagePlayer> {\n  double _currentSliderValue = 0.5; // Initial value for the slider\n  bool _isPlaying = false; // State for play/pause button\n\n  @override\n  Widget build(BuildContext context) {\n    return Container(\n      width: 200,\n      padding: const EdgeInsets.symmetric(horizontal: 12.0, vertical: 8.0),\n      decoration: BoxDecoration(\n        color: widget.primaryColor, // Use primary color for audio message background\n        borderRadius: BorderRadius.circular(20.0),\n      ),\n      child: Row(\n        mainAxisSize: MainAxisSize.min,\n        children: [\n          IconButton(\n            padding: EdgeInsets.zero, // Remove default IconButton padding\n            constraints: const BoxConstraints(), // Remove default IconButton constraints\n            icon: Icon(\n              _isPlaying ? Icons.pause : Icons.play_arrow,\n              color: Colors.white,\n              size: 24,\n            ),\n            onPressed: () {\n              setState(() {\n                _isPlaying = !_isPlaying; // Toggle play/pause state\n              });\n              // TODO: Implement actual audio play/pause logic\n              print('Audio is now ${_isPlaying ? 'playing' : 'paused'}');\n            },\n          ),\n          const SizedBox(width: 8.0),\n          Expanded(\n            child: SliderTheme(\n              data: SliderTheme.of(context).copyWith(\n                trackHeight: 2.0,\n                thumbShape: const RoundSliderThumbShape(enabledThumbRadius: 6.0),\n                overlayShape: const RoundSliderOverlayShape(overlayRadius: 10.0),\n                activeTrackColor: Colors.white, // White for active part\n                inactiveTrackColor: Colors.white.withOpacity(0.5), // Lighter white for inactive\n                thumbColor: Colors.white, // White thumb\n                overlayColor: Colors.white.withOpacity(0.2),\n              ),\n              child: Slider(\n                value: _currentSliderValue,\n                min: 0.0,\n                max: 1.0,\n                onChanged: (double value) {\n                  setState(() {\n                    _currentSliderValue = value;\n                  });\n                },\n              ),\n            ),\n          ),\n          const SizedBox(width: 8.0),\n          Text(\n            '0:21',\n            style: Theme.of(context).textTheme.bodySmall?.copyWith(color: Colors.white),\n          ),\n        ],\n      ),\n    );\n  }\n}\n\nclass _AIMessageBubble extends StatelessWidget {\n  final String text;\n  final TextTheme textTheme;\n  final ColorScheme colorScheme;\n\n  const _AIMessageBubble({\n    required this.text,\n    required this.textTheme,\n    required this.colorScheme,\n  });\n\n  @override\n  Widget build(BuildContext context) {\n    return Row(\n      crossAxisAlignment: CrossAxisAlignment.start,\n      children: [\n        CircleAvatar(\n          radius: 16,\n          backgroundColor: Colors.grey[300],\n          child: Icon(Icons.person, color: Colors.grey[600], size: 20),\n        ),\n        const SizedBox(width: 8.0),\n        Expanded(\n          child: Container(\n            padding: const EdgeInsets.all(12.0),\n            decoration: BoxDecoration(\n              color: colorScheme.surface, // White background for AI message\n              borderRadius: BorderRadius.only(\n                topLeft: Radius.circular(16.0),\n                topRight: Radius.circular(16.0),\n                bottomRight: Radius.circular(16.0),\n                bottomLeft: Radius.circular(4.0),\n              ),\n            ),\n            child: Text(\n              text,\n              style: textTheme.bodyMedium?.copyWith(color: Colors.grey[800]),\n            ),\n          ),\n        ),\n      ],\n    );\n  }\n}\n\nclass _UserMessageBubble extends StatelessWidget {\n  final String text;\n  final TextTheme textTheme;\n  final Color primaryColor;\n\n  const _UserMessageBubble({\n    required this.text,\n    required this.textTheme,\n    required this.primaryColor,\n  });\n\n  @override\n  Widget build(BuildContext context) {\n    return Align(\n      alignment: Alignment.centerRight,\n      child: Container(\n        margin: const EdgeInsets.only(left: 50.0),\n        padding: const EdgeInsets.all(12.0),\n        decoration: BoxDecoration(\n          color: primaryColor, // Use primary color for user message background\n          borderRadius: BorderRadius.only(\n            topLeft: Radius.circular(16.0),\n            topRight: Radius.circular(16.0),\n            bottomLeft: Radius.circular(16.0),\n            bottomRight: Radius.circular(4.0),\n          ),\n        ),\n        child: Text(\n          text,\n          style: textTheme.bodyMedium?.copyWith(color: Colors.white), // White text on primary background\n        ),\n      ),\n    );\n  }\n}\n```\n\n// File: lib\\screens\\app_ai_screen.dart\n```dart\nimport 'package:flutter/material.dart';\n\nclass AppAIScreen extends StatefulWidget {\n  const AppAIScreen({super.key});\n\n  @override\n  State<AppAIScreen> createState() => _AppAIScreenState();\n}\n\nclass _AppAIScreenState extends State<AppAIScreen> {\n  final Set<String> _selectedSuggestions = {}; // To manage selected chips\n\n  void _toggleSuggestion(String text) {\n    setState(() {\n      if (_selectedSuggestions.contains(text)) {\n        _selectedSuggestions.remove(text);\n      } else {\n        _selectedSuggestions.add(text);\n      }\n      print('Selected suggestions: $_selectedSuggestions');\n    });\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    final TextTheme textTheme = Theme.of(context).textTheme;\n    final Color primaryColor = Theme.of(context).primaryColor;\n    final ColorScheme colorScheme = Theme.of(context).colorScheme;\n\n    return Scaffold(\n      backgroundColor: Colors.grey[100], // Light grey background\n      appBar: AppBar(\n        backgroundColor: Colors.grey[100], // Match scaffold background\n        elevation: 0,\n        leading: IconButton(\n          icon: Icon(\n            Icons.arrow_back,\n            color: primaryColor,\n            size: 20,\n          ), // Back icon with primary color and size 20\n          onPressed: () {\n            Navigator.of(context).pop();\n          },\n        ),\n        title: Text(\n          'App AI',\n          style: textTheme.titleLarge?.copyWith(\n            fontWeight: FontWeight.bold,\n            color: Colors.grey[800],\n            fontSize: 18, // Title font size 18\n          ),\n        ),\n        centerTitle: true,\n        actions: [\n          IconButton(\n            icon: Icon(\n              Icons.calendar_month,\n              color: primaryColor,\n              size: 20,\n            ), // Calendar icon with primary color and size 20\n            onPressed: () {\n              // TODO: Implement calendar action\n            },\n          ),\n          IconButton(\n            icon: Icon(\n              Icons.more_vert,\n              color: primaryColor,\n              size: 20,\n            ), // More icon with primary color and size 20\n            onPressed: () {\n              // TODO: Implement more options action\n            },\n          ),\n          const SizedBox(width: 8.0),\n        ],\n      ),\n      body: Column(\n        children: [\n          Expanded(\n            child: SingleChildScrollView(\n              padding: const EdgeInsets.symmetric(\n                horizontal: 24.0,\n                vertical: 24.0,\n              ),\n              child: Column(\n                crossAxisAlignment:\n                    CrossAxisAlignment\n                        .center, // Center the content horizontally\n                mainAxisAlignment:\n                    MainAxisAlignment\n                        .center, // Center content vertically within available space\n                children: [\n                  SizedBox(height: 150),\n                  Text(\n                    'What can i help with?',\n                    style: textTheme.titleMedium?.copyWith(\n                      fontWeight: FontWeight.w600,\n                      color: Colors.grey[700],\n                    ),\n                    textAlign: TextAlign.center, // Center the text itself\n                  ),\n                  const SizedBox(height: 20.0),\n                  Center(\n                    // Center the Wrap widget (redundant with parent column's CrossAxisAlignment.center if Wrap takes full width, but good for safety)\n                    child: Wrap(\n                      spacing: 8.0, // horizontal spacing\n                      runSpacing: 8.0, // vertical spacing\n                      children: [\n                        _SuggestionChip(\n                          text: 'Trip Planning & Itineraries',\n                          onTap:\n                              () => _toggleSuggestion(\n                                'Trip Planning & Itineraries',\n                              ),\n                          isActive: _selectedSuggestions.contains(\n                            'Trip Planning & Itineraries',\n                          ),\n                          textTheme: textTheme,\n                          primaryColor: primaryColor,\n                        ),\n                        _SuggestionChip(\n                          text: 'Cost Optimization',\n                          onTap: () => _toggleSuggestion('Cost Optimization'),\n                          isActive: _selectedSuggestions.contains(\n                            'Cost Optimization',\n                          ),\n                          textTheme: textTheme,\n                          primaryColor: primaryColor,\n                        ),\n                        _SuggestionChip(\n                          text: 'Filtering System',\n                          onTap: () => _toggleSuggestion('Filtering System'),\n                          isActive: _selectedSuggestions.contains(\n                            'Filtering System',\n                          ),\n                          textTheme: textTheme,\n                          primaryColor: primaryColor,\n                        ),\n                        _SuggestionChip(\n                          text: 'Travel Safety & Security',\n                          onTap:\n                              () =>\n                                  _toggleSuggestion('Travel Safety & Security'),\n                          isActive: _selectedSuggestions.contains(\n                            'Travel Safety & Security',\n                          ),\n                          textTheme: textTheme,\n                          primaryColor: primaryColor,\n                        ),\n                        _SuggestionChip(\n                          text: 'Eco-Friendly Travel',\n                          onTap: () => _toggleSuggestion('Eco-Friendly Travel'),\n                          isActive: _selectedSuggestions.contains(\n                            'Eco-Friendly Travel',\n                          ),\n                          textTheme: textTheme,\n                          primaryColor: primaryColor,\n                        ),\n                        _SuggestionChip(\n                          text: 'AI-Powered Travel Reviews',\n                          onTap:\n                              () => _toggleSuggestion(\n                                'AI-Powered Travel Reviews',\n                              ),\n                          isActive: _selectedSuggestions.contains(\n                            'AI-Powered Travel Reviews',\n                          ),\n                          textTheme: textTheme,\n                          primaryColor: primaryColor,\n                        ),\n                        _SuggestionChip(\n                          text: 'More',\n                          onTap: () => _toggleSuggestion('More'),\n                          isActive: _selectedSuggestions.contains('More'),\n                          textTheme: textTheme,\n                          primaryColor: primaryColor,\n                        ),\n                      ],\n                    ),\n                  ),\n                  // TODO: Add chat messages here later\n                ],\n              ),\n            ),\n          ),\n          // Message input bar at the bottom\n          Container(\n            padding: const EdgeInsets.symmetric(\n              horizontal: 16.0,\n              vertical: 12.0,\n            ),\n            color: colorScheme.surface, // White background for the input bar\n            child: Row(\n              children: [\n                IconButton(\n                  icon: Icon(Icons.add, color: Colors.grey[600]),\n                  onPressed: () {\n                    // TODO: Implement attachment action\n                  },\n                ),\n                const SizedBox(width: 8.0),\n                Expanded(\n                  child: TextField(\n                    decoration: InputDecoration(\n                      hintText: 'Message...',\n                      hintStyle: textTheme.bodyLarge?.copyWith(\n                        color: Colors.grey[500],\n                      ),\n                      filled: true,\n                      fillColor: Colors.grey[200], // Light grey background\n                      border: OutlineInputBorder(\n                        borderRadius: BorderRadius.circular(\n                          25.0,\n                        ), // More rounded corners\n                        borderSide: BorderSide.none,\n                      ),\n                      contentPadding: const EdgeInsets.only(\n                        left: 16.0,\n                        top: 12.0,\n                        bottom: 12.0,\n                      ), // Removed original right padding here\n                      suffixIcon: Padding(\n                        // Wrapped mic icon in Padding\n                        padding: const EdgeInsets.only(\n                          right: 16.0,\n                        ), // Added right padding\n                        child: Icon(\n                          Icons.mic,\n                          color: Colors.grey[600],\n                        ), // Microphone icon\n                      ),\n                    ),\n                    style: textTheme.bodyLarge?.copyWith(\n                      color: Colors.grey[850],\n                    ),\n                  ),\n                ),\n                const SizedBox(width: 8.0),\n                Container(\n                  decoration: BoxDecoration(\n                    color: primaryColor, // Use primaryColor for send button\n                    shape: BoxShape.circle,\n                  ),\n                  child: IconButton(\n                    icon: Icon(\n                      Icons.send,\n                      color: colorScheme.onPrimary,\n                    ), // White send icon\n                    onPressed: () {\n                      // TODO: Implement send message action\n                    },\n                  ),\n                ),\n              ],\n            ),\n          ),\n        ],\n      ),\n    );\n  }\n}\n\nclass _SuggestionChip extends StatelessWidget {\n  final String text;\n  final VoidCallback onTap;\n  final bool isActive; // Added isActive property\n  final TextTheme textTheme;\n  final Color primaryColor; // Added primaryColor for styling\n\n  const _SuggestionChip({\n    required this.text,\n    required this.onTap,\n    this.isActive = false, // Default to false\n    required this.textTheme,\n    required this.primaryColor,\n  });\n\n  @override\n  Widget build(BuildContext context) {\n    return GestureDetector(\n      onTap: onTap,\n      child: Container(\n        padding: const EdgeInsets.symmetric(horizontal: 16.0, vertical: 10.0),\n        decoration: BoxDecoration(\n          color:\n              isActive\n                  ? primaryColor.withOpacity(0.1)\n                  : Colors.white, // Background changes based on isActive\n          borderRadius: BorderRadius.circular(20.0), // Increased border radius\n          border: Border.all(\n            color: isActive ? primaryColor.withOpacity(0.3) : Colors.grey[300]!,\n            width: 1.0,\n          ),\n        ),\n        child: Text(\n          text,\n          style: textTheme.bodySmall?.copyWith(\n            color:\n                isActive\n                    ? primaryColor\n                    : Colors.grey[700], // Text color changes based on isActive\n            fontWeight:\n                isActive\n                    ? FontWeight.bold\n                    : FontWeight\n                        .normal, // Font weight changes based on isActive\n          ),\n        ),\n      ),\n    );\n  }\n}\n```\n\n// File: lib\\screens\\book_hotel_screen.dart\n```dart\nimport 'package:flutter/material.dart';\n\nimport 'package:ai_travel_app_ui_kit/components/buttons/primary_text_button.dart'; // Import PrimaryTextButton\n\nclass BookHotelScreen extends StatelessWidget {\n  const BookHotelScreen({super.key});\n\n  @override\n  Widget build(BuildContext context) {\n    final TextTheme textTheme = Theme.of(context).textTheme;\n    final Color primaryColor = Theme.of(context).primaryColor;\n    final ColorScheme colorScheme = Theme.of(context).colorScheme;\n\n    return Scaffold(\n      backgroundColor:\n          Colors.grey[100], // Light grey background matching the image\n      appBar: AppBar(\n        backgroundColor: Colors.grey[100], // Match scaffold background\n        elevation: 0, // No shadow\n        leading: IconButton(\n          icon: Icon(Icons.close, color: Colors.grey[700]), // Close icon\n          onPressed: () {\n            Navigator.of(context).pop(); // Navigate back\n          },\n        ),\n        title: Text(\n          'Book a Hotel',\n          style: textTheme.titleLarge?.copyWith(\n            fontWeight: FontWeight.bold,\n            color: Colors.grey[800],\n          ),\n        ),\n        centerTitle: true,\n      ),\n      body: Padding(\n        padding: const EdgeInsets.symmetric(horizontal: 24.0),\n        child: Column(\n          crossAxisAlignment: CrossAxisAlignment.start,\n          children: [\n            const SizedBox(height: 32.0),\n            Text(\n              'Book a Hotel From?',\n              style: textTheme.titleMedium?.copyWith(\n                fontWeight: FontWeight.w600, // Semi-bold\n                color: Colors.grey[700],\n              ),\n            ),\n            const SizedBox(height: 8.0),\n            TextField(\n              decoration: InputDecoration(\n                hintText: 'Sylhet, Bangl', // Example hint text\n                hintStyle: textTheme.bodyLarge?.copyWith(\n                  color: Colors.grey[500],\n                ),\n                filled: true,\n                fillColor:\n                    colorScheme.surface, // White background for the input field\n                prefixIcon: Padding(\n                  // Add padding around the prefix icon\n                  padding: const EdgeInsets.only(\n                    left: 12.0,\n                    right: 8.0,\n                  ), // Adjust padding as needed\n                  child: Icon(\n                    Icons.location_on,\n                    color: Colors.grey[600],\n                  ), // Location icon\n                ),\n                suffixIcon: Padding(\n                  // Add padding around the suffix icon\n                  padding: const EdgeInsets.only(\n                    left: 8.0,\n                    right: 12.0,\n                  ), // Adjust padding as needed\n                  child: Icon(\n                    Icons.keyboard_arrow_down,\n                    color: Colors.grey[600],\n                  ), // Dropdown arrow\n                ),\n                border: OutlineInputBorder(\n                  borderRadius: BorderRadius.circular(\n                    15.0,\n                  ), // More rounded corners\n                  borderSide: BorderSide.none, // No border line\n                ),\n                contentPadding: const EdgeInsets.symmetric(\n                  horizontal: 16.0,\n                  vertical: 16.0,\n                ),\n              ),\n              style: textTheme.bodyLarge?.copyWith(color: Colors.grey[850]),\n            ),\n            const Spacer(), // Pushes the button to the bottom\n            PrimaryTextButton(\n              // Using the UIKit PrimaryTextButton\n              text: 'Next',\n              onPressed: () {\n                // TODO: Implement navigation to the next booking step\n                print('Next button tapped');\n              },\n            ),\n            const SizedBox(height: 40.0), // Bottom padding\n          ],\n        ),\n      ),\n    );\n  }\n}\n```\n\n// File: lib\\screens\\date_timeline_screen.dart\n```dart\nimport 'package:flutter/material.dart';\nimport 'package:ai_travel_app_ui_kit/components/buttons/primary_text_button.dart';\n\nclass DateTimelineScreen extends StatefulWidget {\n  const DateTimelineScreen({super.key});\n\n  @override\n  State<DateTimelineScreen> createState() => _DateTimelineScreenState();\n}\n\nclass _DateTimelineScreenState extends State<DateTimelineScreen> {\n  DateTime _focusedDay = DateTime.now(); // Current month for display\n  DateTime? _selectedStartDate;\n  DateTime? _selectedEndDate;\n\n  @override\n  void initState() {\n    super.initState();\n    // Initialize to March 2025 as per image reference\n    _focusedDay = DateTime(2025, 3, 1);\n    // Initialize selected dates as per image reference\n    _selectedStartDate = DateTime(2025, 3, 10);\n    _selectedEndDate = DateTime(2025, 3, 13);\n  }\n\n  void _onDaySelected(DateTime selectedDay) {\n    setState(() {\n      if (_selectedStartDate == null || _selectedEndDate != null) {\n        // No dates selected, or a range is already selected (start a new one)\n        _selectedStartDate = selectedDay;\n        _selectedEndDate = null;\n      } else if (selectedDay.isBefore(_selectedStartDate!)) {\n        // Selected a day before the start date, make it the new start date\n        _selectedEndDate = _selectedStartDate;\n        _selectedStartDate = selectedDay;\n      } else if (selectedDay.isAfter(_selectedStartDate!)) {\n        // Selected a day after the start date, make it the end date\n        _selectedEndDate = selectedDay;\n      } else {\n        // Tapped the same start date, deselect\n        _selectedStartDate = null;\n        _selectedEndDate = null;\n      }\n    });\n  }\n\n  bool _isDaySelected(DateTime day) {\n    if (_selectedStartDate == null) return false;\n    if (_selectedEndDate == null) {\n      return day.year == _selectedStartDate!.year &&\n          day.month == _selectedStartDate!.month &&\n          day.day == _selectedStartDate!.day;\n    }\n    return (day.isAtSameMomentAs(_selectedStartDate!) ||\n            day.isAtSameMomentAs(_selectedEndDate!)) ||\n        (day.isAfter(_selectedStartDate!) && day.isBefore(_selectedEndDate!));\n  }\n\n  bool _isRangeMiddle(DateTime day) {\n    if (_selectedStartDate == null || _selectedEndDate == null) return false;\n    return day.isAfter(_selectedStartDate!) &&\n        day.isBefore(_selectedEndDate!);\n  }\n\n  void _goToPreviousMonth() {\n    setState(() {\n      _focusedDay = DateTime(_focusedDay.year, _focusedDay.month - 1, 1);\n    });\n  }\n\n  void _goToNextMonth() {\n    setState(() {\n      _focusedDay = DateTime(_focusedDay.year, _focusedDay.month + 1, 1);\n    });\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    final TextTheme textTheme = Theme.of(context).textTheme;\n    final ColorScheme colorScheme = Theme.of(context).colorScheme;\n    final Color primaryColor = Theme.of(context).primaryColor;\n\n    // Determine the first day of the month and its weekday\n    final DateTime firstDayOfMonth =\n        DateTime(_focusedDay.year, _focusedDay.month, 1);\n    final int daysInMonth =\n        DateTime(_focusedDay.year, _focusedDay.month + 1, 0).day;\n    final int blankDays = firstDayOfMonth.weekday % 7; // Sunday = 0, Monday = 1, ..., Saturday = 6\n\n    return Scaffold(\n      backgroundColor: Colors.grey[100], // Light grey background matching the image\n      appBar: AppBar(\n        backgroundColor: Colors.grey[100], // Match scaffold background\n        elevation: 0, // No shadow\n        leading: IconButton(\n          icon: Icon(Icons.arrow_back, color: primaryColor, size: 20), // Back arrow icon with size 20 and primary color\n          onPressed: () {\n            Navigator.of(context).pop(); // Navigate back\n          },\n        ),\n        title: Text(\n          'Date & Timeline',\n          style: textTheme.titleLarge?.copyWith(\n            fontWeight: FontWeight.bold,\n            color: Colors.grey[800],\n            fontSize: 18, // Title font size 18\n          ),\n        ),\n        centerTitle: true,\n      ),\n      body: Padding(\n        padding: const EdgeInsets.symmetric(horizontal: 24.0),\n        child: Column(\n          crossAxisAlignment: CrossAxisAlignment.start,\n          children: [\n            const SizedBox(height: 32.0),\n            Text(\n              'Select Date & Stay Timeline?',\n              style: textTheme.titleMedium?.copyWith(\n                fontWeight: FontWeight.w600, // Semi-bold\n                color: Colors.grey[700],\n              ),\n            ),\n            const SizedBox(height: 16.0),\n            Container(\n              padding: const EdgeInsets.all(16.0),\n              decoration: BoxDecoration(\n                color: colorScheme.surface, // White background\n                borderRadius: BorderRadius.circular(15.0), // Rounded corners\n                boxShadow: [\n                  BoxShadow(\n                    color: Colors.grey.withOpacity(0.1),\n                    spreadRadius: 1,\n                    blurRadius: 5,\n                    offset: const Offset(0, 3), // Subtle shadow\n                  ),\n                ],\n              ),\n              child: Column(\n                children: [\n                  // Month Navigation\n                  Row(\n                    mainAxisAlignment: MainAxisAlignment.spaceBetween,\n                    children: [\n                      IconButton(\n                        icon: Icon(Icons.arrow_back_ios,\n                            size: 16, color: Colors.grey[700]),\n                        onPressed: _goToPreviousMonth,\n                      ),\n                      Text(\n                        '${_focusedDay.monthName} ${_focusedDay.year}',\n                        style: textTheme.titleMedium?.copyWith(\n                          fontWeight: FontWeight.bold,\n                          color: Colors.grey[800],\n                        ),\n                      ),\n                      IconButton(\n                        icon: Icon(Icons.arrow_forward_ios,\n                            size: 16, color: Colors.grey[700]),\n                        onPressed: _goToNextMonth,\n                      ),\n                    ],\n                  ),\n                  const SizedBox(height: 16.0),\n                  // Weekdays\n                  Row(\n                    mainAxisAlignment: MainAxisAlignment.spaceAround,\n                    children: const [\n                      _WeekdayText('Sun'),\n                      _WeekdayText('Mon'),\n                      _WeekdayText('Tue'),\n                      _WeekdayText('Wed'),\n                      _WeekdayText('Thu'),\n                      _WeekdayText('Fri'),\n                      _WeekdayText('Sat'),\n                    ],\n                  ),\n                  const SizedBox(height: 8.0),\n                  // Days Grid\n                  GridView.builder(\n                    shrinkWrap: true,\n                    physics: const NeverScrollableScrollPhysics(),\n                    gridDelegate: const SliverGridDelegateWithFixedCrossAxisCount(\n                      crossAxisCount: 7,\n                      childAspectRatio: 1.0,\n                    ),\n                    itemCount: blankDays + daysInMonth + (7 - ((blankDays + daysInMonth) % 7)) % 7, // Ensure full weeks\n                    itemBuilder: (context, index) {\n                      if (index < blankDays) {\n                        return const SizedBox.shrink(); // Empty cells for preceding days\n                      }\n                      final int dayNumber = index - blankDays + 1;\n                      if (dayNumber > daysInMonth) {\n                        return const SizedBox.shrink(); // Empty cells for succeeding days\n                      }\n\n                      final DateTime day = DateTime(_focusedDay.year, _focusedDay.month, dayNumber);\n                      final bool isSelected = _isDaySelected(day);\n                      final bool isRangeMiddle = _isRangeMiddle(day);\n                      final bool isStartDate = _selectedStartDate != null &&\n                          day.isAtSameMomentAs(_selectedStartDate!);\n                      final bool isEndDate = _selectedEndDate != null &&\n                          day.isAtSameMomentAs(_selectedEndDate!);\n\n                      Color textColor = Colors.grey[800]!;\n                      Color backgroundColor = Colors.transparent;\n                      BorderRadius borderRadius = BorderRadius.circular(8.0); // Default radius\n\n                      if (isSelected) {\n                        if (isStartDate || isEndDate) {\n                          backgroundColor = primaryColor; // Use primaryColor for start/end\n                          textColor = colorScheme.onPrimary; // Use onPrimary for text on primary color\n                          if (isStartDate && isEndDate) {\n                             borderRadius = BorderRadius.circular(8.0);\n                          } else if (isStartDate && _selectedEndDate != null) {\n                            borderRadius = const BorderRadius.only(\n                              topLeft: Radius.circular(8.0),\n                              bottomLeft: Radius.circular(8.0),\n                            );\n                          } else if (isEndDate && _selectedStartDate != null) {\n                            borderRadius = const BorderRadius.only(\n                              topRight: Radius.circular(8.0),\n                              bottomRight: Radius.circular(8.0),\n                            );\n                          } else {\n                             borderRadius = BorderRadius.circular(8.0);\n                          }\n                        } else if (isRangeMiddle) {\n                          backgroundColor = primaryColor.withOpacity(0.1); // Lighter primary color for middle\n                          textColor = primaryColor; // Primary color for text in middle\n                          borderRadius = BorderRadius.zero; // No specific rounding for middle\n                        }\n                      }\n\n                      return GestureDetector(\n                        onTap: () => _onDaySelected(day),\n                        child: Container(\n                          margin: const EdgeInsets.symmetric(horizontal: 1.0),\n                          decoration: BoxDecoration(\n                            color: backgroundColor,\n                            borderRadius: borderRadius,\n                          ),\n                          alignment: Alignment.center,\n                          child: Text(\n                            '$dayNumber',\n                            style: textTheme.bodyMedium?.copyWith(\n                              color: textColor,\n                              fontWeight: isSelected ? FontWeight.bold : FontWeight.normal, // Bold for all selected dates\n                            ),\n                          ),\n                        ),\n                      );\n                    },\n                  ),\n                ],\n              ),\n            ),\n            const Spacer(), // Pushes the button to the bottom\n            PrimaryTextButton(\n              text: 'Next',\n              onPressed: () {\n                // TODO: Implement navigation to the next step with selected dates\n                print('Selected Dates: $_selectedStartDate to $_selectedEndDate');\n              },\n            ),\n            const SizedBox(height: 40.0), // Bottom padding\n          ],\n        ),\n      ),\n    );\n  }\n}\n\nclass _WeekdayText extends StatelessWidget {\n  final String text;\n  const _WeekdayText(this.text);\n\n  @override\n  Widget build(BuildContext context) {\n    return Expanded(\n      child: Center(\n        child: Text(\n          text,\n          style: Theme.of(context).textTheme.bodySmall?.copyWith(\n                color: Colors.grey[600],\n                fontWeight: FontWeight.bold,\n              ),\n        ),\n      ),\n    );\n  }\n}\n\nextension on DateTime {\n  String get monthName {\n    switch (month) {\n      case 1:\n        return 'January';\n      case 2:\n        return 'February';\n      case 3:\n        return 'March';\n      case 4:\n        return 'April';\n      case 5:\n        return 'May';\n      case 6:\n        return 'June';\n      case 7:\n        return 'July';\n      case 8:\n        return 'August';\n      case 9:\n        return 'September';\n      case 10:\n        return 'October';\n      case 11:\n        return 'November';\n      case 12:\n        return 'December';\n      default:\n        return '';\n    }\n  }\n}\n```\n\n// File: lib\\screens\\explore_hotels_screen.dart\n```dart\nimport 'package:flutter/material.dart';\n\nclass ExploreHotelsScreen extends StatefulWidget {\n  const ExploreHotelsScreen({super.key});\n\n  @override\n  State<ExploreHotelsScreen> createState() => _ExploreHotelsScreenState();\n}\n\nclass _ExploreHotelsScreenState extends State<ExploreHotelsScreen> {\n  // Use a Set to store currently active filter chips\n  final Set<String> _activeFilters = {\n    'Hotel - Sylhet',\n  }; // Initialize with 'Hotel - Sylhet' active\n\n  void _toggleFilter(String filterText) {\n    setState(() {\n      if (_activeFilters.contains(filterText)) {\n        _activeFilters.remove(filterText);\n      } else {\n        _activeFilters.add(filterText);\n      }\n      print('Active Filters: $_activeFilters');\n    });\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    final TextTheme textTheme = Theme.of(context).textTheme;\n    final Color primaryColor = Theme.of(context).primaryColor;\n    final ColorScheme colorScheme = Theme.of(context).colorScheme;\n\n    return Scaffold(\n      backgroundColor: Colors.grey[100], // Light grey background\n      appBar: AppBar(\n        scrolledUnderElevation: 0,\n        backgroundColor: Colors.grey[100], // Match scaffold background\n        elevation: 0, // No shadow\n        leading: IconButton(\n          icon: Icon(\n            Icons.close,\n            color: primaryColor,\n          ), // Close icon with primaryColor\n          onPressed: () {\n            Navigator.of(context).pop(); // Navigate back\n          },\n        ),\n        title: Text(\n          'Book a Hotel',\n          style: textTheme.titleLarge?.copyWith(\n            fontWeight: FontWeight.bold,\n            color: Colors.grey[800],\n            fontSize:\n                18, // Based on previous request for title size consistency\n          ),\n        ),\n        centerTitle: true,\n        actions: [\n          IconButton(\n            icon: Container(\n              padding: const EdgeInsets.all(6.0),\n              decoration: BoxDecoration(\n                color: primaryColor.withOpacity(\n                  0.1,\n                ), // Light primary color background\n                borderRadius: BorderRadius.circular(8.0),\n              ),\n              child: Icon(\n                Icons.psychology_outlined,\n                color: primaryColor,\n              ), // AI icon\n            ),\n            onPressed: () {\n              // TODO: Implement AI action\n            },\n          ),\n          IconButton(\n            icon: Icon(\n              Icons.filter_list,\n              color: Colors.grey[700],\n            ), // Filter icon\n            onPressed: () {\n              // TODO: Implement filter action\n            },\n          ),\n          const SizedBox(width: 8.0),\n        ],\n      ),\n      body: Column(\n        crossAxisAlignment: CrossAxisAlignment.start,\n        children: [\n          Padding(\n            padding: const EdgeInsets.symmetric(\n              horizontal: 24.0,\n              vertical: 16.0,\n            ),\n            child: SingleChildScrollView(\n              scrollDirection: Axis.horizontal,\n              child: Row(\n                children: [\n                  _FilterChip(\n                    text: 'Hotel - Sylhet',\n                    onTap: () => _toggleFilter('Hotel - Sylhet'),\n                    isActive: _activeFilters.contains('Hotel - Sylhet'),\n                    primaryColor: primaryColor,\n                    textTheme: textTheme,\n                  ),\n                  const SizedBox(width: 8.0),\n                  _FilterChip(\n                    text: '4 Days',\n                    onTap: () => _toggleFilter('4 Days'),\n                    isActive: _activeFilters.contains('4 Days'),\n                    primaryColor: primaryColor,\n                    textTheme: textTheme,\n                  ),\n                  const SizedBox(width: 8.0),\n                  _FilterChip(\n                    text: 'Check in - Mar 10',\n                    onTap: () => _toggleFilter('Check in - Mar 10'),\n                    isActive: _activeFilters.contains('Check in - Mar 10'),\n                    primaryColor: primaryColor,\n                    textTheme: textTheme,\n                  ),\n                  const SizedBox(width: 8.0),\n                  // Add more chips if needed\n                ],\n              ),\n            ),\n          ),\n          const SizedBox(height: 16.0),\n          Padding(\n            padding: const EdgeInsets.symmetric(horizontal: 24.0),\n            child: Text(\n              'Available Hotels, Choose by yourself',\n              style: textTheme.titleMedium?.copyWith(\n                fontWeight: FontWeight.w600,\n                color: Colors.grey[800],\n              ),\n            ),\n          ),\n          Padding(\n            padding: const EdgeInsets.symmetric(horizontal: 24.0),\n            child: Text(\n              'Your Selection applies to all traveler and hotel authority.',\n              style: textTheme.bodySmall?.copyWith(color: Colors.grey[600]),\n            ),\n          ),\n          const SizedBox(height: 24.0),\n          Expanded(\n            child: ListView.builder(\n              padding: const EdgeInsets.symmetric(horizontal: 24.0),\n              itemCount: 5, // Example: 5 hotel cards\n              itemBuilder: (context, index) {\n                return Padding(\n                  padding: const EdgeInsets.only(bottom: 16.0),\n                  child: _HotelCard(\n                    hotelName: 'Hotel Supreme', // Example data\n                    address: '4140 Parker Rd. Allentown, Sylhet 3100',\n                    pricePerDay: '\\$126',\n                    rating: '4.9 (234 reviews)',\n                    imageUrl:\n                        'https://picsum.photos/400/250?random=$index', // Placeholder image\n                    textTheme: textTheme,\n                    colorScheme: colorScheme,\n                    onTap: () {\n                      // TODO: Implement navigation to hotel detail screen\n                      print('Tapped Hotel Supreme');\n                    },\n                  ),\n                );\n              },\n            ),\n          ),\n        ],\n      ),\n    );\n  }\n}\n\nclass _FilterChip extends StatelessWidget {\n  final String text;\n  final VoidCallback onTap;\n  final bool isActive;\n  final Color primaryColor;\n  final TextTheme textTheme;\n\n  const _FilterChip({\n    required this.text,\n    required this.onTap,\n    this.isActive = false,\n    required this.primaryColor,\n    required this.textTheme,\n  });\n\n  @override\n  Widget build(BuildContext context) {\n    return GestureDetector(\n      onTap: onTap,\n      child: Container(\n        padding: const EdgeInsets.symmetric(horizontal: 16.0, vertical: 10.0),\n        decoration: BoxDecoration(\n          color: isActive ? primaryColor.withOpacity(0.1) : Colors.transparent,\n          borderRadius: BorderRadius.circular(20.0), // Increased border radius\n          border: Border.all(\n            color: isActive ? primaryColor.withOpacity(0.3) : Colors.grey[300]!,\n            width: 1.5,\n          ),\n        ),\n        child: Text(\n          text,\n          style: textTheme.bodySmall?.copyWith(\n            color: isActive ? primaryColor : Colors.grey[700],\n            fontWeight: isActive ? FontWeight.bold : FontWeight.normal,\n          ),\n        ),\n      ),\n    );\n  }\n}\n\nclass _HotelCard extends StatefulWidget {\n  final String hotelName;\n  final String address;\n  final String pricePerDay;\n  final String rating;\n  final String imageUrl;\n  final TextTheme textTheme;\n  final ColorScheme colorScheme;\n  final VoidCallback onTap; // Added for making the card tappable\n\n  const _HotelCard({\n    required this.hotelName,\n    required this.address,\n    required this.pricePerDay,\n    required this.rating,\n    required this.imageUrl,\n    required this.textTheme,\n    required this.colorScheme,\n    required this.onTap,\n    super.key, // Added key to constructor\n  });\n\n  @override\n  State<_HotelCard> createState() => _HotelCardState();\n}\n\nclass _HotelCardState extends State<_HotelCard> {\n  bool _isFavorite = false; // State for the heart icon\n\n  @override\n  Widget build(BuildContext context) {\n    return Material(\n      color: widget.colorScheme.surface, // Card background color\n      borderRadius: BorderRadius.circular(15.0),\n      child: InkWell(\n        borderRadius: BorderRadius.circular(15.0),\n        onTap: widget.onTap,\n        hoverColor: widget.colorScheme.primary.withOpacity(0.05),\n        splashColor: widget.colorScheme.primary.withOpacity(0.2),\n        child: Container(\n          padding: const EdgeInsets.all(16.0),\n          decoration: BoxDecoration(\n            borderRadius: BorderRadius.circular(15.0),\n            // Removed color and shadow from here to prevent overriding Material effects\n          ),\n          child: Column(\n            crossAxisAlignment: CrossAxisAlignment.start,\n            children: [\n              Stack(\n                children: [\n                  ClipRRect(\n                    borderRadius: BorderRadius.circular(10.0),\n                    child: Image.network(\n                      widget.imageUrl,\n                      height: 220, // Increased image height\n                      width: double.infinity,\n                      fit: BoxFit.cover,\n                      errorBuilder:\n                          (context, error, stackTrace) => Container(\n                            height: 220, // Match increased height\n                            width: double.infinity,\n                            color: Colors.grey[300],\n                            child: Icon(\n                              Icons.broken_image,\n                              color: Colors.grey[600],\n                            ),\n                          ),\n                    ),\n                  ),\n                  Positioned(\n                    top: 8.0,\n                    right: 8.0,\n                    child: Container(\n                      decoration: BoxDecoration(\n                        color: Colors.white.withOpacity(0.8),\n                        shape: BoxShape.circle,\n                      ),\n                      child: IconButton(\n                        icon: Icon(\n                          _isFavorite ? Icons.favorite : Icons.favorite_border,\n                          color: _isFavorite ? Colors.red : Colors.grey[700],\n                        ),\n                        onPressed: () {\n                          setState(() {\n                            _isFavorite = !_isFavorite;\n                          });\n                          print(\n                            'Favorite toggled for ${widget.hotelName}: $_isFavorite',\n                          );\n                        },\n                      ),\n                    ),\n                  ),\n                ],\n              ),\n              const SizedBox(height: 16.0),\n              Row(\n                mainAxisAlignment: MainAxisAlignment.spaceBetween,\n                children: [\n                  Expanded(\n                    child: Column(\n                      crossAxisAlignment: CrossAxisAlignment.start,\n                      children: [\n                        Text(\n                          widget.hotelName,\n                          style: widget.textTheme.titleMedium?.copyWith(\n                            fontWeight: FontWeight.bold,\n                            color: Colors.grey[800],\n                          ),\n                          maxLines: 1,\n                          overflow: TextOverflow.ellipsis,\n                        ),\n                        const SizedBox(height: 4.0),\n                        Text(\n                          widget.address,\n                          style: widget.textTheme.bodySmall?.copyWith(\n                            color: Colors.grey[600],\n                          ),\n                          maxLines: 1,\n                          overflow: TextOverflow.ellipsis,\n                        ),\n                      ],\n                    ),\n                  ),\n                  Text(\n                    '${widget.pricePerDay}/Day',\n                    style: widget.textTheme.titleSmall?.copyWith(\n                      fontWeight: FontWeight.bold,\n                      color: Colors.grey[800],\n                    ),\n                  ),\n                ],\n              ),\n              const SizedBox(height: 8.0),\n              Row(\n                children: [\n                  Icon(Icons.star, color: Colors.amber, size: 16),\n                  const SizedBox(width: 4.0),\n                  Text(\n                    widget.rating,\n                    style: widget.textTheme.bodySmall?.copyWith(\n                      color: Colors.grey[700],\n                    ),\n                  ),\n                ],\n              ),\n            ],\n          ),\n        ),\n      ),\n    );\n  }\n}\n```\n\n// File: lib\\screens\\home_screen.dart\n```dart\nimport 'package:flutter/material.dart';\nimport 'package:ai_travel_app_ui_kit/components/buttons/primary_text_button.dart'; // Import if needed for any button\nimport 'package:font_awesome_flutter/font_awesome_flutter.dart'; // For icons if needed\n\nclass HomeScreen extends StatefulWidget {\n  const HomeScreen({super.key});\n\n  @override\n  State<HomeScreen> createState() => _HomeScreenState();\n}\n\nclass _HomeScreenState extends State<HomeScreen> {\n  String _selectedCategory = 'Hotel'; // Default selected category\n\n  @override\n  Widget build(BuildContext context) {\n    final TextTheme textTheme = Theme.of(context).textTheme;\n    final Color primaryColor = Theme.of(context).primaryColor;\n    final ColorScheme colorScheme = Theme.of(context).colorScheme;\n\n    return Scaffold(\n      backgroundColor: Colors.grey[100], // Consistent light grey background\n      appBar: AppBar(\n        backgroundColor: Colors.grey[100], // Match scaffold background\n        elevation: 0,\n        scrolledUnderElevation: 0, // Ensure no shadow on scroll\n        titleSpacing: 0, // Remove default title spacing for custom layout\n        title: Padding(\n          padding: const EdgeInsets.only(left: 24.0),\n          child: Row(\n            children: [\n              CircleAvatar(\n                radius: 20,\n                backgroundColor: Colors.grey[300],\n                backgroundImage: NetworkImage(\n                  'https://picsum.photos/100/100?random=profile_home', // Placeholder profile image\n                ),\n              ),\n              const SizedBox(width: 12.0),\n              Column(\n                crossAxisAlignment: CrossAxisAlignment.start,\n                children: [\n                  Text(\n                    'Hello, Jane!',\n                    style: textTheme.bodyLarge?.copyWith(\n                      fontWeight: FontWeight.bold,\n                      color: Colors.grey[800],\n                    ),\n                  ),\n                  Text(\n                    'Hope you are having a good time',\n                    style: textTheme.bodySmall?.copyWith(\n                      color: Colors.grey[600],\n                    ),\n                  ),\n                ],\n              ),\n            ],\n          ),\n        ),\n        actions: [\n          IconButton(\n            icon: Icon(Icons.notifications_none, color: primaryColor, size: 24),\n            onPressed: () {\n              // TODO: Implement notification action\n              print('Notifications tapped');\n            },\n          ),\n          const SizedBox(width: 16.0),\n        ],\n      ),\n      body: SingleChildScrollView(\n        padding: const EdgeInsets.symmetric(horizontal: 24.0),\n        child: Column(\n          crossAxisAlignment: CrossAxisAlignment.start,\n          children: [\n            const SizedBox(height: 24.0),\n            // Search Bar\n            TextField(\n              decoration: InputDecoration(\n                hintText: 'Search for your next adventure',\n                hintStyle:\n                    textTheme.bodyLarge?.copyWith(color: Colors.grey[500]),\n                filled: true,\n                fillColor: colorScheme.surface, // White background\n                prefixIcon: Icon(Icons.search, color: Colors.grey[600]),\n                suffixIcon: Container(\n                  margin: const EdgeInsets.only(right: 8.0),\n                  padding: const EdgeInsets.all(8.0),\n                  decoration: BoxDecoration(\n                    color: primaryColor.withOpacity(0.1),\n                    borderRadius: BorderRadius.circular(10.0),\n                  ),\n                  child: Icon(Icons.location_on, color: primaryColor), // Changed icon to location_on\n                ),\n                border: OutlineInputBorder(\n                  borderRadius: BorderRadius.circular(15.0),\n                  borderSide: BorderSide.none,\n                ),\n                contentPadding: const EdgeInsets.symmetric(vertical: 16.0),\n              ),\n              style: textTheme.bodyLarge?.copyWith(color: Colors.grey[850]),\n            ),\n            const SizedBox(height: 24.0),\n            // Categories\n            Text(\n              'Explore Categories',\n              style: textTheme.titleMedium?.copyWith(\n                fontWeight: FontWeight.bold,\n                color: Colors.grey[800],\n              ),\n            ),\n            const SizedBox(height: 16.0),\n            SingleChildScrollView(\n              scrollDirection: Axis.horizontal,\n              child: Row(\n                children: [\n                  _CategoryChip(\n                    text: 'Hotel',\n                    isSelected: _selectedCategory == 'Hotel',\n                    onTap: () {\n                      setState(() {\n                        _selectedCategory = 'Hotel';\n                      });\n                    },\n                    primaryColor: primaryColor,\n                    textTheme: textTheme,\n                  ),\n                  const SizedBox(width: 12.0),\n                  _CategoryChip(\n                    text: 'Convention Center',\n                    isSelected: _selectedCategory == 'Convention Center',\n                    onTap: () {\n                      setState(() {\n                        _selectedCategory = 'Convention Center';\n                      });\n                    },\n                    primaryColor: primaryColor,\n                    textTheme: textTheme,\n                  ),\n                  const SizedBox(width: 12.0),\n                  _CategoryChip(\n                    text: 'Flights',\n                    isSelected: _selectedCategory == 'Flights',\n                    onTap: () {\n                      setState(() {\n                        _selectedCategory = 'Flights';\n                      });\n                    },\n                    primaryColor: primaryColor,\n                    textTheme: textTheme,\n                  ),\n                  const SizedBox(width: 12.0),\n                  _CategoryChip(\n                    text: 'Travel',\n                    isSelected: _selectedCategory == 'Travel',\n                    onTap: () {\n                      setState(() {\n                        _selectedCategory = 'Travel';\n                      });\n                    },\n                    primaryColor: primaryColor,\n                    textTheme: textTheme,\n                  ),\n                ],\n              ),\n            ),\n            const SizedBox(height: 24.0),\n            // Featured Destination\n            Text(\n              'Featured Destination',\n              style: textTheme.titleMedium?.copyWith(\n                fontWeight: FontWeight.bold,\n                color: Colors.grey[800],\n              ),\n            ),\n            const SizedBox(height: 16.0),\n            _HotelCard(\n              hotelName: 'The Westin Dhaka',\n              address: 'Gulshan 2, Dhaka',\n              pricePerDay: '\\$180',\n              rating: '4.8 (1.5k reviews)',\n              imageUrl: 'https://picsum.photos/400/250?random=featured',\n              textTheme: textTheme,\n              colorScheme: colorScheme,\n              onTap: () {\n                // TODO: Navigate to The Westin Dhaka details\n                print('Tapped The Westin Dhaka');\n              },\n            ),\n            const SizedBox(height: 24.0),\n            // Recently Booked\n            Text(\n              'Recently Booked',\n              style: textTheme.titleMedium?.copyWith(\n                fontWeight: FontWeight.bold,\n                color: Colors.grey[800],\n              ),\n            ),\n            const SizedBox(height: 16.0),\n            ListView.builder(\n              shrinkWrap: true,\n              physics: const NeverScrollableScrollPhysics(), // Disable internal scrolling\n              itemCount: 3, // Example: 3 recently booked items\n              itemBuilder: (context, index) {\n                return Padding(\n                  padding: const EdgeInsets.only(bottom: 16.0),\n                  child: _HotelCard(\n                    hotelName: 'Hotel Supreme - Booking ${index + 1}',\n                    address: '4140 Parker Rd. Allentown, Sylhet 3100',\n                    pricePerDay: '\\$126',\n                    rating: '4.9 (234 reviews)',\n                    imageUrl: 'https://picsum.photos/400/250?random=${index + 10}', // Different image for each\n                    textTheme: textTheme,\n                    colorScheme: colorScheme,\n                    onTap: () {\n                      // TODO: Navigate to Hotel Supreme details\n                      print('Tapped Recently Booked Hotel Supreme ${index + 1}');\n                    },\n                  ),\n                );\n              },\n            ),\n            const SizedBox(height: 80.0), // Padding for bottom navigation\n          ],\n        ),\n      ),\n      floatingActionButton: FloatingActionButton(\n        onPressed: () {\n          // TODO: Implement AI assistance action\n          print('AI Assistance button tapped!');\n        },\n        child: Icon(Icons.psychology_outlined), // AI icon\n        shape: RoundedRectangleBorder(\n          borderRadius: BorderRadius.circular(50.0), // Makes it a circular button\n        ),\n      ),\n      floatingActionButtonLocation: FloatingActionButtonLocation.endFloat, // Positions it in the bottom-right\n      bottomNavigationBar: _BottomNavigationBar(\n        primaryColor: primaryColor,\n        colorScheme: colorScheme,\n        textTheme: textTheme,\n      ),\n    );\n  }\n}\n\nclass _CategoryChip extends StatelessWidget {\n  final String text;\n  final bool isSelected;\n  final VoidCallback onTap;\n  final Color primaryColor;\n  final TextTheme textTheme;\n\n  const _CategoryChip({\n    required this.text,\n    required this.isSelected,\n    required this.onTap,\n    required this.primaryColor,\n    required this.textTheme,\n  });\n\n  @override\n  Widget build(BuildContext context) {\n    return GestureDetector(\n      onTap: onTap,\n      child: Container(\n        padding: const EdgeInsets.symmetric(horizontal: 20.0, vertical: 12.0),\n        decoration: BoxDecoration(\n          color: isSelected ? primaryColor : Colors.transparent,\n          borderRadius: BorderRadius.circular(10.0),\n          border: Border.all(color: Colors.grey[300]!, width: 1.0),\n        ),\n        child: Text(\n          text,\n          style: textTheme.bodyMedium?.copyWith(\n            color: isSelected ? Colors.white : Colors.grey[700],\n            fontWeight: isSelected ? FontWeight.bold : FontWeight.normal,\n          ),\n        ),\n      ),\n    );\n  }\n}\n\n// Re-using _HotelCard from explore_hotels_screen.dart\nclass _HotelCard extends StatefulWidget {\n  final String hotelName;\n  final String address;\n  final String pricePerDay;\n  final String rating;\n  final String imageUrl;\n  final TextTheme textTheme;\n  final ColorScheme colorScheme;\n  final VoidCallback onTap;\n\n  const _HotelCard({\n    required this.hotelName,\n    required this.address,\n    required this.pricePerDay,\n    required this.rating,\n    required this.imageUrl,\n    required this.textTheme,\n    required this.colorScheme,\n    required this.onTap,\n    super.key,\n  });\n\n  @override\n  State<_HotelCard> createState() => _HotelCardState();\n}\n\nclass _HotelCardState extends State<_HotelCard> {\n  bool _isFavorite = false;\n\n  @override\n  Widget build(BuildContext context) {\n    return Material(\n      color: widget.colorScheme.surface,\n      borderRadius: BorderRadius.circular(15.0),\n      child: InkWell(\n        borderRadius: BorderRadius.circular(15.0),\n        onTap: widget.onTap,\n        hoverColor: widget.colorScheme.primary.withOpacity(0.05),\n        splashColor: widget.colorScheme.primary.withOpacity(0.2),\n        child: Container(\n          padding: const EdgeInsets.all(16.0),\n          decoration: BoxDecoration(\n            borderRadius: BorderRadius.circular(15.0),\n          ),\n          child: Column(\n            crossAxisAlignment: CrossAxisAlignment.start,\n            children: [\n              Stack(\n                children: [\n                  ClipRRect(\n                    borderRadius: BorderRadius.circular(10.0),\n                    child: Image.network(\n                      widget.imageUrl,\n                      height: 220,\n                      width: double.infinity,\n                      fit: BoxFit.cover,\n                      errorBuilder: (context, error, stackTrace) => Container(\n                        height: 220,\n                        width: double.infinity,\n                        color: Colors.grey[300],\n                        child: Icon(\n                          Icons.broken_image,\n                          color: Colors.grey[600],\n                        ),\n                      ),\n                    ),\n                  ),\n                  Positioned(\n                    top: 8.0,\n                    right: 8.0,\n                    child: Container(\n                      decoration: BoxDecoration(\n                        color: Colors.white.withOpacity(0.8),\n                        shape: BoxShape.circle,\n                      ),\n                      child: IconButton(\n                        icon: Icon(\n                          _isFavorite ? Icons.favorite : Icons.favorite_border,\n                          color: _isFavorite ? Colors.red : Colors.grey[700],\n                        ),\n                        onPressed: () {\n                          setState(() {\n                            _isFavorite = !_isFavorite;\n                          });\n                          print(\n                            'Favorite toggled for ${widget.hotelName}: $_isFavorite',\n                          );\n                        },\n                      ),\n                    ),\n                  ),\n                ],\n              ),\n              const SizedBox(height: 16.0),\n              Row(\n                mainAxisAlignment: MainAxisAlignment.spaceBetween,\n                children: [\n                  Expanded(\n                    child: Column(\n                      crossAxisAlignment: CrossAxisAlignment.start,\n                      children: [\n                        Text(\n                          widget.hotelName,\n                          style: widget.textTheme.titleMedium?.copyWith(\n                            fontWeight: FontWeight.bold,\n                            color: Colors.grey[800],\n                          ),\n                          maxLines: 1,\n                          overflow: TextOverflow.ellipsis,\n                        ),\n                        const SizedBox(height: 4.0),\n                        Text(\n                          widget.address,\n                          style: widget.textTheme.bodySmall?.copyWith(\n                            color: Colors.grey[600],\n                          ),\n                          maxLines: 1,\n                          overflow: TextOverflow.ellipsis,\n                        ),\n                      ],\n                    ),\n                  ),\n                  Text(\n                    '${widget.pricePerDay}/Day',\n                    style: widget.textTheme.titleSmall?.copyWith(\n                      fontWeight: FontWeight.bold,\n                      color: Colors.grey[800],\n                    ),\n                  ),\n                ],\n              ),\n              const SizedBox(height: 8.0),\n              Row(\n                children: [\n                  Icon(Icons.star, color: Colors.amber, size: 16),\n                  const SizedBox(width: 4.0),\n                  Text(\n                    widget.rating,\n                    style: widget.textTheme.bodySmall?.copyWith(\n                      color: Colors.grey[700],\n                    ),\n                  ),\n                ],\n              ),\n            ],\n          ),\n        ),\n      ),\n    );\n  }\n}\n\nclass _BottomNavigationBar extends StatefulWidget {\n  final Color primaryColor;\n  final ColorScheme colorScheme;\n  final TextTheme textTheme;\n\n  const _BottomNavigationBar({\n    required this.primaryColor,\n    required this.colorScheme,\n    required this.textTheme,\n  });\n\n  @override\n  State<_BottomNavigationBar> createState() => _BottomNavigationBarState();\n}\n\nclass _BottomNavigationBarState extends State<_BottomNavigationBar> {\n  int _selectedIndex = 0; // Default to Home tab\n\n  void _onItemTapped(int index) {\n    setState(() {\n      _selectedIndex = index;\n    });\n    // TODO: Implement navigation for each tab\n    print('Tapped tab: $index');\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    return Container(\n      decoration: BoxDecoration(\n        color: widget.colorScheme.surface,\n        boxShadow: [\n          BoxShadow(\n            color: Colors.grey.withOpacity(0.1),\n            spreadRadius: 1,\n            blurRadius: 5,\n            offset: const Offset(0, -3), // Shadow above the bar\n          ),\n        ],\n      ),\n      child: BottomNavigationBar(\n        elevation: 0, // No shadow on the bar itself, using container shadow\n        backgroundColor: Colors.transparent, // Transparent to show container color\n        selectedItemColor: widget.primaryColor,\n        unselectedItemColor: Colors.grey[500],\n        showSelectedLabels: true,\n        showUnselectedLabels: true,\n        selectedLabelStyle: widget.textTheme.bodySmall?.copyWith(\n          fontWeight: FontWeight.bold,\n          color: widget.primaryColor,\n        ),\n        unselectedLabelStyle: widget.textTheme.bodySmall?.copyWith(\n          color: Colors.grey[500],\n        ),\n        type: BottomNavigationBarType.fixed, // Ensures all items are visible\n        currentIndex: _selectedIndex,\n        onTap: _onItemTapped,\n        items: const <BottomNavigationBarItem>[\n          BottomNavigationBarItem(\n            icon: Icon(Icons.home_outlined),\n            label: 'Home',\n          ),\n          BottomNavigationBarItem(\n            icon: Icon(Icons.book_online_outlined),\n            label: 'Bookings',\n          ),\n          BottomNavigationBarItem(\n            icon: Icon(Icons.favorite_border),\n            label: 'Favorites',\n          ),\n          BottomNavigationBarItem(\n            icon: Icon(Icons.person_outline),\n            label: 'Profile',\n          ),\n        ],\n      ),\n    );\n  }\n}\n```\n\n// File: lib\\screens\\hotel_details_screen.dart\n```dart\nimport 'package:flutter/material.dart';\nimport 'package:ai_travel_app_ui_kit/components/buttons/primary_text_button.dart'; // Assuming PrimaryTextButton is suitable for \"Reserve\"\n// TapGestureRecognizer to make parts of TextSpan tappable\nimport 'package:flutter/gestures.dart';\n\nclass HotelDetailsScreen extends StatefulWidget {\n  const HotelDetailsScreen({super.key});\n\n  @override\n  State<HotelDetailsScreen> createState() => _HotelDetailsScreenState();\n}\n\nclass _HotelDetailsScreenState extends State<HotelDetailsScreen> {\n  bool _isDescriptionExpanded = false;\n  String _selectedTab = 'Overview'; // Default selected tab\n  bool _isFavorited = false; // State for the heart icon\n\n  @override\n  Widget build(BuildContext context) {\n    final TextTheme textTheme = Theme.of(context).textTheme;\n    final Color primaryColor = Theme.of(context).primaryColor;\n    final ColorScheme colorScheme = Theme.of(context).colorScheme;\n\n    return Scaffold(\n      backgroundColor: Colors.white, // Light grey background\n      appBar: AppBar(\n        scrolledUnderElevation: 0,\n        backgroundColor:\n            Colors.transparent, // Transparent to show background behind\n        elevation: 0,\n        leading: IconButton(\n          icon: Icon(\n            Icons.arrow_back,\n            color: primaryColor,\n            size: 20,\n          ), // Back icon\n          onPressed: () {\n            Navigator.of(context).pop();\n          },\n        ),\n        actions: [\n          IconButton(\n            icon: Icon(\n              _isFavorited\n                  ? Icons.favorite\n                  : Icons.favorite_border, // Toggle icon based on state\n              color:\n                  _isFavorited\n                      ? Colors.red\n                      : primaryColor, // Red when favorited\n              size: 24,\n            ), // Heart icon\n            onPressed: () {\n              setState(() {\n                _isFavorited = !_isFavorited; // Toggle favorite state\n              });\n              print('Hotel favorited: $_isFavorited');\n            },\n          ),\n          const SizedBox(width: 8.0),\n        ],\n      ),\n      body: Stack(\n        children: [\n          SingleChildScrollView(\n            padding: const EdgeInsets.only(\n              bottom: 80,\n            ), // Space for the fixed bottom bar\n            child: Column(\n              crossAxisAlignment: CrossAxisAlignment.start,\n              children: [\n                Padding(\n                  padding: const EdgeInsets.symmetric(horizontal: 4),\n                  child: Center(\n                    child: ClipRRect(\n                      child: Image.network(\n                        'https://picsum.photos/400/250?random=hotelmain', // Main hotel image - changed to 400x250 for better filling\n                        height: 200,\n                        width: double.infinity, // Make image fill width\n                        fit: BoxFit.cover, // Ensure image covers the area\n                        errorBuilder:\n                            (context, error, stackTrace) => Container(\n                              height: 200,\n                              width: double.infinity,\n                              color: Colors.grey[300],\n                              child: Icon(\n                                Icons.image,\n                                size: 80,\n                                color: Colors.grey[600],\n                              ),\n                            ),\n                      ),\n                    ),\n                  ),\n                ),\n                const SizedBox(height: 24.0),\n                Padding(\n                  padding: const EdgeInsets.symmetric(horizontal: 16.0),\n                  child: Row(\n                    mainAxisAlignment: MainAxisAlignment.spaceBetween,\n                    children: [\n                      Expanded(\n                        // Use Expanded to give available space to text\n                        child: Column(\n                          crossAxisAlignment: CrossAxisAlignment.start,\n                          children: [\n                            Text(\n                              'Hotel Supreme',\n                              style: textTheme.headlineSmall?.copyWith(\n                                fontSize: 18,\n                                fontWeight: FontWeight.bold,\n                                color: Colors.grey[800],\n                              ),\n                              overflow:\n                                  TextOverflow\n                                      .ellipsis, // Add overflow handling\n                            ),\n                            const SizedBox(height: 4.0),\n                            Text(\n                              '4140 Parker Rd. Allentown, Sylhet 3100',\n                              style: textTheme.bodyMedium?.copyWith(\n                                color: Colors.grey[600],\n                              ),\n                              overflow:\n                                  TextOverflow\n                                      .ellipsis, // Add overflow handling\n                            ),\n                          ],\n                        ),\n                      ),\n                      const SizedBox(\n                        width: 16.0,\n                      ), // Add some space between text and share button\n                      Ink(\n                        decoration: BoxDecoration(\n                          color: Colors.grey[200],\n                          borderRadius: BorderRadius.circular(20.0),\n                        ),\n                        child: InkWell(\n                          borderRadius: BorderRadius.circular(20.0),\n                          onTap: () {\n                            print('Share tapped');\n                          },\n                          splashColor: primaryColor.withOpacity(0.2),\n                          hoverColor: primaryColor.withOpacity(0.1),\n                          child: Padding(\n                            padding: const EdgeInsets.symmetric(\n                              horizontal: 12.0,\n                              vertical: 8.0,\n                            ),\n                            child: Row(\n                              mainAxisSize: MainAxisSize.min,\n                              children: [\n                                Icon(\n                                  Icons.share,\n                                  size: 16,\n                                  color: Colors.grey[700],\n                                ),\n                                const SizedBox(width: 4.0),\n                                Text(\n                                  'Share',\n                                  style: textTheme.bodySmall?.copyWith(\n                                    color: Colors.grey[700],\n                                  ),\n                                ),\n                              ],\n                            ),\n                          ),\n                        ),\n                      ),\n                    ],\n                  ),\n                ),\n                const SizedBox(height: 24.0),\n                Padding(\n                  padding: const EdgeInsets.symmetric(horizontal: 16.0),\n                  child: Row(\n                    mainAxisAlignment: MainAxisAlignment.spaceAround,\n                    children: const [\n                      _HotelAttributeChip(icon: Icons.king_bed, text: '2 Beds'),\n                      _HotelAttributeChip(icon: Icons.bathtub, text: '1 Bath'),\n                      _HotelAttributeChip(icon: Icons.group, text: '2 Guests'),\n                    ],\n                  ),\n                ),\n                const SizedBox(height: 24.0),\n                Padding(\n                  padding: const EdgeInsets.symmetric(horizontal: 24.0),\n                  child: Row(\n                    mainAxisAlignment: MainAxisAlignment.spaceAround,\n                    children: [\n                      _TabButton(\n                        text: 'Overview',\n                        isSelected: _selectedTab == 'Overview',\n                        onTap: () => setState(() => _selectedTab = 'Overview'),\n                        primaryColor: primaryColor,\n                        textTheme: textTheme,\n                      ),\n                      _TabButton(\n                        text: 'Review',\n                        isSelected: _selectedTab == 'Review',\n                        onTap: () => setState(() => _selectedTab = 'Review'),\n                        primaryColor: primaryColor,\n                        textTheme: textTheme,\n                      ),\n                      _TabButton(\n                        text: 'Location',\n                        isSelected: _selectedTab == 'Location',\n                        onTap: () => setState(() => _selectedTab = 'Location'),\n                        primaryColor: primaryColor,\n                        textTheme: textTheme,\n                      ),\n                    ],\n                  ),\n                ),\n                const SizedBox(height: 24.0),\n                // Conditionally display content based on selected tab\n                _selectedTab == 'Overview'\n                    ? _OverviewContent(\n                      isDescriptionExpanded: _isDescriptionExpanded,\n                      primaryColor: primaryColor,\n                      textTheme: textTheme,\n                      onSeeMoreTap: () {\n                        setState(() {\n                          _isDescriptionExpanded = !_isDescriptionExpanded;\n                        });\n                      },\n                    )\n                    : _selectedTab == 'Review'\n                    ? _ReviewSectionContent(\n                      textTheme: textTheme,\n                      primaryColor: primaryColor,\n                      colorScheme: colorScheme,\n                    )\n                    : _LocationContent(textTheme: textTheme),\n                const SizedBox(height: 24.0), // Final padding before bottom bar\n              ],\n            ),\n          ),\n          // Fixed bottom bar\n          Positioned(\n            bottom: 0,\n            left: 0,\n            right: 0,\n            child: Container(\n              padding: const EdgeInsets.symmetric(\n                horizontal: 24.0,\n                vertical: 16.0,\n              ),\n              decoration: BoxDecoration(\n                color: colorScheme.surface, // White background\n                boxShadow: [\n                  BoxShadow(\n                    color: Colors.grey.withOpacity(0.1),\n                    spreadRadius: 1,\n                    blurRadius: 5,\n                    offset: const Offset(0, -3), // Shadow above the bar\n                  ),\n                ],\n              ),\n              child: Row(\n                children: [\n                  Expanded(\n                    // Use Expanded to give available space to text\n                    child: Column(\n                      crossAxisAlignment: CrossAxisAlignment.start,\n                      children: [\n                        Text(\n                          '27,200 BDT / Tax included',\n                          style: textTheme.titleLarge?.copyWith(\n                            fontSize: 18,\n                            fontWeight: FontWeight.bold,\n                            color: Colors.grey[800],\n                          ),\n                          overflow:\n                              TextOverflow.ellipsis, // Add overflow handling\n                          maxLines: 1,\n                        ),\n                        const SizedBox(height: 4.0),\n                        Text(\n                          '40% Money • 10 - 13 March',\n                          style: textTheme.bodySmall?.copyWith(\n                            fontSize: 12,\n                            color: Colors.grey[600],\n                          ),\n                          overflow:\n                              TextOverflow.ellipsis, // Add overflow handling\n                          maxLines: 1,\n                        ),\n                      ],\n                    ),\n                  ),\n                  const SizedBox(width: 16.0), // Space between text and button\n                  SizedBox(\n                    width: 120, // Fixed width for the button as per image\n                    // Fixed height for the button\n                    child: PrimaryTextButton(text: 'Reserve'),\n                  ),\n                ],\n              ),\n            ),\n          ),\n        ],\n      ),\n    );\n  }\n}\n\n// Separate widget for Overview content\nclass _OverviewContent extends StatelessWidget {\n  final bool isDescriptionExpanded;\n  final Color primaryColor;\n  final TextTheme textTheme;\n  final VoidCallback onSeeMoreTap;\n\n  const _OverviewContent({\n    required this.isDescriptionExpanded,\n    required this.primaryColor,\n    required this.textTheme,\n    required this.onSeeMoreTap,\n  });\n\n  @override\n  Widget build(BuildContext context) {\n    return Column(\n      crossAxisAlignment: CrossAxisAlignment.start,\n      children: [\n        Padding(\n          padding: const EdgeInsets.symmetric(horizontal: 24.0),\n          child: Column(\n            crossAxisAlignment: CrossAxisAlignment.start,\n            children: [\n              Text(\n                'Description',\n                style: textTheme.titleMedium?.copyWith(\n                  fontWeight: FontWeight.bold,\n                  color: Colors.grey[800],\n                ),\n              ),\n              const SizedBox(height: 8.0),\n              Text.rich(\n                TextSpan(\n                  text:\n                      'Featuring a garden, Hotel Supreme is located in Sylhet. With a fitness centre, the 3-star hotel has air-conditioned rooms with free WiFi. Each room features a flat-screen TV with cable channels and a private bathroom.',\n                  style: textTheme.bodyMedium?.copyWith(\n                    color: Colors.grey[600],\n                    height: 1.5,\n                  ),\n                  children: [\n                    if (!isDescriptionExpanded)\n                      TextSpan(\n                        text: '... ',\n                        style: textTheme.bodyMedium?.copyWith(\n                          color: Colors.grey[600],\n                        ),\n                      ),\n                    TextSpan(\n                      text: isDescriptionExpanded ? '' : 'See more',\n                      style: textTheme.bodyMedium?.copyWith(\n                        color: primaryColor,\n                        fontWeight: FontWeight.bold,\n                      ),\n                      recognizer: TapGestureRecognizer()..onTap = onSeeMoreTap,\n                    ),\n                  ],\n                ),\n                maxLines: isDescriptionExpanded ? null : 3,\n                overflow:\n                    isDescriptionExpanded\n                        ? TextOverflow.visible\n                        : TextOverflow.ellipsis,\n              ),\n            ],\n          ),\n        ),\n        const SizedBox(height: 24.0),\n        Padding(\n          padding: const EdgeInsets.symmetric(horizontal: 24.0),\n          child: Text(\n            'Amenities',\n            style: textTheme.titleMedium?.copyWith(\n              fontWeight: FontWeight.bold,\n              color: Colors.grey[800],\n            ),\n          ),\n        ),\n        const SizedBox(height: 16.0),\n        Padding(\n          padding: const EdgeInsets.symmetric(horizontal: 24.0),\n          child: GridView.count(\n            shrinkWrap: true,\n            physics: const NeverScrollableScrollPhysics(),\n            crossAxisCount: 2,\n            childAspectRatio: 4.0,\n            mainAxisSpacing: 16.0,\n            crossAxisSpacing: 16.0,\n            children: const [\n              _AmenityItem(icon: Icons.park_outlined, text: 'Outdoor Park'),\n              _AmenityItem(\n                icon: Icons.room_service_outlined,\n                text: 'Room Service',\n              ),\n              _AmenityItem(\n                icon: Icons.chair_alt_outlined,\n                text: 'Fully-furnished',\n              ),\n              _AmenityItem(icon: Icons.deck_outlined, text: 'Terrace'),\n              _AmenityItem(icon: Icons.bathtub_outlined, text: 'Bathtub'),\n              _AmenityItem(\n                icon: Icons.volume_mute_outlined,\n                text: 'Quiet surroundings',\n              ),\n            ],\n          ),\n        ),\n        const SizedBox(height: 24.0),\n        Padding(\n          padding: const EdgeInsets.symmetric(horizontal: 24.0),\n          child: Text(\n            'Gallery Images',\n            style: textTheme.titleMedium?.copyWith(\n              fontWeight: FontWeight.bold,\n              color: Colors.grey[800],\n            ),\n          ),\n        ),\n        const SizedBox(height: 16.0),\n        Padding(\n          padding: const EdgeInsets.symmetric(horizontal: 24.0),\n          child: Row(\n            children: [\n              Expanded(\n                flex: 2,\n                child: _GalleryImage(\n                  imageUrl: 'https://picsum.photos/400/300?random=1',\n                ),\n              ),\n              const SizedBox(width: 16.0),\n              Expanded(\n                flex: 1,\n                child: Column(\n                  children: [\n                    _GalleryImage(\n                      imageUrl: 'https://picsum.photos/200/150?random=2',\n                      height: 92,\n                    ),\n                    const SizedBox(height: 16.0),\n                    _GalleryImage(\n                      imageUrl: 'https://picsum.photos/200/150?random=3',\n                      height: 92,\n                    ),\n                  ],\n                ),\n              ),\n            ],\n          ),\n        ),\n      ],\n    );\n  }\n}\n\n// New widget for Review Section\nclass _ReviewSectionContent extends StatelessWidget {\n  final TextTheme textTheme;\n  final Color primaryColor;\n  final ColorScheme colorScheme;\n\n  const _ReviewSectionContent({\n    required this.textTheme,\n    required this.primaryColor,\n    required this.colorScheme,\n  });\n\n  @override\n  Widget build(BuildContext context) {\n    return Padding(\n      padding: const EdgeInsets.symmetric(horizontal: 24.0),\n      child: Column(\n        crossAxisAlignment: CrossAxisAlignment.start,\n        children: [\n          Row(\n            crossAxisAlignment: CrossAxisAlignment.start,\n            children: [\n              Column(\n                crossAxisAlignment: CrossAxisAlignment.start,\n                children: [\n                  Text(\n                    '4.9',\n                    style: textTheme.displayMedium?.copyWith(\n                      fontWeight: FontWeight.bold,\n                      color: Colors.grey[800],\n                      fontSize: 48,\n                    ),\n                  ),\n                  Text(\n                    'Excellent',\n                    style: textTheme.titleMedium?.copyWith(\n                      color: Colors.grey[700],\n                      fontWeight: FontWeight.bold,\n                    ),\n                  ),\n                  Text(\n                    '(240 Reviews)',\n                    style: textTheme.bodySmall?.copyWith(\n                      color: Colors.grey[600],\n                    ),\n                  ),\n                ],\n              ),\n              const SizedBox(width: 24.0),\n              Expanded(\n                child: Column(\n                  children: [\n                    _RatingBreakdownRow(\n                      category: 'Excellent',\n                      count: 167,\n                      total: 240,\n                      textTheme: textTheme,\n                      primaryColor: primaryColor,\n                    ),\n                    _RatingBreakdownRow(\n                      category: 'Very Good',\n                      count: 43,\n                      total: 240,\n                      textTheme: textTheme,\n                      primaryColor: primaryColor,\n                    ),\n                    _RatingBreakdownRow(\n                      category: 'Average',\n                      count: 14,\n                      total: 240,\n                      textTheme: textTheme,\n                      primaryColor: primaryColor,\n                    ),\n                    _RatingBreakdownRow(\n                      category: 'Poor',\n                      count: 10,\n                      total: 240,\n                      textTheme: textTheme,\n                      primaryColor: primaryColor,\n                    ),\n                    _RatingBreakdownRow(\n                      category: 'Terrible',\n                      count: 6,\n                      total: 240,\n                      textTheme: textTheme,\n                      primaryColor: primaryColor,\n                    ),\n                  ],\n                ),\n              ),\n            ],\n          ),\n          const SizedBox(height: 24.0),\n          Row(\n            mainAxisAlignment: MainAxisAlignment.spaceAround,\n            children: [\n              _CategoryRatingBar(\n                category: 'Cleanliness',\n                rating: 4.5,\n                primaryColor: primaryColor,\n                textTheme: textTheme,\n              ),\n              _CategoryRatingBar(\n                category: 'Location',\n                rating: 5.0,\n                primaryColor: primaryColor,\n                textTheme: textTheme,\n              ),\n              _CategoryRatingBar(\n                category: 'Service',\n                rating: 4.8,\n                primaryColor: primaryColor,\n                textTheme: textTheme,\n              ),\n            ],\n          ),\n          const SizedBox(height: 16.0),\n          Row(\n            mainAxisAlignment: MainAxisAlignment.spaceAround,\n            children: [\n              _CategoryRatingBar(\n                category: 'Value',\n                rating: 4.9,\n                primaryColor: primaryColor,\n                textTheme: textTheme,\n              ),\n              _CategoryRatingBar(\n                category: 'Sleep',\n                rating: 4.1,\n                primaryColor: primaryColor,\n                textTheme: textTheme,\n              ),\n              _CategoryRatingBar(\n                category: 'Room',\n                rating: 4.6,\n                primaryColor: primaryColor,\n                textTheme: textTheme,\n              ),\n            ],\n          ),\n          const SizedBox(height: 24.0),\n          Text(\n            'Reviews',\n            style: textTheme.titleMedium?.copyWith(\n              fontWeight: FontWeight.bold,\n              color: Colors.grey[800],\n            ),\n          ),\n          const SizedBox(height: 16.0),\n          SizedBox(\n            height: 200, // Height for horizontal review cards\n            child: ListView.builder(\n              scrollDirection: Axis.horizontal,\n              itemCount: 3, // Example reviews\n              itemBuilder: (context, index) {\n                return Padding(\n                  padding: EdgeInsets.only(right: index == 2 ? 0 : 16.0),\n                  child: _ReviewCard(\n                    reviewerName: 'Jim Majesky',\n                    date: '12/01/2025',\n                    reviewText:\n                        'I love how they broke down their KYC and onboarding. I enjoyed the user experience, and even the service experience while...',\n                    rating: 5,\n                    textTheme: textTheme,\n                    colorScheme: colorScheme,\n                  ),\n                );\n              },\n            ),\n          ),\n          const SizedBox(height: 24.0),\n          Center(\n            child: SizedBox(\n              width: double.infinity,\n              height: 50,\n              child: OutlinedButton.icon(\n                onPressed: () {\n                  // TODO: Implement write a review action\n                  print('Write a review tapped');\n                },\n                icon: Icon(Icons.edit_outlined, color: primaryColor),\n                label: Text(\n                  'Write a review',\n                  style: textTheme.bodyLarge?.copyWith(color: primaryColor),\n                ),\n                style: OutlinedButton.styleFrom(\n                  side: BorderSide(color: primaryColor),\n                  shape: RoundedRectangleBorder(\n                    borderRadius: BorderRadius.circular(\n                      60,\n                    ), // Set to 60 for pill shape\n                  ),\n                ),\n              ),\n            ),\n          ),\n        ],\n      ),\n    );\n  }\n}\n\n// New widget for Location section (can be expanded later)\nclass _LocationContent extends StatelessWidget {\n  final TextTheme textTheme;\n\n  const _LocationContent({required this.textTheme});\n\n  @override\n  Widget build(BuildContext context) {\n    return Padding(\n      padding: const EdgeInsets.symmetric(horizontal: 24.0),\n      child: Column(\n        crossAxisAlignment: CrossAxisAlignment.start,\n        children: [\n          Text(\n            'Location Details',\n            style: textTheme.titleMedium?.copyWith(\n              fontWeight: FontWeight.bold,\n              color: Colors.grey[800],\n            ),\n          ),\n          const SizedBox(height: 16.0),\n          // Placeholder for map or location details\n          Container(\n            height: 200,\n            width: double.infinity,\n            clipBehavior: Clip.hardEdge,\n            decoration: BoxDecoration(\n              color: Colors.grey[300],\n              borderRadius: BorderRadius.circular(12),\n            ),\n            child: Image.network(\n              'https://media.istockphoto.com/id/858885038/photo/airplane-fly-on-the-blue-painted-map.jpg?s=2048x2048&w=is&k=20&c=LRt0Jw0WNIrJkpJ8X5uorgCLtFJN0Px-nrw7l_Y6zh4=', // Example map image\n              fit: BoxFit.cover,\n              loadingBuilder: (context, child, loadingProgress) {\n                if (loadingProgress == null) return child;\n                return Center(\n                  child: CircularProgressIndicator(\n                    valueColor: AlwaysStoppedAnimation<Color>(\n                      Colors.grey[600]!,\n                    ),\n                  ),\n                );\n              },\n              errorBuilder: (context, error, stackTrace) {\n                return Center(\n                  child: Text(\n                    'Map Placeholder',\n                    style: textTheme.bodyLarge?.copyWith(\n                      color: Colors.grey[600],\n                    ),\n                  ),\n                );\n              },\n            ),\n          ),\n        ],\n      ),\n    );\n  }\n}\n\nclass _RatingBreakdownRow extends StatelessWidget {\n  final String category;\n  final int count;\n  final int total;\n  final TextTheme textTheme;\n  final Color primaryColor;\n\n  const _RatingBreakdownRow({\n    required this.category,\n    required this.count,\n    required this.total,\n    required this.textTheme,\n    required this.primaryColor,\n  });\n\n  @override\n  Widget build(BuildContext context) {\n    return Padding(\n      padding: const EdgeInsets.symmetric(vertical: 4.0),\n      child: Row(\n        children: [\n          SizedBox(\n            width: 80, // Fixed width for category text\n            child: Text(\n              category,\n              style: textTheme.bodySmall?.copyWith(color: Colors.grey[700]),\n            ),\n          ),\n          Expanded(\n            child: LinearProgressIndicator(\n              value: count / total,\n              backgroundColor: Colors.grey[300],\n              valueColor: AlwaysStoppedAnimation<Color>(primaryColor),\n              minHeight: 8.0,\n              borderRadius: BorderRadius.circular(\n                4.0,\n              ), // Rounded corners for progress bar\n            ),\n          ),\n          const SizedBox(width: 8.0),\n          Text(\n            '$count',\n            style: textTheme.bodySmall?.copyWith(color: Colors.grey[700]),\n          ),\n        ],\n      ),\n    );\n  }\n}\n\nclass _CategoryRatingBar extends StatelessWidget {\n  final String category;\n  final double rating;\n  final Color primaryColor;\n  final TextTheme textTheme;\n\n  const _CategoryRatingBar({\n    required this.category,\n    required this.rating,\n    required this.primaryColor,\n    required this.textTheme,\n  });\n\n  @override\n  Widget build(BuildContext context) {\n    return Column(\n      children: [\n        Text(\n          category,\n          style: textTheme.bodySmall?.copyWith(color: Colors.grey[700]),\n        ),\n        const SizedBox(height: 4.0),\n        SizedBox(\n          width: 80, // Fixed width for the bar\n          child: LinearProgressIndicator(\n            value: rating / 5.0, // Assuming max rating is 5\n            backgroundColor: Colors.grey[300],\n            valueColor: AlwaysStoppedAnimation<Color>(primaryColor),\n            minHeight: 8.0,\n            borderRadius: BorderRadius.circular(4.0),\n          ),\n        ),\n        const SizedBox(height: 4.0),\n        Text(\n          rating.toStringAsFixed(1),\n          style: textTheme.bodySmall?.copyWith(\n            fontWeight: FontWeight.bold,\n            color: Colors.grey[800],\n          ),\n        ),\n      ],\n    );\n  }\n}\n\nclass _ReviewCard extends StatelessWidget {\n  final String reviewerName;\n  final String date;\n  final String reviewText;\n  final int rating;\n  final TextTheme textTheme;\n  final ColorScheme colorScheme;\n\n  const _ReviewCard({\n    required this.reviewerName,\n    required this.date,\n    required this.reviewText,\n    required this.rating,\n    required this.textTheme,\n    required this.colorScheme,\n  });\n\n  @override\n  Widget build(BuildContext context) {\n    return Container(\n      width: 280, // Fixed width for review cards\n      padding: const EdgeInsets.all(16.0),\n      decoration: BoxDecoration(\n        color: colorScheme.surface, // White background\n        borderRadius: BorderRadius.circular(15.0),\n        boxShadow: [\n          BoxShadow(\n            color: Colors.grey.withOpacity(0.1),\n            spreadRadius: 1,\n            blurRadius: 5,\n            offset: const Offset(0, 3),\n          ),\n        ],\n      ),\n      child: Column(\n        crossAxisAlignment: CrossAxisAlignment.start,\n        children: [\n          Row(\n            children: [\n              CircleAvatar(\n                radius: 18,\n                backgroundColor: Colors.grey[200],\n                child: Icon(Icons.person, color: Colors.grey[600], size: 20),\n              ),\n              const SizedBox(width: 8.0),\n              Column(\n                crossAxisAlignment: CrossAxisAlignment.start,\n                children: [\n                  Text(\n                    reviewerName,\n                    style: textTheme.bodyLarge?.copyWith(\n                      fontWeight: FontWeight.bold,\n                      color: Colors.grey[800],\n                    ),\n                  ),\n                  Text(\n                    date,\n                    style: textTheme.bodySmall?.copyWith(\n                      color: Colors.grey[600],\n                    ),\n                  ),\n                ],\n              ),\n            ],\n          ),\n          const SizedBox(height: 8.0),\n          Row(\n            children: List.generate(5, (index) {\n              return Icon(\n                index < rating ? Icons.star : Icons.star_border,\n                color: index < rating ? Colors.amber : Colors.grey[400],\n                size: 16,\n              );\n            }),\n          ),\n          const SizedBox(height: 8.0),\n          Expanded(\n            child: Text(\n              reviewText,\n              style: textTheme.bodyMedium?.copyWith(color: Colors.grey[700]),\n              maxLines: 3,\n              overflow: TextOverflow.ellipsis,\n            ),\n          ),\n          const SizedBox(height: 8.0),\n          Row(\n            mainAxisAlignment: MainAxisAlignment.end,\n            children: [\n              Text(\n                'Was this review helpful?',\n                style: textTheme.bodySmall?.copyWith(color: Colors.grey[600]),\n              ),\n              const SizedBox(width: 8.0),\n              _SmallTextButton(\n                text: 'No',\n                onPressed: () {},\n                textTheme: textTheme,\n              ),\n              const SizedBox(width: 4.0),\n              _SmallTextButton(\n                text: 'Yes',\n                onPressed: () {},\n                textTheme: textTheme,\n              ),\n            ],\n          ),\n        ],\n      ),\n    );\n  }\n}\n\nclass _SmallTextButton extends StatelessWidget {\n  final String text;\n  final VoidCallback onPressed;\n  final TextTheme textTheme;\n\n  const _SmallTextButton({\n    required this.text,\n    required this.onPressed,\n    required this.textTheme,\n  });\n\n  @override\n  Widget build(BuildContext context) {\n    return TextButton(\n      onPressed: onPressed,\n      style: TextButton.styleFrom(\n        padding: const EdgeInsets.symmetric(horizontal: 12, vertical: 6),\n        minimumSize: Size.zero, // Remove default minimum size\n        tapTargetSize: MaterialTapTargetSize.shrinkWrap,\n        backgroundColor: Colors.grey[200],\n        shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(8.0)),\n      ),\n      child: Text(\n        text,\n        style: textTheme.bodySmall?.copyWith(color: Colors.grey[700]),\n      ),\n    );\n  }\n}\n\nclass _HotelAttributeChip extends StatelessWidget {\n  final IconData icon;\n  final String text;\n\n  const _HotelAttributeChip({required this.icon, required this.text});\n\n  @override\n  Widget build(BuildContext context) {\n    final TextTheme textTheme = Theme.of(context).textTheme;\n    return Container(\n      padding: const EdgeInsets.symmetric(horizontal: 16.0, vertical: 8.0),\n      decoration: BoxDecoration(\n        color: Colors.grey[200], // Light grey background\n        borderRadius: BorderRadius.circular(10.0),\n      ),\n      child: Row(\n        mainAxisSize: MainAxisSize.min,\n        children: [\n          Icon(icon, size: 18, color: Colors.grey[700]),\n          const SizedBox(width: 8.0),\n          Text(\n            text,\n            style: textTheme.bodyMedium?.copyWith(color: Colors.grey[700]),\n          ),\n        ],\n      ),\n    );\n  }\n}\n\nclass _TabButton extends StatelessWidget {\n  final String text;\n  final bool isSelected;\n  final VoidCallback onTap;\n  final Color primaryColor;\n  final TextTheme textTheme;\n\n  const _TabButton({\n    required this.text,\n    required this.isSelected,\n    required this.onTap,\n    required this.primaryColor,\n    required this.textTheme,\n  });\n\n  @override\n  Widget build(BuildContext context) {\n    return GestureDetector(\n      onTap: onTap,\n      child: Column(\n        children: [\n          Padding(\n            padding: const EdgeInsets.symmetric(\n              horizontal: 12.0,\n              vertical: 8.0,\n            ),\n            child: Text(\n              text,\n              style: textTheme.bodyLarge?.copyWith(\n                color: isSelected ? primaryColor : Colors.grey[700],\n                fontWeight: isSelected ? FontWeight.bold : FontWeight.normal,\n              ),\n            ),\n          ),\n          Container(\n            height: 3.0,\n            width: isSelected ? 40.0 : 0.0, // Underline for selected tab\n            decoration: BoxDecoration(\n              color: primaryColor,\n              borderRadius: BorderRadius.circular(2.0),\n            ),\n          ),\n        ],\n      ),\n    );\n  }\n}\n\nclass _AmenityItem extends StatelessWidget {\n  final IconData icon;\n  final String text;\n\n  const _AmenityItem({required this.icon, required this.text});\n\n  @override\n  Widget build(BuildContext context) {\n    final TextTheme textTheme = Theme.of(context).textTheme;\n    return Row(\n      mainAxisSize: MainAxisSize.min,\n      children: [\n        Icon(icon, size: 20, color: Colors.grey[700]),\n        const SizedBox(width: 8.0),\n        Expanded(\n          // Use Expanded to ensure text wraps within available space\n          child: Text(\n            text,\n            style: textTheme.bodyMedium?.copyWith(color: Colors.grey[700]),\n            overflow: TextOverflow.ellipsis,\n          ),\n        ),\n      ],\n    );\n  }\n}\n\nclass _GalleryImage extends StatelessWidget {\n  final String imageUrl;\n  final double height;\n\n  const _GalleryImage({\n    required this.imageUrl,\n    this.height = 200, // Default height for the main image\n  });\n\n  @override\n  Widget build(BuildContext context) {\n    return ClipRRect(\n      borderRadius: BorderRadius.circular(10.0),\n      child: Image.network(\n        imageUrl,\n        height: height,\n        width: double.infinity,\n        fit: BoxFit.cover,\n        errorBuilder:\n            (context, error, stackTrace) => Container(\n              height: height,\n              width: double.infinity,\n              color: Colors.grey[300],\n              child: Icon(\n                Icons.image,\n                size: height / 2,\n                color: Colors.grey[600],\n              ),\n            ),\n      ),\n    );\n  }\n}\n```\n\n// File: lib\\screens\\hotel_filter_screen.dart\n```dart\nimport 'package:flutter/material.dart';\nimport 'package:ai_travel_app_ui_kit/components/buttons/primary_text_button.dart';\n\nclass HotelFilterScreen extends StatefulWidget {\n  const HotelFilterScreen({super.key});\n\n  @override\n  State<HotelFilterScreen> createState() => _HotelFilterScreenState();\n}\n\nclass _HotelFilterScreenState extends State<HotelFilterScreen> {\n  String? _sortBySelection = 'Recommended';\n  RangeValues _priceRange = const RangeValues(10000, 20000);\n  final TextEditingController _fromPriceController = TextEditingController(\n    text: '10,000 BDT',\n  );\n  final TextEditingController _toPriceController = TextEditingController(\n    text: '20,000 BDT',\n  );\n\n  final Map<String, bool> _popularFilters = {\n    'Pool': true,\n    'Pet Friendly': false,\n    'Breakfast Included': true,\n    'Reserve Now, Pay Later': true,\n  };\n\n  int _selectedStarRating = 4; // Default to 4 stars\n\n  final Map<String, bool> _accessibilityOptions = {\n    'Elevator': true,\n    'Accessible Bathroom': false,\n    'In-room Services': true,\n    'Food Delivery Service Friendly': true,\n  };\n\n  int? _selectedBedrooms = 4; // Default to 4\n\n  final Map<String, bool> _travelersExperience = {\n    'Eco-certified': true,\n    'Business Friendly': false,\n    'Guest Friendly': false,\n  };\n\n  @override\n  void dispose() {\n    _fromPriceController.dispose();\n    _toPriceController.dispose();\n    super.dispose();\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    final TextTheme textTheme = Theme.of(context).textTheme;\n    final Color primaryColor = Theme.of(context).primaryColor;\n    final ColorScheme colorScheme = Theme.of(context).colorScheme;\n\n    return Scaffold(\n      backgroundColor: Colors.white, // Light grey background\n      appBar: AppBar(\n        scrolledUnderElevation: 0,\n        backgroundColor: Colors.transparent,\n        elevation: 0,\n        leading: IconButton(\n          icon: Icon(Icons.arrow_back, color: primaryColor, size: 20),\n          onPressed: () {\n            Navigator.of(context).pop();\n          },\n        ),\n        title: Text(\n          'Book a Hotel',\n          style: textTheme.titleLarge?.copyWith(\n            fontWeight: FontWeight.bold,\n            color: Colors.grey[800],\n            fontSize: 18,\n          ),\n        ),\n        centerTitle: true,\n        actions: [\n          TextButton(\n            onPressed: () {\n              // TODO: Implement clear filters action\n              setState(() {\n                _sortBySelection = 'Recommended';\n                _priceRange = const RangeValues(10000, 20000);\n                _fromPriceController.text = '10,000 BDT';\n                _toPriceController.text = '20,000 BDT';\n                _popularFilters.updateAll(\n                  (key, value) => false,\n                ); // Reset all to false\n                _popularFilters['Pool'] =\n                    true; // Set default active as per image\n                _popularFilters['Breakfast Included'] = true;\n                _popularFilters['Reserve Now, Pay Later'] = true;\n\n                _selectedStarRating = 4;\n                _accessibilityOptions.updateAll((key, value) => false);\n                _accessibilityOptions['Elevator'] = true;\n                _accessibilityOptions['In-room Services'] = true;\n                _accessibilityOptions['Food Delivery Service Friendly'] = true;\n\n                _selectedBedrooms = 4;\n                _travelersExperience.updateAll((key, value) => false);\n                _travelersExperience['Eco-certified'] = true;\n              });\n              print('Filters cleared');\n            },\n            child: Text(\n              'Clear',\n              style: textTheme.bodyLarge?.copyWith(color: Colors.grey[700]),\n            ),\n          ),\n          const SizedBox(width: 8.0),\n        ],\n      ),\n      body: Column(\n        children: [\n          Expanded(\n            child: ListView(\n              padding: const EdgeInsets.symmetric(horizontal: 24.0),\n              children: [\n                _buildSectionTitle(context, 'Sort By'),\n                ...['Recommended', 'Popularity', 'Rating', 'Nearby'].map((\n                  option,\n                ) {\n                  return RadioListTile<String>(\n                    title: Text(\n                      option,\n                      style: textTheme.bodyLarge?.copyWith(\n                        color: Colors.grey[700],\n                      ),\n                    ),\n                    value: option,\n                    groupValue: _sortBySelection,\n                    onChanged: (String? value) {\n                      setState(() {\n                        _sortBySelection = value;\n                      });\n                    },\n                    activeColor: primaryColor,\n                    controlAffinity: ListTileControlAffinity.trailing,\n                  );\n                }).toList(),\n                Divider(\n                  color: Colors.grey.withValues(alpha: 0.5),\n                  indent: 24,\n                  endIndent: 24,\n                  thickness: 0.5,\n                ),\n                _buildSectionTitle(context, 'Pricing'),\n                const SizedBox(height: 16.0),\n                // Removed Image.network for price graph as requested\n                RangeSlider(\n                  values: _priceRange,\n                  min: 0,\n                  max: 30000,\n                  divisions: 300,\n                  labels: RangeLabels(\n                    _priceRange.start.round().toString(),\n                    _priceRange.end.round().toString(),\n                  ),\n                  onChanged: (RangeValues values) {\n                    setState(() {\n                      _priceRange = values;\n                      _fromPriceController.text =\n                          '${values.start.round()},000 BDT';\n                      _toPriceController.text = '${values.end.round()},000 BDT';\n                    });\n                  },\n                  activeColor: primaryColor,\n                  inactiveColor: primaryColor.withOpacity(0.2),\n                ),\n                Padding(\n                  padding: const EdgeInsets.symmetric(horizontal: 16.0),\n                  child: Row(\n                    children: [\n                      Expanded(\n                        child: TextField(\n                          controller: _fromPriceController,\n                          readOnly: true,\n                          textAlign: TextAlign.center,\n                          decoration: InputDecoration(\n                            filled: true,\n                            fillColor: Colors.grey[200],\n                            border: OutlineInputBorder(\n                              borderRadius: BorderRadius.circular(10.0),\n                              borderSide: BorderSide.none,\n                            ),\n                            contentPadding: const EdgeInsets.symmetric(\n                              vertical: 12.0,\n                            ),\n                          ),\n                          style: textTheme.bodyMedium?.copyWith(\n                            color: Colors.grey[800],\n                          ),\n                        ),\n                      ),\n                      const SizedBox(width: 8.0),\n                      Text(\n                        '-',\n                        style: textTheme.bodyLarge?.copyWith(\n                          color: Colors.grey[700],\n                        ),\n                      ),\n                      const SizedBox(width: 8.0),\n                      Expanded(\n                        child: TextField(\n                          controller: _toPriceController,\n                          readOnly: true,\n                          textAlign: TextAlign.center,\n                          decoration: InputDecoration(\n                            filled: true,\n                            fillColor: Colors.grey[200],\n                            border: OutlineInputBorder(\n                              borderRadius: BorderRadius.circular(10.0),\n                              borderSide: BorderSide.none,\n                            ),\n                            contentPadding: const EdgeInsets.symmetric(\n                              vertical: 12.0,\n                            ),\n                          ),\n                          style: textTheme.bodyMedium?.copyWith(\n                            color: Colors.grey[800],\n                          ),\n                        ),\n                      ),\n                    ],\n                  ),\n                ),\n                Divider(\n                  color: Colors.grey.withValues(alpha: 0.5),\n                  thickness: 0.5,\n                  indent: 24,\n                  endIndent: 24,\n                  height: 40,\n                ),\n\n                _buildSectionTitle(context, 'Popular Filters'),\n                ..._popularFilters.keys.map((filter) {\n                  return CheckboxListTile(\n                    title: Text(\n                      filter,\n                      style: textTheme.bodyLarge?.copyWith(\n                        color: Colors.grey[700],\n                      ),\n                    ),\n                    value: _popularFilters[filter],\n                    onChanged: (bool? value) {\n                      setState(() {\n                        _popularFilters[filter] = value!;\n                      });\n                    },\n                    activeColor: primaryColor,\n                    checkColor: colorScheme.onPrimary,\n                    controlAffinity: ListTileControlAffinity.trailing,\n                  );\n                }).toList(),\n                Divider(\n                  color: Colors.grey.withValues(alpha: 0.5),\n                  indent: 24,\n                  endIndent: 24,\n                  thickness: 0.5,\n                ),\n\n                _buildSectionTitle(context, 'Filter by minimum star rating'),\n                const SizedBox(height: 16.0),\n                // Adjusted padding to prevent overflow\n                Padding(\n                  padding: const EdgeInsets.symmetric(\n                    horizontal: 0.0,\n                  ), // Reduced horizontal padding\n                  child: Row(\n                    mainAxisAlignment:\n                        MainAxisAlignment.spaceEvenly, // Distribute evenly\n                    children: List.generate(5, (index) {\n                      final star = index + 1;\n                      return GestureDetector(\n                        onTap: () {\n                          setState(() {\n                            _selectedStarRating = star;\n                          });\n                        },\n                        child: Container(\n                          padding: const EdgeInsets.symmetric(\n                            horizontal: 10.0,\n                            vertical: 10.0,\n                          ), // Reduced internal padding\n                          margin: const EdgeInsets.symmetric(\n                            horizontal: 2.0,\n                          ), // Reduced margin between items\n                          decoration: BoxDecoration(\n                            color:\n                                _selectedStarRating >= star\n                                    ? primaryColor.withOpacity(0.1)\n                                    : Colors.transparent,\n                            borderRadius: BorderRadius.circular(10.0),\n                            border: Border.all(\n                              color:\n                                  _selectedStarRating >= star\n                                      ? primaryColor.withOpacity(0.3)\n                                      : Colors.grey[300]!,\n                              width: 1.5,\n                            ),\n                          ),\n                          child: Row(\n                            mainAxisSize: MainAxisSize.min,\n                            children: [\n                              Text(\n                                '$star',\n                                style: textTheme.bodySmall?.copyWith(\n                                  color:\n                                      _selectedStarRating >= star\n                                          ? primaryColor\n                                          : Colors.grey[700],\n                                ),\n                              ),\n                              const SizedBox(width: 4.0),\n                              Icon(\n                                Icons.star,\n                                size: 16,\n                                color:\n                                    _selectedStarRating >= star\n                                        ? primaryColor\n                                        : Colors.grey[400],\n                              ),\n                            ],\n                          ),\n                        ),\n                      );\n                    }),\n                  ),\n                ),\n                Divider(\n                  color: Colors.grey.withValues(alpha: 0.5),\n                  thickness: 0.5,\n                  indent: 24,\n                  endIndent: 24,\n                  height: 40,\n                ),\n\n                _buildSectionTitle(context, 'Accessibility'),\n                ..._accessibilityOptions.keys.map((option) {\n                  return CheckboxListTile(\n                    title: Text(\n                      option,\n                      style: textTheme.bodyLarge?.copyWith(\n                        color: Colors.grey[700],\n                      ),\n                    ),\n                    value: _accessibilityOptions[option],\n                    onChanged: (bool? value) {\n                      setState(() {\n                        _accessibilityOptions[option] = value!;\n                      });\n                    },\n                    activeColor: primaryColor,\n                    checkColor: colorScheme.onPrimary,\n                    controlAffinity: ListTileControlAffinity.trailing,\n                  );\n                }).toList(),\n                Divider(\n                  color: Colors.grey.withValues(alpha: 0.5),\n                  indent: 24,\n                  endIndent: 24,\n                  thickness: 0.5,\n                ),\n\n                _buildSectionTitle(context, 'Number of Bedrooms'),\n                const SizedBox(height: 16.0),\n                Padding(\n                  padding: const EdgeInsets.only(right: 8.0),\n                  child: Center(\n                    child: Row(\n                      mainAxisSize: MainAxisSize.min,\n                      children: List.generate(5, (index) {\n                        final count = index + 1;\n                        final String displayText = count == 5 ? '5+' : '$count';\n                        return GestureDetector(\n                          onTap: () {\n                            setState(() {\n                              _selectedBedrooms = count;\n                            });\n                          },\n                          child: Container(\n                            padding: const EdgeInsets.symmetric(\n                              horizontal: 16.0,\n                              vertical: 10.0,\n                            ),\n                            margin: const EdgeInsets.symmetric(horizontal: 4.0),\n                            decoration: BoxDecoration(\n                              color:\n                                  _selectedBedrooms == count\n                                      ? primaryColor.withOpacity(0.1)\n                                      : Colors.transparent,\n                              borderRadius: BorderRadius.circular(10.0),\n                              border: Border.all(\n                                color:\n                                    _selectedBedrooms == count\n                                        ? primaryColor.withOpacity(0.3)\n                                        : Colors.grey[300]!,\n                                width: 1.5,\n                              ),\n                            ),\n                            child: Text(\n                              displayText,\n                              style: textTheme.bodySmall?.copyWith(\n                                color:\n                                    _selectedBedrooms == count\n                                        ? primaryColor\n                                        : Colors.grey[700],\n                              ),\n                            ),\n                          ),\n                        );\n                      }),\n                    ),\n                  ),\n                ),\n                Divider(\n                  color: Colors.grey.withValues(alpha: 0.5),\n                  thickness: 0.5,\n                  indent: 24,\n                  endIndent: 24,\n                  height: 40,\n                ),\n\n                _buildSectionTitle(context, 'Travelers experience'),\n                ..._travelersExperience.keys.map((option) {\n                  return CheckboxListTile(\n                    title: Text(\n                      option,\n                      style: textTheme.bodyLarge?.copyWith(\n                        color: Colors.grey[700],\n                      ),\n                    ),\n                    value: _travelersExperience[option],\n                    onChanged: (bool? value) {\n                      setState(() {\n                        _travelersExperience[option] = value!;\n                      });\n                    },\n                    activeColor: primaryColor,\n                    checkColor: colorScheme.onPrimary,\n                    controlAffinity: ListTileControlAffinity.trailing,\n                  );\n                }).toList(),\n                const SizedBox(height: 40.0), // Padding before button\n              ],\n            ),\n          ),\n          Padding(\n            padding: const EdgeInsets.symmetric(\n              horizontal: 24.0,\n              vertical: 24.0,\n            ),\n            child: PrimaryTextButton(\n              text: 'Done',\n              onPressed: () {\n                // TODO: Implement apply filters action\n                print('Filters applied');\n              },\n            ),\n          ),\n        ],\n      ),\n    );\n  }\n\n  Widget _buildSectionTitle(BuildContext context, String title) {\n    final TextTheme textTheme = Theme.of(context).textTheme;\n    return Padding(\n      padding: const EdgeInsets.only(top: 24.0, bottom: 16.0),\n      child: Text(\n        title,\n        style: textTheme.titleMedium?.copyWith(\n          fontWeight: FontWeight.w600,\n          color: Colors.grey[700],\n        ),\n      ),\n    );\n  }\n}\n```\n\n// File: lib\\screens\\onboarding_screen.dart\n```dart\nimport 'package:flutter/material.dart';\nimport 'package:font_awesome_flutter/font_awesome_flutter.dart';\nimport 'package:google_fonts/google_fonts.dart';\nimport 'package:ai_travel_app_ui_kit/components/buttons/social_auth_button.dart';\nimport 'package:ai_travel_app_ui_kit/components/buttons/primary_text_button.dart';\n\nclass OnboardingScreen extends StatelessWidget {\n  const OnboardingScreen({super.key});\n\n  @override\n  Widget build(BuildContext context) {\n    // Access theme for consistent styling\n    final TextTheme textTheme = Theme.of(context).textTheme;\n    final Color primaryColor = Theme.of(context).primaryColor;\n\n    return Scaffold(\n      backgroundColor:\n          Colors.white, // Using white as a base, similar to UIKit surface\n      body: Stack(\n        children: [\n          // \"Try Now\" button in the top right\n          Positioned(\n            top:\n                MediaQuery.of(context).padding.top +\n                16.0, // Adjust for safe area\n            right: 16.0,\n            child: TextButton(\n              onPressed: () {\n                // TODO: Implement navigation to next screen\n              },\n              child: Text(\n                'Try Now',\n                style: textTheme.bodyLarge?.copyWith(\n                  color: primaryColor,\n                ), // Assuming bodyLarge for \"Try Now\"\n              ),\n            ),\n          ),\n          Padding(\n            padding: const EdgeInsets.symmetric(horizontal: 24.0),\n            child: Column(\n              crossAxisAlignment: CrossAxisAlignment.start,\n              children: [\n                SizedBox(\n                  height: MediaQuery.of(context).size.height * 0.3,\n                ), // Placeholder for top spacing\n                Text(\n                  'Rethink\\nSimplicity',\n                  style: textTheme.displayMedium?.copyWith(\n                    fontWeight: FontWeight.bold,\n                    fontSize: 36, // Font size reduced to 36 as requested\n                    color: Colors.grey[800], // Darker grey for prominent text\n                  ),\n                ),\n                const SizedBox(height: 16.0),\n                Text(\n                  'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip.',\n                  style: textTheme.bodyLarge?.copyWith(\n                    color: Colors.grey[600], // Lighter grey for body text\n                    height: 1.5,\n                  ),\n                ),\n                const SizedBox(height: 24.0),\n                Row(\n                  mainAxisAlignment: MainAxisAlignment.start,\n                  children: List.generate(3, (index) {\n                    return Container(\n                      margin: const EdgeInsets.symmetric(horizontal: 4.0),\n                      width:\n                          index == 0 ? 20.0 : 8.0, // First dot slightly wider\n                      height: 8.0,\n                      decoration: BoxDecoration(\n                        color:\n                            index == 0\n                                ? primaryColor\n                                : Colors\n                                    .grey[300], // First dot is primary, others are lighter\n                        borderRadius: BorderRadius.circular(4.0),\n                      ),\n                    );\n                  }),\n                ),\n                const Spacer(), // Pushes content to the bottom\n                SocialAuthButton(\n                  type: ButtonType.apple,\n                  onPressed: () {\n                    // TODO: Implement Continue with Apple functionality\n                  },\n                ),\n                const SizedBox(height: 16.0),\n                PrimaryTextButton(\n                  text: 'Signup / Login with phone',\n                  onPressed: () {\n                    // TODO: Implement Signup / Login with phone functionality\n                  },\n                ),\n                const SizedBox(height: 40.0), // Bottom padding\n              ],\n            ),\n          ),\n        ],\n      ),\n    );\n  }\n}\n```\n\n// File: lib\\screens\\order_status_screen.dart\n```dart\nimport 'package:flutter/material.dart';\n\nclass OrderStatusScreen extends StatefulWidget {\n  const OrderStatusScreen({super.key});\n\n  @override\n  State<OrderStatusScreen> createState() => _OrderStatusScreenState();\n}\n\nclass _OrderStatusScreenState extends State<OrderStatusScreen> {\n  String _selectedCategory = 'Hotel'; // Default selected category\n\n  @override\n  Widget build(BuildContext context) {\n    final TextTheme textTheme = Theme.of(context).textTheme;\n    final Color primaryColor = Theme.of(context).primaryColor;\n    final ColorScheme colorScheme = Theme.of(context).colorScheme;\n\n    return Scaffold(\n      backgroundColor: Colors.grey[100], // Light grey background\n      appBar: AppBar(\n        scrolledUnderElevation: 0,\n        backgroundColor: Colors.grey[100],\n        elevation: 0,\n        leading: IconButton(\n          icon: Icon(Icons.arrow_back, color: primaryColor), // Set back icon color to primaryColor\n          onPressed: () {\n            Navigator.of(context).pop();\n          },\n        ),\n        title: Row( // Changed Column to Row\n          mainAxisSize: MainAxisSize.min, // Ensure row takes minimum space\n          children: [\n            Text(\n              'Order Status',\n              style: textTheme.titleLarge?.copyWith(\n                fontWeight: FontWeight.bold,\n                color: Colors.grey[800],\n                fontSize: 18,\n              ),\n            ),\n            const SizedBox(width: 8.0), // Add some spacing between texts\n            Text(\n              'Messages (1)',\n              style: textTheme.bodySmall?.copyWith(\n                color: Colors.grey[600],\n                fontSize: 12,\n              ),\n            ),\n          ],\n        ),\n        centerTitle: false, // Align title to start\n        actions: [\n          IconButton(\n            icon: Icon(Icons.search, color: primaryColor), // Set search icon color to primaryColor\n            onPressed: () {\n              // TODO: Implement search action\n            },\n          ),\n          const SizedBox(width: 8.0),\n        ],\n      ),\n      body: Column(\n        crossAxisAlignment: CrossAxisAlignment.start,\n        children: [\n          const SizedBox(height: 16.0),\n          Padding(\n            padding: const EdgeInsets.symmetric(horizontal: 24.0),\n            child: SingleChildScrollView( // Added SingleChildScrollView\n              scrollDirection: Axis.horizontal,\n              child: Row(\n                children: [\n                  _OrderCategoryTab(\n                    text: 'All',\n                    isSelected: _selectedCategory == 'All',\n                    onTap: () {\n                      setState(() {\n                        _selectedCategory = 'All';\n                      });\n                    },\n                    primaryColor: primaryColor,\n                    textTheme: textTheme,\n                  ),\n                  const SizedBox(width: 8.0),\n                  _OrderCategoryTab(\n                    text: 'Hotel',\n                    isSelected: _selectedCategory == 'Hotel',\n                    onTap: () {\n                      setState(() {\n                        _selectedCategory = 'Hotel';\n                      });\n                    },\n                    primaryColor: primaryColor,\n                    textTheme: textTheme,\n                  ),\n                  const SizedBox(width: 8.0),\n                  _OrderCategoryTab(\n                    text: 'Convention Center',\n                    isSelected: _selectedCategory == 'Convention Center',\n                    onTap: () {\n                      setState(() {\n                        _selectedCategory = 'Convention Center';\n                      });\n                    },\n                    primaryColor: primaryColor,\n                    textTheme: textTheme,\n                  ),\n                  const SizedBox(width: 8.0),\n                  _OrderCategoryTab(\n                    text: 'Flights',\n                    isSelected: _selectedCategory == 'Flights',\n                    onTap: () {\n                      setState(() {\n                        _selectedCategory = 'Flights';\n                      });\n                    },\n                    primaryColor: primaryColor,\n                    textTheme: textTheme,\n                  ),\n                ],\n              ),\n            ),\n          ),\n          const SizedBox(height: 24.0),\n          Padding(\n            padding: const EdgeInsets.symmetric(horizontal: 24.0),\n            child: Text(\n              'Hotel Booking',\n              style: textTheme.titleMedium?.copyWith(\n                fontWeight: FontWeight.bold,\n                color: Colors.grey[800],\n              ),\n            ),\n          ),\n          const SizedBox(height: 16.0),\n          Expanded(\n            child: ListView.builder(\n              padding: const EdgeInsets.symmetric(horizontal: 24.0),\n              itemCount: 3, // Example number of booking cards\n              itemBuilder: (context, index) {\n                return Padding(\n                  padding: const EdgeInsets.only(bottom: 16.0),\n                  child: _BookingStatusCard(\n                    roomType: 'Room Booking',\n                    roomName: 'Loft Style Guest suite with\\nPrivate Bathroom',\n                    rating: '4.9 (240)',\n                    status: 'Pending',\n                    textTheme: textTheme,\n                    colorScheme: colorScheme,\n                    // Use different image for each card\n                    imageUrl: 'https://picsum.photos/100/100?random=${index + 10}',\n                  ),\n                );\n              },\n            ),\n          ),\n        ],\n      ),\n    );\n  }\n}\n\nclass _OrderCategoryTab extends StatelessWidget {\n  final String text;\n  final bool isSelected;\n  final VoidCallback onTap;\n  final Color primaryColor;\n  final TextTheme textTheme;\n\n  const _OrderCategoryTab({\n    required this.text,\n    required this.isSelected,\n    required this.onTap,\n    required this.primaryColor,\n    required this.textTheme,\n  });\n\n  @override\n  Widget build(BuildContext context) {\n    return GestureDetector(\n      onTap: onTap,\n      child: Container(\n        padding: const EdgeInsets.symmetric(horizontal: 20.0, vertical: 12.0), // Reverted padding\n        decoration: BoxDecoration(\n          color: isSelected ? primaryColor : Colors.transparent, // Reverted inactive background\n          borderRadius: BorderRadius.circular(10.0), // Rounded corners\n          border: Border.all(color: Colors.grey[300]!, width: 1.0), // Reverted inactive border\n        ),\n        child: Text(\n          text,\n          style: textTheme.bodyMedium?.copyWith(\n            color: isSelected ? Colors.white : Colors.grey[700], // Reverted inactive text color\n            fontWeight: isSelected ? FontWeight.bold : FontWeight.normal,\n          ),\n        ),\n      ),\n    );\n  }\n}\n\nclass _BookingStatusCard extends StatelessWidget {\n  final String roomType;\n  final String roomName;\n  final String rating;\n  final String status;\n  final String imageUrl;\n  final TextTheme textTheme;\n  final ColorScheme colorScheme;\n\n  const _BookingStatusCard({\n    required this.roomType,\n    required this.roomName,\n    required this.rating,\n    required this.status,\n    required this.imageUrl,\n    required this.textTheme,\n    required this.colorScheme,\n  });\n\n  @override\n  Widget build(BuildContext context) {\n    return Container(\n      padding: const EdgeInsets.all(16.0),\n      decoration: BoxDecoration(\n        color: colorScheme.surface, // White background\n        borderRadius: BorderRadius.circular(15.0),\n        boxShadow: [\n          BoxShadow(\n            color: Colors.grey.withOpacity(0.1),\n            spreadRadius: 1,\n            blurRadius: 5,\n            offset: const Offset(0, 3),\n          ),\n        ],\n      ),\n      child: Row(\n        crossAxisAlignment: CrossAxisAlignment.start,\n        children: [\n          ClipRRect(\n            borderRadius: BorderRadius.circular(10.0),\n            child: Image.network(\n              imageUrl, // Placeholder image\n              height: 100, // Increased image height\n              width: 100, // Increased image width\n              fit: BoxFit.cover,\n              errorBuilder: (context, error, stackTrace) => Container(\n                height: 100, // Match increased height\n                width: 100, // Match increased width\n                color: Colors.grey[300],\n                child: Icon(Icons.image, color: Colors.grey[600], size: 50), // Adjust icon size accordingly\n              ),\n            ),\n          ),\n          const SizedBox(width: 16.0),\n          Expanded(\n            child: Column(\n              crossAxisAlignment: CrossAxisAlignment.start,\n              children: [\n                Text(\n                  roomType,\n                  style: textTheme.bodyMedium?.copyWith(color: Colors.grey[600]),\n                ),\n                const SizedBox(height: 4.0),\n                Text(\n                  roomName,\n                  style: textTheme.titleMedium?.copyWith(\n                    fontWeight: FontWeight.bold,\n                    color: Colors.grey[800],\n                  ),\n                  maxLines: 2,\n                  overflow: TextOverflow.ellipsis,\n                ),\n                const SizedBox(height: 4.0),\n                Row(\n                  children: [\n                    Icon(Icons.star, color: Colors.amber, size: 16),\n                    const SizedBox(width: 4.0),\n                    Text(\n                      rating,\n                      style: textTheme.bodySmall?.copyWith(color: Colors.grey[700]),\n                    ),\n                  ],\n                ),\n              ],\n            ),\n          ),\n          const SizedBox(width: 16.0), // Space before status tag\n          Align(\n            alignment: Alignment.topRight,\n            child: Container(\n              padding: const EdgeInsets.symmetric(horizontal: 12.0, vertical: 6.0),\n              decoration: BoxDecoration(\n                color: Colors.grey[200], // Light grey background for status\n                borderRadius: BorderRadius.circular(20.0),\n              ),\n              child: Text(\n                status,\n                style: textTheme.bodySmall?.copyWith(color: Colors.grey[700]),\n              ),\n            ),\n          ),\n        ],\n      ),\n    );\n  }\n}\n```\n\n// File: lib\\screens\\phone_input_screen.dart\n```dart\nimport 'package:flutter/material.dart';\nimport 'package:google_fonts/google_fonts.dart';\n\nclass PhoneInputScreen extends StatelessWidget {\n  const PhoneInputScreen({super.key});\n\n  @override\n  Widget build(BuildContext context) {\n    final TextTheme textTheme = Theme.of(context).textTheme;\n    final Color primaryColor = Theme.of(context).primaryColor;\n    final ColorScheme colorScheme = Theme.of(context).colorScheme;\n\n    return Scaffold(\n      backgroundColor: colorScheme.surface, // Use theme surface color, which is white\n      appBar: AppBar(\n        backgroundColor: colorScheme.surface, // AppBar background should match screen background\n        elevation: 0,\n        leading: IconButton(\n          icon: Icon(Icons.arrow_back_ios, color: primaryColor), // Back arrow icon matching UIKit style\n          onPressed: () {\n            // TODO: Implement navigation back\n          },\n        ),\n        actions: [\n          Padding(\n            padding: const EdgeInsets.only(right: 16.0),\n            child: TextButton(\n              onPressed: () {\n                // TODO: Implement \"Try Now\" action\n              },\n              child: Text(\n                'Try Now',\n                style: textTheme.bodyLarge?.copyWith(color: primaryColor),\n              ),\n            ),\n          ),\n        ],\n      ),\n      body: Padding(\n        padding: const EdgeInsets.symmetric(horizontal: 24.0),\n        child: Column(\n          crossAxisAlignment: CrossAxisAlignment.start,\n          children: [\n            const SizedBox(height: 40.0), // Spacing from app bar\n            Text(\n              'Hello,\\nwhat\\'s your phone number?',\n              style: textTheme.headlineMedium?.copyWith(\n                fontWeight: FontWeight.bold,\n                color: Colors.grey[850], // Darker text for prominence, consistent with UIKit\n              ),\n            ),\n            const SizedBox(height: 8.0),\n            Text(\n              'Customer Messages may be sent within iOS\\nNotifications or visa SMS.',\n              style: textTheme.bodyMedium?.copyWith(\n                color: Colors.grey[600], // Lighter text for subtitle, consistent with UIKit\n              ),\n            ),\n            const SizedBox(height: 32.0),\n            TextField(\n              keyboardType: TextInputType.phone,\n              decoration: InputDecoration(\n                hintText: 'Number?',\n                hintStyle: textTheme.bodyLarge?.copyWith(color: Colors.grey[500]),\n                filled: true,\n                fillColor: Colors.grey[200], // Light grey background for the input field, matching image\n                border: OutlineInputBorder(\n                  borderRadius: BorderRadius.circular(10.0),\n                  borderSide: BorderSide.none, // No border line, matching image\n                ),\n                contentPadding: const EdgeInsets.symmetric(horizontal: 16.0, vertical: 16.0),\n              ),\n              style: textTheme.bodyLarge?.copyWith(color: Colors.grey[850]),\n            ),\n            const Spacer(), // Pushes content to the bottom\n            SizedBox(\n              width: double.infinity,\n              height: 50.0, // Standard button height, consistent with UIKit\n              child: FilledButton(\n                onPressed: () {\n                  // TODO: Implement continue action\n                },\n                style: FilledButton.styleFrom(\n                  backgroundColor: primaryColor,\n                  shape: RoundedRectangleBorder(\n                    borderRadius: BorderRadius.circular(10.0), // Rounded corners for the button, consistent with UIKit\n                  ),\n                ),\n                child: Text(\n                  'Continue',\n                  style: textTheme.bodyLarge?.copyWith(\n                    color: Colors.white,\n                    fontWeight: FontWeight.bold,\n                  ),\n                ),\n              ),\n            ),\n            const SizedBox(height: 20.0),\n            Align(\n              alignment: Alignment.center,\n              child: RichText(\n                textAlign: TextAlign.center,\n                text: TextSpan(\n                  style: textTheme.bodySmall?.copyWith(color: Colors.grey[600], height: 1.5),\n                  children: [\n                    const TextSpan(\n                      text: 'By continuing, you confirm you\\'ve read and agree to our\\n',\n                    ),\n                    TextSpan(\n                      text: 'Terms of Service',\n                      style: textTheme.bodySmall?.copyWith(\n                        color: Colors.grey[800], // Darker for bolded parts, matching image\n                        fontWeight: FontWeight.bold,\n                      ),\n                    ),\n                    const TextSpan(\n                      text: ' and ',\n                    ),\n                    TextSpan(\n                      text: 'Privacy Notice',\n                      style: textTheme.bodySmall?.copyWith(\n                        color: Colors.grey[800], // Darker for bolded parts, matching image\n                        fontWeight: FontWeight.bold,\n                      ),\n                    ),\n                    const TextSpan(\n                      text: ' on how we collect, use,\\ndisclose, and process your personal data.',\n                    ),\n                  ],\n                ),\n              ),\n            ),\n            const SizedBox(height: 40.0), // Bottom padding\n          ],\n        ),\n      ),\n    );\n  }\n}\n```\n\n// File: lib\\screens\\profile_screen.dart\n```dart\nimport 'package:flutter/material.dart';\nimport 'package:ai_travel_app_ui_kit/components/buttons/primary_text_button.dart';\n\nclass ProfileScreen extends StatefulWidget {\n  const ProfileScreen({super.key});\n\n  @override\n  State<ProfileScreen> createState() => _ProfileScreenState();\n}\n\nclass _ProfileScreenState extends State<ProfileScreen> {\n  final FocusNode _nameFocusNode = FocusNode();\n  final FocusNode _mobileNumberFocusNode = FocusNode();\n  final FocusNode _locationFocusNode = FocusNode();\n\n  Color? _nameFillColor;\n  Color? _mobileNumberFillColor;\n  Color? _locationFillColor;\n\n  @override\n  void initState() {\n    super.initState();\n    _nameFocusNode.addListener(_updateNameFillColor);\n    _mobileNumberFocusNode.addListener(_updateMobileNumberFillColor);\n    _locationFocusNode.addListener(_updateLocationFillColor);\n  }\n\n  @override\n  void dispose() {\n    _nameFocusNode.removeListener(_updateNameFillColor);\n    _nameFocusNode.dispose();\n    _mobileNumberFocusNode.removeListener(_updateMobileNumberFillColor);\n    _mobileNumberFocusNode.dispose();\n    _locationFocusNode.removeListener(_updateLocationFillColor);\n    _locationFocusNode.dispose();\n    super.dispose();\n  }\n\n  void _updateNameFillColor() {\n    setState(() {\n      _nameFillColor = _nameFocusNode.hasFocus\n          ? Theme.of(context).primaryColor.withOpacity(0.05)\n          : Theme.of(context).colorScheme.surface;\n    });\n  }\n\n  void _updateMobileNumberFillColor() {\n    setState(() {\n      _mobileNumberFillColor = _mobileNumberFocusNode.hasFocus\n          ? Theme.of(context).primaryColor.withOpacity(0.05)\n          : Theme.of(context).colorScheme.surface;\n    });\n  }\n\n  void _updateLocationFillColor() {\n    setState(() {\n      _locationFillColor = _locationFocusNode.hasFocus\n          ? Theme.of(context).primaryColor.withOpacity(0.05)\n          : Theme.of(context).colorScheme.surface;\n    });\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    final TextTheme textTheme = Theme.of(context).textTheme;\n    final Color primaryColor = Theme.of(context).primaryColor;\n    final ColorScheme colorScheme = Theme.of(context).colorScheme;\n\n    // Initialize default fill colors\n    _nameFillColor ??= colorScheme.surface;\n    _mobileNumberFillColor ??= colorScheme.surface;\n    _locationFillColor ??= colorScheme.surface;\n\n    return Scaffold(\n      backgroundColor: Colors.grey[100], // Light grey background\n      appBar: AppBar(\n        scrolledUnderElevation: 0,\n        backgroundColor: Colors.grey[100],\n        elevation: 0,\n        leading: IconButton(\n          icon: Icon(Icons.arrow_back, color: primaryColor), // Set back icon color to primaryColor\n          onPressed: () {\n            Navigator.of(context).pop();\n          },\n        ),\n        title: Text(\n          'Profile',\n          style: textTheme.titleLarge?.copyWith(\n            fontWeight: FontWeight.bold,\n            color: Colors.grey[800],\n            fontSize: 18,\n          ),\n        ),\n        centerTitle: true,\n        actions: [\n          IconButton(\n            icon: Icon(Icons.settings_outlined, color: primaryColor), // Set settings icon color to primaryColor\n            onPressed: () {\n              // TODO: Implement settings action\n            },\n          ),\n          const SizedBox(width: 8.0),\n        ],\n      ),\n      body: SingleChildScrollView(\n        padding: const EdgeInsets.symmetric(horizontal: 24.0),\n        child: Column(\n          crossAxisAlignment: CrossAxisAlignment.start,\n          children: [\n            const SizedBox(height: 16.0),\n            // User Summary\n            Container(\n              padding: const EdgeInsets.all(16.0),\n              decoration: BoxDecoration(\n                color: colorScheme.surface,\n                borderRadius: BorderRadius.circular(15.0),\n                boxShadow: [\n                  BoxShadow(\n                    color: Colors.grey.withOpacity(0.1),\n                    spreadRadius: 1,\n                    blurRadius: 5,\n                    offset: const Offset(0, 3),\n                  ),\n                ],\n              ),\n              child: Row(\n                children: [\n                  CircleAvatar(\n                    radius: 30,\n                    backgroundColor: Colors.grey[300],\n                    backgroundImage: NetworkImage(\n                      'https://picsum.photos/200/200?random=profile',\n                    ),\n                  ),\n                  const SizedBox(width: 16.0),\n                  Column(\n                    crossAxisAlignment: CrossAxisAlignment.start,\n                    children: [\n                      Text(\n                        'Jane Cooper',\n                        style: textTheme.titleMedium?.copyWith(\n                          fontWeight: FontWeight.bold,\n                          color: Colors.grey[800],\n                        ),\n                      ),\n                      Text(\n                        '+01618 411555',\n                        style: textTheme.bodyMedium?.copyWith(\n                          color: Colors.grey[600],\n                        ),\n                      ),\n                    ],\n                  ),\n                ],\n              ),\n            ),\n            const SizedBox(height: 24.0),\n            // Prioritized Service Promo\n            _PromoCard(\n              textTheme: textTheme,\n              primaryColor: primaryColor,\n              colorScheme: colorScheme,\n            ),\n            const SizedBox(height: 24.0),\n            // Profile Information Inputs\n            _ProfileSectionTitle(title: 'Name', textTheme: textTheme),\n            TextField(\n              focusNode: _nameFocusNode,\n              controller: TextEditingController(text: 'Jane Cooper'),\n              decoration: InputDecoration(\n                filled: true,\n                fillColor: _nameFillColor, // Dynamic fill color\n                border: OutlineInputBorder(\n                  borderRadius: BorderRadius.circular(10.0),\n                  borderSide: BorderSide.none,\n                ),\n                contentPadding: const EdgeInsets.symmetric(\n                  horizontal: 16.0,\n                  vertical: 16.0,\n                ),\n              ),\n              style: textTheme.bodyLarge?.copyWith(color: Colors.grey[850]),\n            ),\n            const SizedBox(height: 16.0),\n            _ProfileSectionTitle(title: 'Mobile Number', textTheme: textTheme),\n            Row(\n              children: [\n                Container(\n                  padding: const EdgeInsets.symmetric(horizontal: 12, vertical: 16),\n                  decoration: BoxDecoration(\n                    color: colorScheme.surface,\n                    borderRadius: BorderRadius.circular(10.0),\n                  ),\n                  child: Row(\n                    children: [\n                      Text(\n                        '+880',\n                        style: textTheme.bodyLarge?.copyWith(color: Colors.grey[850]),\n                      ),\n                      Icon(Icons.keyboard_arrow_down, color: Colors.grey[600]),\n                    ],\n                  ),\n                ),\n                const SizedBox(width: 8.0),\n                Expanded(\n                  child: TextField(\n                    focusNode: _mobileNumberFocusNode,\n                    controller: TextEditingController(text: '1616 - 411666'),\n                    decoration: InputDecoration(\n                      filled: true,\n                      fillColor: _mobileNumberFillColor, // Dynamic fill color\n                      border: OutlineInputBorder(\n                        borderRadius: BorderRadius.circular(10.0),\n                        borderSide: BorderSide.none,\n                      ),\n                      contentPadding: const EdgeInsets.symmetric(\n                        horizontal: 16.0,\n                        vertical: 16.0,\n                      ),\n                    ),\n                    style: textTheme.bodyLarge?.copyWith(color: Colors.grey[850]),\n                  ),\n                ),\n              ],\n            ),\n            const SizedBox(height: 16.0),\n            _ProfileSectionTitle(title: 'Location', textTheme: textTheme),\n            TextField(\n              focusNode: _locationFocusNode,\n              controller: TextEditingController(text: 'Current Location'),\n              decoration: InputDecoration(\n                filled: true,\n                fillColor: _locationFillColor, // Dynamic fill color\n                prefixIcon: Icon(Icons.location_on, color: Colors.grey[600]),\n                border: OutlineInputBorder(\n                  borderRadius: BorderRadius.circular(10.0),\n                  borderSide: BorderSide.none,\n                ),\n                contentPadding: const EdgeInsets.symmetric(\n                  horizontal: 16.0,\n                  vertical: 16.0,\n                ),\n              ),\n              style: textTheme.bodyLarge?.copyWith(color: Colors.grey[850]),\n            ),\n            const SizedBox(height: 40.0),\n            // Explore Your Features\n            Text(\n              'Explore Your features',\n              style: textTheme.titleMedium?.copyWith(\n                fontWeight: FontWeight.bold,\n                color: Colors.grey[800],\n              ),\n            ),\n            const SizedBox(height: 24.0),\n            _BenefitItem(\n              icon: Icons.lightbulb_outline,\n              title: 'Rethink simplicity',\n              description: 'Travel planning, simplified. No clutter. No confusion. Just smart, seamless experiences—powered by AI, designed for ease.',\n              textTheme: textTheme,\n            ),\n            const SizedBox(height: 24.0),\n            _BenefitItem(\n              icon: Icons.block,\n              title: 'No ads, Not now, Not ever',\n              description: 'Enjoy a completely ad-free experience—focused on your journey, not distractions.',\n              textTheme: textTheme,\n            ),\n            const SizedBox(height: 24.0),\n            _BenefitItem(\n              icon: Icons.psychology_outlined,\n              title: 'We belive in App AI Technology',\n              description: 'Harnessing the power of AI to create smarter, simpler travel experiences for you.',\n              textTheme: textTheme,\n            ),\n            const SizedBox(height: 40.0),\n            Center(\n              child: SizedBox(\n                width: double.infinity,\n                height: 50,\n                child: PrimaryTextButton(\n                  text: 'Learn more about Travel AI App',\n                  onPressed: () {\n                    // TODO: Implement Learn More action\n                    print('Learn more about Travel AI App tapped');\n                  },\n                ),\n              ),\n            ),\n            const SizedBox(height: 40.0),\n          ],\n        ),\n      ),\n    );\n  }\n}\n\nclass _ProfileSectionTitle extends StatelessWidget {\n  final String title;\n  final TextTheme textTheme;\n\n  const _ProfileSectionTitle({\n    required this.title,\n    required this.textTheme,\n  });\n\n  @override\n  Widget build(BuildContext context) {\n    return Padding(\n      padding: const EdgeInsets.only(bottom: 8.0),\n      child: Text(\n        title,\n        style: textTheme.bodyLarge?.copyWith(\n          fontWeight: FontWeight.bold,\n          color: Colors.grey[800],\n        ),\n      ),\n    );\n  }\n}\n\nclass _PromoCard extends StatelessWidget {\n  final TextTheme textTheme;\n  final Color primaryColor;\n  final ColorScheme colorScheme;\n\n  const _PromoCard({\n    required this.textTheme,\n    required this.primaryColor,\n    required this.colorScheme,\n  });\n\n  @override\n  Widget build(BuildContext context) {\n    return Container(\n      padding: const EdgeInsets.all(16.0),\n      decoration: BoxDecoration(\n        color: primaryColor.withOpacity(0.1), // Light primary color background\n        borderRadius: BorderRadius.circular(15.0),\n        boxShadow: [\n          BoxShadow(\n            color: Colors.grey.withOpacity(0.05),\n            spreadRadius: 1,\n            blurRadius: 3,\n            offset: const Offset(0, 2),\n          ),\n        ],\n      ),\n      child: Row(\n        children: [\n          Expanded(\n            child: Column(\n              crossAxisAlignment: CrossAxisAlignment.start,\n              children: [\n                Text(\n                  'Want to get free Prioritized service?',\n                  style: textTheme.titleMedium?.copyWith(\n                    fontWeight: FontWeight.bold,\n                    color: Colors.grey[800],\n                  ),\n                ),\n                const SizedBox(height: 8.0),\n                SizedBox(\n                  width: 120, // Constrain button width\n                  height: 40, // Standard button height\n                  child: FilledButton(\n                    onPressed: () {\n                      // TODO: Implement View Details\n                      print('View Details tapped');\n                    },\n                    style: FilledButton.styleFrom(\n                      backgroundColor: primaryColor, // Set to primaryColor\n                      foregroundColor: Colors.white, // Set text color to white\n                      shape: RoundedRectangleBorder(\n                        borderRadius: BorderRadius.circular(60), // Match PrimaryTextButton\n                      ),\n                      padding: const EdgeInsets.symmetric(horizontal: 16),\n                    ),\n                    child: Text(\n                      'View Details',\n                      style: textTheme.bodyMedium?.copyWith(\n                        fontWeight: FontWeight.bold,\n                        color: Colors.white, // Ensure text is white\n                      ),\n                    ),\n                  ),\n                ),\n              ],\n            ),\n          ),\n          const SizedBox(width: 16.0),\n          ClipRRect(\n            borderRadius: BorderRadius.circular(10.0),\n            child: Image.network(\n              'https://picsum.photos/100/100?random=promo', // Placeholder image\n              height: 80,\n              width: 80,\n              fit: BoxFit.cover,\n              errorBuilder: (context, error, stackTrace) => Container(\n                height: 80,\n                width: 80,\n                color: Colors.grey[300],\n                child: Icon(Icons.image, color: Colors.grey[600]),\n              ),\n            ),\n          ),\n        ],\n      ),\n    );\n  }\n}\n\nclass _BenefitItem extends StatelessWidget {\n  final IconData icon;\n  final String title;\n  final String description;\n  final TextTheme textTheme;\n\n  const _BenefitItem({\n    required this.icon,\n    required this.title,\n    required this.description,\n    required this.textTheme,\n  });\n\n  @override\n  Widget build(BuildContext context) {\n    return Row(\n      crossAxisAlignment: CrossAxisAlignment.start,\n      children: [\n        Icon(icon, color: Colors.grey[700], size: 28),\n        const SizedBox(width: 16.0),\n        Expanded(\n          child: Column(\n            crossAxisAlignment: CrossAxisAlignment.start,\n            children: [\n              Text(\n                title,\n                style: textTheme.titleMedium?.copyWith(\n                  fontWeight: FontWeight.bold,\n                  color: Colors.grey[800],\n                ),\n              ),\n              const SizedBox(height: 4.0),\n              Text(\n                description,\n                style: textTheme.bodyMedium?.copyWith(color: Colors.grey[600]),\n              ),\n            ],\n          ),\n        ),\n      ],\n    );\n  }\n}\n```\n\n// File: lib\\screens\\reservation_details_screen.dart\n```dart\nimport 'package:flutter/gestures.dart';\nimport 'package:flutter/material.dart';\nimport 'package:ai_travel_app_ui_kit/components/buttons/primary_text_button.dart';\n\nclass ReservationDetailsScreen extends StatefulWidget {\n  const ReservationDetailsScreen({super.key});\n\n  @override\n  State<ReservationDetailsScreen> createState() =>\n      _ReservationDetailsScreenState();\n}\n\nclass _ReservationDetailsScreenState extends State<ReservationDetailsScreen> {\n  String? _selectedPaymentOption = 'Pay part now, part later'; // Default selection\n  String? _selectedPaymentMethod = 'Google Pay - **** **** 4709'; // Default selection\n\n  @override\n  Widget build(BuildContext context) {\n    final TextTheme textTheme = Theme.of(context).textTheme;\n    final Color primaryColor = Theme.of(context).primaryColor;\n    final ColorScheme colorScheme = Theme.of(context).colorScheme;\n\n    return Scaffold(\n      backgroundColor: Colors.grey[100], // Light grey background\n      appBar: AppBar(\n        scrolledUnderElevation: 0,\n        backgroundColor: Colors.grey[100],\n        elevation: 0,\n        leading: IconButton(\n          icon: Icon(Icons.close, color: primaryColor), // Set close icon color to primaryColor\n          onPressed: () {\n            Navigator.of(context).pop();\n          },\n        ),\n        title: Text(\n          'Request to book',\n          style: textTheme.titleLarge?.copyWith(\n            fontWeight: FontWeight.bold,\n            color: Colors.grey[800],\n            fontSize: 18,\n          ),\n        ),\n        centerTitle: true,\n      ),\n      body: Column(\n        children: [\n          Expanded(\n            child: ListView(\n              padding: const EdgeInsets.symmetric(horizontal: 24.0),\n              children: [\n                _BookingSummaryCard(\n                  textTheme: textTheme,\n                  colorScheme: colorScheme,\n                ),\n                const SizedBox(height: 16.0),\n                // --- New: Required for your trip section ---\n                _SectionContainer(\n                  textTheme: textTheme,\n                  colorScheme: colorScheme,\n                  title: 'Required for your trip',\n                  children: [\n                    _RequiredInfoRow(\n                      label: 'Message the host',\n                      hintText: 'Hi Brother,\\nCheck all My files!',\n                      onAddTap: () {},\n                      textTheme: textTheme,\n                    ),\n                    _RequiredInfoRow(\n                      label: 'Phone Number',\n                      hintText: '01616 411555',\n                      onAddTap: () {},\n                      textTheme: textTheme,\n                    ),\n                    _RequiredInfoRow(\n                      label: 'Profile Photo',\n                      hintText: 'Uploaded',\n                      onAddTap: () {},\n                      textTheme: textTheme,\n                    ),\n                  ],\n                ),\n                const SizedBox(height: 16.0),\n                // --- New: Cancellation Policy Section (distinct from original card) ---\n                _SectionContainer(\n                  textTheme: textTheme,\n                  colorScheme: colorScheme,\n                  title: 'Cancellation Policy',\n                  children: [\n                    Row(\n                      crossAxisAlignment: CrossAxisAlignment.start,\n                      children: [\n                        Expanded(\n                          child: Text.rich(\n                            TextSpan(\n                              text: 'Stay informed with clear, flexible cancellation terms. View refundable dates, fees, and policy types before you book. ',\n                              style: textTheme.bodyMedium?.copyWith(color: Colors.grey[700]),\n                              children: [\n                                TextSpan(\n                                  text: 'Learn More',\n                                  style: textTheme.bodyMedium?.copyWith(\n                                    color: primaryColor,\n                                    fontWeight: FontWeight.bold,\n                                  ),\n                                  recognizer: TapGestureRecognizer()..onTap = () {\n                                    print('Learn More tapped on Cancellation Policy');\n                                  },\n                                ),\n                              ],\n                            ),\n                          ),\n                        ),\n                        const SizedBox(width: 16.0),\n                        Icon(Icons.calendar_today_outlined, color: Colors.grey[600], size: 24),\n                      ],\n                    ),\n                  ],\n                ),\n                const SizedBox(height: 16.0),\n                // --- New: Hotel Rules Section ---\n                _SectionContainer(\n                  textTheme: textTheme,\n                  colorScheme: colorScheme,\n                  title: 'Hotel Rules',\n                  children: [\n                    Text(\n                      'Know before you go—check key rules like check-in/out times, smoking policies...',\n                      style: textTheme.bodyMedium?.copyWith(color: Colors.grey[700]),\n                    ),\n                    const SizedBox(height: 8.0),\n                    _BulletPointText(\n                      text: 'Follow all Rules',\n                      textTheme: textTheme,\n                    ),\n                    _BulletPointText(\n                      text: 'If you break intentionally. Hotel Management may charge you',\n                      textTheme: textTheme,\n                    ),\n                  ],\n                ),\n                const SizedBox(height: 16.0),\n                // --- New: Your Reservation Gonna Confirm Soon! ---\n                Container(\n                  padding: const EdgeInsets.all(16.0),\n                  decoration: BoxDecoration(\n                    color: colorScheme.surface,\n                    borderRadius: BorderRadius.circular(15.0),\n                    boxShadow: [\n                      BoxShadow(\n                        color: Colors.grey.withOpacity(0.1),\n                        spreadRadius: 1,\n                        blurRadius: 5,\n                        offset: const Offset(0, 3),\n                      ),\n                    ],\n                  ),\n                  child: Row(\n                    children: [\n                      Expanded(\n                        child: Text(\n                          'Your Reservation Gonna\\nConfirm Soon!',\n                          style: textTheme.titleMedium?.copyWith(\n                            fontWeight: FontWeight.bold,\n                            color: Colors.grey[800],\n                          ),\n                        ),\n                      ),\n                      Icon(Icons.calendar_month, color: Colors.grey[600], size: 36),\n                    ],\n                  ),\n                ),\n                const SizedBox(height: 24.0), // Consistent spacing before next section\n                // --- Original sections follow below ---\n                _SectionContainer(\n                  textTheme: textTheme,\n                  colorScheme: colorScheme,\n                  title: 'Your Trip',\n                  children: [\n                    _TripDetailRow(\n                      label: 'Dates',\n                      value: 'March 10 - 13, 2024 (4 Days)',\n                      onEdit: () {\n                        // TODO: Implement edit dates action\n                        print('Edit Dates tapped');\n                      },\n                      textTheme: textTheme,\n                    ),\n                    _TripDetailRow(\n                      label: 'Guests',\n                      value: '2 Guests',\n                      onEdit: () {\n                        // TODO: Implement edit guests action\n                        print('Edit Guests tapped');\n                      },\n                      textTheme: textTheme,\n                    ),\n                  ],\n                ),\n                const SizedBox(height: 16.0),\n                // Choose how to pay Section\n                _SectionContainer(\n                  textTheme: textTheme,\n                  colorScheme: colorScheme,\n                  title: 'Choose how to pay',\n                  children: [\n                    _PaymentOptionTile(\n                      title: 'Pay 68,000 BDT (full)',\n                      value: 'Pay 68,000 BDT (full)',\n                      groupValue: _selectedPaymentOption,\n                      onChanged: (value) {\n                        setState(() {\n                          _selectedPaymentOption = value;\n                        });\n                      },\n                      textTheme: textTheme,\n                      primaryColor: primaryColor,\n                    ),\n                    _PaymentOptionTile(\n                      title: 'Pay part now, part later',\n                      subtitle: 'Pay 40% Money today as an advance payment for room booking. ',\n                      subtitleLink: 'More info',\n                      value: 'Pay part now, part later',\n                      groupValue: _selectedPaymentOption,\n                      onChanged: (value) {\n                        setState(() {\n                          _selectedPaymentOption = value;\n                        });\n                      },\n                      textTheme: textTheme,\n                      primaryColor: primaryColor,\n                    ),\n                  ],\n                ),\n                const SizedBox(height: 16.0),\n                // Price Details Section\n                _SectionContainer(\n                  textTheme: textTheme,\n                  colorScheme: colorScheme,\n                  title: 'Price Details',\n                  children: [\n                    _PriceDetailRow(\n                      label: 'Advance Payment',\n                      amount: '27,200 BDT',\n                      textTheme: textTheme,\n                      isBold: false,\n                    ),\n                    _PriceDetailRow(\n                      label: 'App Service Fee',\n                      amount: '300 BDT',\n                      textTheme: textTheme,\n                      isBold: false,\n                    ),\n                    _PriceDetailRow(\n                      label: 'Government Tax',\n                      amount: '500 BDT',\n                      textTheme: textTheme,\n                      isBold: false,\n                    ),\n                    const SizedBox(height: 8.0),\n                    Divider(color: Colors.grey[300], thickness: 1, indent: 0, endIndent: 0),\n                    const SizedBox(height: 8.0),\n                    _PriceDetailRow(\n                      label: 'Total (BDT)',\n                      amount: '28,000 BDT',\n                      textTheme: textTheme,\n                      isBold: true,\n                      linkText: 'More Info',\n                      onLinkTap: () {\n                        print('More Info tapped');\n                      },\n                    ),\n                    const SizedBox(height: 16.0),\n                    _PriceDetailRow(\n                      label: 'Due Now',\n                      amount: '40,000 BDT',\n                      textTheme: textTheme,\n                      isBold: true,\n                      isPrimaryColor: true,\n                    ),\n                  ],\n                ),\n                const SizedBox(height: 16.0),\n                // Pay With Section\n                _SectionContainer(\n                  textTheme: textTheme,\n                  colorScheme: colorScheme,\n                  title: 'Pay With',\n                  children: [\n                    _PaymentMethodTile(\n                      icon: Icons.person_outline, // Placeholder for Google Pay icon\n                      title: 'Google Pay - **** **** 4709',\n                      value: 'Google Pay - **** **** 4709',\n                      groupValue: _selectedPaymentMethod,\n                      onChanged: (value) {\n                        setState(() {\n                          _selectedPaymentMethod = value;\n                        });\n                      },\n                      textTheme: textTheme,\n                      primaryColor: primaryColor,\n                    ),\n                    _PaymentMethodTile(\n                      icon: Icons.credit_card, // Placeholder for Mastercard icon\n                      title: 'Mastercard - **** **** 6782',\n                      value: 'Mastercard - **** **** 6782',\n                      groupValue: _selectedPaymentMethod,\n                      onChanged: (value) {\n                        setState(() {\n                          _selectedPaymentMethod = value;\n                        });\n                      },\n                      textTheme: textTheme,\n                      primaryColor: primaryColor,\n                    ),\n                    _PaymentMethodTile(\n                      icon: Icons.add_card,\n                      title: 'Add new card',\n                      isAddCard: true,\n                      onTap: () {\n                        // TODO: Implement add new card\n                        print('Add new card tapped');\n                      },\n                      textTheme: textTheme,\n                      primaryColor: primaryColor,\n                    ),\n                  ],\n                ),\n                const SizedBox(height: 40.0), // Padding before bottom button\n              ],\n            ),\n          ),\n          Padding(\n            padding:\n                const EdgeInsets.symmetric(horizontal: 24.0, vertical: 24.0),\n            child: PrimaryTextButton(\n              text: 'Next',\n              onPressed: () {\n                // TODO: Implement next action\n                print('Next button tapped on Reservation Details');\n              },\n            ),\n          ),\n        ],\n      ),\n    );\n  }\n\n  Widget _buildSectionTitle(BuildContext context, String title) {\n    final TextTheme textTheme = Theme.of(context).textTheme;\n    return Padding(\n      padding: const EdgeInsets.only(bottom: 16.0),\n      child: Text(\n        title,\n        style: textTheme.titleMedium?.copyWith(\n          fontWeight: FontWeight.bold,\n          color: Colors.grey[800],\n        ),\n      ),\n    );\n  }\n}\n\nclass _SectionContainer extends StatelessWidget {\n  final TextTheme textTheme;\n  final ColorScheme colorScheme;\n  final String title;\n  final List<Widget> children;\n\n  const _SectionContainer({\n    required this.textTheme,\n    required this.colorScheme,\n    required this.title,\n    required this.children,\n  });\n\n  @override\n  Widget build(BuildContext context) {\n    return Container(\n      margin: const EdgeInsets.only(bottom: 16.0), // Space between sections\n      padding: const EdgeInsets.all(16.0), // Internal padding\n      decoration: BoxDecoration(\n        color: colorScheme.surface, // White background\n        borderRadius: BorderRadius.circular(15.0), // Rounded corners\n        boxShadow: [\n          BoxShadow(\n            color: Colors.grey.withOpacity(0.1),\n            spreadRadius: 1,\n            blurRadius: 5,\n            offset: const Offset(0, 3),\n          ),\n        ],\n      ),\n      child: Column(\n        crossAxisAlignment: CrossAxisAlignment.start,\n        children: [\n          Text(\n            title,\n            style: textTheme.titleMedium?.copyWith(\n              fontWeight: FontWeight.bold,\n              color: Colors.grey[800],\n            ),\n          ),\n          const SizedBox(height: 16.0),\n          ...children,\n        ],\n      ),\n    );\n  }\n}\n\nclass _BookingSummaryCard extends StatelessWidget {\n  final TextTheme textTheme;\n  final ColorScheme colorScheme;\n\n  const _BookingSummaryCard({\n    required this.textTheme,\n    required this.colorScheme,\n  });\n\n  @override\n  Widget build(BuildContext context) {\n    return Container(\n      padding: const EdgeInsets.all(16.0),\n      decoration: BoxDecoration(\n        color: colorScheme.surface, // White background\n        borderRadius: BorderRadius.circular(15.0),\n        boxShadow: [\n          BoxShadow(\n            color: Colors.grey.withOpacity(0.1),\n            spreadRadius: 1,\n            blurRadius: 5,\n            offset: const Offset(0, 3),\n          ),\n        ],\n      ),\n      child: Row(\n        crossAxisAlignment: CrossAxisAlignment.start,\n        children: [\n          ClipRRect(\n            borderRadius: BorderRadius.circular(10.0),\n            child: Image.network(\n              'https://picsum.photos/100/100?random=roombooking', // Placeholder image\n              height: 80,\n              width: 80,\n              fit: BoxFit.cover,\n              errorBuilder: (context, error, stackTrace) => Container(\n                height: 80,\n                width: 80,\n                color: Colors.grey[300],\n                child: Icon(Icons.image, color: Colors.grey[600]),\n              ),\n            ),\n          ),\n          const SizedBox(width: 16.0),\n          Expanded(\n            child: Column(\n              crossAxisAlignment: CrossAxisAlignment.start,\n              children: [\n                Text(\n                  'Room Booking',\n                  style: textTheme.bodyMedium?.copyWith(color: Colors.grey[600]),\n                ),\n                const SizedBox(height: 4.0),\n                Text(\n                  'Loft Style Guest suite with\\nPrivate Bathroom',\n                  style: textTheme.titleMedium?.copyWith(\n                    fontWeight: FontWeight.bold,\n                    color: Colors.grey[800],\n                  ),\n                  maxLines: 2,\n                  overflow: TextOverflow.ellipsis,\n                ),\n                const SizedBox(height: 4.0),\n                Row(\n                  children: [\n                    Icon(Icons.star, color: Colors.amber, size: 16),\n                    const SizedBox(width: 4.0),\n                    Text(\n                      '4.9 (240)',\n                      style: textTheme.bodySmall?.copyWith(color: Colors.grey[700]),\n                    ),\n                  ],\n                ),\n              ],\n            ),\n          ),\n        ],\n      ),\n    );\n  }\n}\n\nclass _CancellationPolicyCard extends StatelessWidget {\n  final TextTheme textTheme;\n  final ColorScheme colorScheme;\n\n  const _CancellationPolicyCard({\n    required this.textTheme,\n    required this.colorScheme,\n  });\n\n  @override\n  Widget build(BuildContext context) {\n    return Container(\n      padding: const EdgeInsets.all(16.0),\n      decoration: BoxDecoration(\n        color: colorScheme.surface,\n        borderRadius: BorderRadius.circular(15.0),\n        boxShadow: [\n          BoxShadow(\n            color: Colors.grey.withOpacity(0.1),\n            spreadRadius: 1,\n            blurRadius: 5,\n            offset: const Offset(0, 3),\n          ),\n        ],\n      ),\n      child: Row(\n        crossAxisAlignment: CrossAxisAlignment.start,\n        children: [\n          Expanded(\n            child: Text(\n              'Free Cancellation before 6 March. Get a full refund if you change your mind',\n              style: textTheme.bodyMedium?.copyWith(color: Colors.grey[700]),\n            ),\n          ),\n          const SizedBox(width: 16.0),\n          Icon(Icons.calendar_today_outlined, color: Colors.grey[600], size: 24),\n        ],\n      ),\n    );\n  }\n}\n\nclass _TripDetailRow extends StatelessWidget {\n  final String label;\n  final String value;\n  final VoidCallback onEdit;\n  final TextTheme textTheme;\n\n  const _TripDetailRow({\n    required this.label,\n    required this.value,\n    required this.onEdit,\n    required this.textTheme,\n  });\n\n  @override\n  Widget build(BuildContext context) {\n    return Padding(\n      padding: const EdgeInsets.symmetric(vertical: 8.0),\n      child: Row(\n        mainAxisAlignment: MainAxisAlignment.spaceBetween,\n        children: [\n          Column(\n            crossAxisAlignment: CrossAxisAlignment.start,\n            children: [\n              Text(\n                label,\n                style: textTheme.bodyLarge?.copyWith( // Changed to bodyLarge as per image\n                  fontWeight: FontWeight.normal, // Not bold in image\n                  color: Colors.grey[700], // Adjust color\n                ),\n              ),\n              const SizedBox(height: 4.0),\n              Text(\n                value,\n                style: textTheme.bodyMedium?.copyWith(color: Colors.grey[600]),\n              ),\n            ],\n          ),\n          TextButton(\n            onPressed: onEdit,\n            child: Text(\n              'Edit',\n              style: textTheme.bodyMedium?.copyWith(color: Theme.of(context).primaryColor),\n            ),\n          ),\n        ],\n      ),\n    );\n  }\n}\n\nclass _PaymentOptionTile extends StatelessWidget {\n  final String title;\n  final String? subtitle;\n  final String? subtitleLink;\n  final String value;\n  final String? groupValue;\n  final ValueChanged<String?> onChanged;\n  final TextTheme textTheme;\n  final Color primaryColor;\n\n  const _PaymentOptionTile({\n    required this.title,\n    this.subtitle,\n    this.subtitleLink,\n    required this.value,\n    required this.groupValue,\n    required this.onChanged,\n    required this.textTheme,\n    required this.primaryColor,\n  });\n\n  @override\n  Widget build(BuildContext context) {\n    return Column(\n      children: [\n        RadioListTile<String>(\n          title: Text(\n            title,\n            style: textTheme.bodyLarge?.copyWith(\n              fontWeight: FontWeight.normal, // Not bold in image\n              color: Colors.grey[700], // Adjust color\n            ),\n          ),\n          subtitle: subtitle != null\n              ? Text.rich(\n                  TextSpan(\n                    text: subtitle,\n                    style: textTheme.bodySmall?.copyWith(color: Colors.grey[600]),\n                    children: [\n                      if (subtitleLink != null)\n                        TextSpan(\n                          text: subtitleLink,\n                          style: textTheme.bodySmall?.copyWith(\n                            color: primaryColor,\n                            fontWeight: FontWeight.bold,\n                          ),\n                          recognizer: TapGestureRecognizer()\n                            ..onTap = () {\n                              print('$subtitleLink tapped');\n                            },\n                        ),\n                    ],\n                  ),\n                )\n              : null,\n          value: value,\n          groupValue: groupValue,\n          onChanged: onChanged,\n          activeColor: primaryColor,\n          controlAffinity: ListTileControlAffinity.trailing,\n        ),\n        if (subtitle != null)\n          // No divider needed here, container will provide separation\n          const SizedBox(height: 8.0), // Space between radio tiles\n      ],\n    );\n  }\n}\n\nclass _PriceDetailRow extends StatelessWidget {\n  final String label;\n  final String amount;\n  final TextTheme textTheme;\n  final bool isBold;\n  final String? linkText;\n  final VoidCallback? onLinkTap;\n  final bool isPrimaryColor;\n\n  const _PriceDetailRow({\n    required this.label,\n    required this.amount,\n    required this.textTheme,\n    this.isBold = false,\n    this.linkText,\n    this.onLinkTap,\n    this.isPrimaryColor = false,\n  });\n\n  @override\n  Widget build(BuildContext context) {\n    final Color textColor = isPrimaryColor\n        ? Theme.of(context).primaryColor\n        : (isBold ? Colors.grey[800] : Colors.grey[700])!;\n\n    return Padding(\n      padding: const EdgeInsets.symmetric(vertical: 8.0),\n      child: Row(\n        mainAxisAlignment: MainAxisAlignment.spaceBetween,\n        children: [\n          Row(\n            children: [\n              Text(\n                label,\n                style: textTheme.bodyLarge?.copyWith(\n                  fontWeight: isBold ? FontWeight.bold : FontWeight.normal,\n                  color: textColor,\n                ),\n              ),\n              if (linkText != null) ...[\n                const SizedBox(width: 8.0),\n                GestureDetector(\n                  onTap: onLinkTap,\n                  child: Text(\n                    linkText!,\n                    style: textTheme.bodySmall?.copyWith(\n                      color: Theme.of(context).primaryColor,\n                      fontWeight: FontWeight.bold,\n                    ),\n                  ),\n                ),\n              ],\n            ],\n          ),\n          Text(\n            amount,\n            style: textTheme.bodyLarge?.copyWith(\n              fontWeight: isBold ? FontWeight.bold : FontWeight.normal,\n              color: textColor,\n            ),\n          ),\n        ],\n      ),\n    );\n  }\n}\n\nclass _PaymentMethodTile extends StatelessWidget {\n  final IconData? icon;\n  final String title;\n  final String? value; // Used for radio selection\n  final String? groupValue;\n  final ValueChanged<String?>? onChanged;\n  final bool isAddCard;\n  final VoidCallback? onTap;\n  final TextTheme textTheme;\n  final Color primaryColor;\n\n  const _PaymentMethodTile({\n    this.icon,\n    required this.title,\n    this.value,\n    this.groupValue,\n    this.onChanged,\n    this.isAddCard = false,\n    this.onTap,\n    required this.textTheme,\n    required this.primaryColor,\n  });\n\n  @override\n  Widget build(BuildContext context) {\n    if (isAddCard) {\n      return ListTile(\n        leading: Icon(icon, color: Colors.grey[700]),\n        title: Text(\n          title,\n          style: textTheme.bodyLarge?.copyWith(color: Colors.grey[800]),\n        ),\n        trailing: Icon(Icons.arrow_forward_ios, color: Colors.grey[400], size: 16),\n        onTap: onTap,\n      );\n    } else {\n      return RadioListTile<String>(\n        value: value!,\n        groupValue: groupValue,\n        onChanged: onChanged,\n        activeColor: primaryColor,\n        controlAffinity: ListTileControlAffinity.trailing,\n        title: Row(\n          children: [\n            if (icon != null) ...[\n              Icon(icon, color: Colors.grey[700]),\n              const SizedBox(width: 8.0),\n            ],\n            Expanded( // Wrap text in Expanded to prevent overflow\n              child: Text(\n                title,\n                style: textTheme.bodyLarge?.copyWith(color: Colors.grey[800]),\n                overflow: TextOverflow.ellipsis, // Add ellipsis for overflow\n              ),\n            ),\n          ],\n        ),\n      );\n    }\n  }\n}\n\nclass _RequiredInfoRow extends StatelessWidget {\n  final String label;\n  final String hintText;\n  final VoidCallback onAddTap;\n  final TextTheme textTheme;\n\n  const _RequiredInfoRow({\n    required this.label,\n    required this.hintText,\n    required this.onAddTap,\n    required this.textTheme,\n  });\n\n  @override\n  Widget build(BuildContext context) {\n    return Padding(\n      padding: const EdgeInsets.symmetric(vertical: 8.0),\n      child: Row(\n        mainAxisAlignment: MainAxisAlignment.spaceBetween,\n        crossAxisAlignment: CrossAxisAlignment.start, // Align to top for multiline hint\n        children: [\n          Expanded( // Ensure text takes available space\n            child: Column(\n              crossAxisAlignment: CrossAxisAlignment.start,\n              children: [\n                Text(\n                  label,\n                  style: textTheme.bodyLarge?.copyWith(\n                    fontWeight: FontWeight.normal,\n                    color: Colors.grey[700],\n                  ),\n                ),\n                const SizedBox(height: 4.0),\n                Text(\n                  hintText,\n                  style: textTheme.bodyMedium?.copyWith(color: Colors.grey[500]),\n                  maxLines: 2, // Allow two lines for hint text\n                  overflow: TextOverflow.ellipsis, // Ellipsis if still overflows\n                ),\n              ],\n            ),\n          ),\n          const SizedBox(width: 16.0), // Space between text and button\n          SizedBox(\n            height: 30, // Smaller height for the \"Add\" button\n            child: OutlinedButton(\n              onPressed: onAddTap,\n              style: OutlinedButton.styleFrom(\n                side: BorderSide(color: Colors.grey[300]!, width: 1),\n                shape: RoundedRectangleBorder(\n                  borderRadius: BorderRadius.circular(8.0),\n                ),\n                padding: const EdgeInsets.symmetric(horizontal: 16),\n                minimumSize: Size.zero, // Remove default minimum size\n                tapTargetSize: MaterialTapTargetSize.shrinkWrap,\n              ),\n              child: Text(\n                'Add',\n                style: textTheme.bodySmall?.copyWith(color: Theme.of(context).primaryColor),\n              ),\n            ),\n          ),\n        ],\n      ),\n    );\n  }\n}\n\nclass _BulletPointText extends StatelessWidget {\n  final String text;\n  final TextTheme textTheme;\n\n  const _BulletPointText({\n    required this.text,\n    required this.textTheme,\n  });\n\n  @override\n  Widget build(BuildContext context) {\n    return Padding(\n      padding: const EdgeInsets.only(left: 8.0, bottom: 8.0),\n      child: Row(\n        crossAxisAlignment: CrossAxisAlignment.start,\n        children: [\n          Text('• ', style: textTheme.bodyMedium?.copyWith(color: Colors.grey[700])),\n          Expanded(\n            child: Text(\n              text,\n              style: textTheme.bodyMedium?.copyWith(color: Colors.grey[700]),\n            ),\n          ),\n        ],\n      ),\n    );\n  }\n}\n```\n\n// File: lib\\screens\\settings_screen.dart\n```dart\nimport 'package:flutter/material.dart';\n\nclass SettingsScreen extends StatefulWidget {\n  const SettingsScreen({super.key});\n\n  @override\n  State<SettingsScreen> createState() => _SettingsScreenState();\n}\n\nclass _SettingsScreenState extends State<SettingsScreen> {\n  bool _notificationsEnabled = true;\n  bool _darkModeEnabled = false;\n  bool _locationServicesEnabled = true;\n\n  @override\n  Widget build(BuildContext context) {\n    final TextTheme textTheme = Theme.of(context).textTheme;\n    final Color primaryColor = Theme.of(context).primaryColor;\n    final ColorScheme colorScheme = Theme.of(context).colorScheme;\n\n    return Scaffold(\n      backgroundColor: Colors.grey[100], // Light grey background\n      appBar: AppBar(\n        scrolledUnderElevation: 0,\n        backgroundColor: Colors.grey[100],\n        elevation: 0,\n        leading: IconButton(\n          icon: Icon(\n            Icons.arrow_back,\n            color: primaryColor,\n          ), // Back icon primary color\n          onPressed: () {\n            Navigator.of(context).pop();\n          },\n        ),\n        title: Text(\n          'Settings',\n          style: textTheme.titleLarge?.copyWith(\n            fontWeight: FontWeight.bold,\n            color: Colors.grey[800],\n            fontSize: 18,\n          ),\n        ),\n        centerTitle: true,\n        actions: [\n          IconButton(\n            icon: Icon(\n              Icons.settings_outlined,\n              color: primaryColor,\n            ), // Settings icon primary color\n            onPressed: () {\n              // TODO: Implement settings action\n            },\n          ),\n          const SizedBox(width: 8.0),\n        ],\n      ),\n      body: SingleChildScrollView(\n        padding: const EdgeInsets.symmetric(horizontal: 24.0),\n        child: Column(\n          crossAxisAlignment: CrossAxisAlignment.start,\n          children: [\n            const SizedBox(height: 24.0),\n            _SettingsSection(\n              title: 'General',\n              textTheme: textTheme,\n              children: [\n                _SettingsTile(\n                  title: 'Edit Profile',\n                  icon: Icons.person_outline,\n                  onTap: () {\n                    // TODO: Navigate to Edit Profile\n                    print('Edit Profile tapped');\n                  },\n                  textTheme: textTheme,\n                  primaryColor: primaryColor,\n                ),\n                _SettingsTile(\n                  title: 'Change Password',\n                  icon: Icons.lock_outline,\n                  onTap: () {\n                    // TODO: Navigate to Change Password\n                    print('Change Password tapped');\n                  },\n                  textTheme: textTheme,\n                  primaryColor: primaryColor,\n                ),\n                _SettingsTile(\n                  title: 'Language',\n                  icon: Icons.language,\n                  onTap: () {\n                    // TODO: Open Language selection\n                    print('Language tapped');\n                  },\n                  textTheme: textTheme,\n                  primaryColor: primaryColor,\n                ),\n              ],\n              colorScheme: colorScheme,\n            ),\n            const SizedBox(height: 24.0),\n            _SettingsSection(\n              title: 'Notifications',\n              textTheme: textTheme,\n              children: [\n                _SettingsToggleTile(\n                  title: 'Push Notifications',\n                  icon: Icons.notifications_none,\n                  value: _notificationsEnabled,\n                  onChanged: (bool value) {\n                    setState(() {\n                      _notificationsEnabled = value;\n                    });\n                    print('Push Notifications: $value');\n                  },\n                  textTheme: textTheme,\n                  primaryColor: primaryColor,\n                  colorScheme: colorScheme,\n                ),\n                _SettingsToggleTile(\n                  title: 'Email Notifications',\n                  icon: Icons.email_outlined,\n                  value: _notificationsEnabled, // Use same state for example\n                  onChanged: (bool value) {\n                    setState(() {\n                      _notificationsEnabled = value;\n                    });\n                    print('Email Notifications: $value');\n                  },\n                  textTheme: textTheme,\n                  primaryColor: primaryColor,\n                  colorScheme: colorScheme,\n                ),\n              ],\n              colorScheme: colorScheme,\n            ),\n            const SizedBox(height: 24.0),\n            _SettingsSection(\n              title: 'Privacy & Security',\n              textTheme: textTheme,\n              children: [\n                _SettingsToggleTile(\n                  title: 'Location Services',\n                  icon: Icons.location_on_outlined,\n                  value: _locationServicesEnabled,\n                  onChanged: (bool value) {\n                    setState(() {\n                      _locationServicesEnabled = value;\n                    });\n                    print('Location Services: $value');\n                  },\n                  textTheme: textTheme,\n                  primaryColor: primaryColor,\n                  colorScheme: colorScheme,\n                ),\n                _SettingsToggleTile(\n                  title: 'Dark Mode',\n                  icon: Icons.dark_mode_outlined,\n                  value: _darkModeEnabled,\n                  onChanged: (bool value) {\n                    setState(() {\n                      _darkModeEnabled = value;\n                    });\n                    print('Dark Mode: $value');\n                  },\n                  textTheme: textTheme,\n                  primaryColor: primaryColor,\n                  colorScheme: colorScheme,\n                ),\n                _SettingsTile(\n                  title: 'Privacy Policy',\n                  icon: Icons.policy_outlined,\n                  onTap: () {\n                    // TODO: Open Privacy Policy link\n                    print('Privacy Policy tapped');\n                  },\n                  textTheme: textTheme,\n                  primaryColor: primaryColor,\n                ),\n              ],\n              colorScheme: colorScheme,\n            ),\n            const SizedBox(height: 24.0),\n            _SettingsSection(\n              title: 'About',\n              textTheme: textTheme,\n              children: [\n                _SettingsTile(\n                  title: 'App Version',\n                  subtitle: '1.0.0',\n                  icon: Icons.info_outline,\n                  onTap: () {\n                    // TODO: Show app version info\n                    print('App Version tapped');\n                  },\n                  textTheme: textTheme,\n                  primaryColor: primaryColor,\n                ),\n                _SettingsTile(\n                  title: 'Licenses',\n                  icon: Icons.description_outlined,\n                  onTap: () {\n                    // TODO: Open Licenses page\n                    print('Licenses tapped');\n                  },\n                  textTheme: textTheme,\n                  primaryColor: primaryColor,\n                ),\n              ],\n              colorScheme: colorScheme,\n            ),\n            const SizedBox(height: 24.0),\n            _SettingsSection(\n              title: 'Help & Support',\n              textTheme: textTheme,\n              children: [\n                _SettingsTile(\n                  title: 'Contact Us',\n                  icon: Icons.support_agent_outlined,\n                  onTap: () {\n                    // TODO: Open contact support\n                    print('Contact Us tapped');\n                  },\n                  textTheme: textTheme,\n                  primaryColor: primaryColor,\n                ),\n                _SettingsTile(\n                  title: 'FAQ',\n                  icon: Icons.live_help_outlined,\n                  onTap: () {\n                    // TODO: Open FAQ page\n                    print('FAQ tapped');\n                  },\n                  textTheme: textTheme,\n                  primaryColor: primaryColor,\n                ),\n              ],\n              colorScheme: colorScheme,\n            ),\n            const SizedBox(height: 40.0),\n          ],\n        ),\n      ),\n    );\n  }\n}\n\nclass _SettingsSection extends StatelessWidget {\n  final String title;\n  final List<Widget> children;\n  final TextTheme textTheme;\n  final ColorScheme colorScheme;\n\n  const _SettingsSection({\n    required this.title,\n    required this.children,\n    required this.textTheme,\n    required this.colorScheme,\n  });\n\n  @override\n  Widget build(BuildContext context) {\n    return Column(\n      crossAxisAlignment: CrossAxisAlignment.start,\n      children: [\n        Padding(\n          padding: const EdgeInsets.only(bottom: 12.0),\n          child: Text(\n            title,\n            style: textTheme.titleMedium?.copyWith(\n              fontWeight: FontWeight.bold,\n              color: Colors.grey[800],\n            ),\n          ),\n        ),\n        Container(\n          decoration: BoxDecoration(\n            color: colorScheme.surface, // White background for the section\n            borderRadius: BorderRadius.circular(15.0),\n            boxShadow: [\n              BoxShadow(\n                color: Colors.grey.withOpacity(0.1),\n                spreadRadius: 1,\n                blurRadius: 5,\n                offset: const Offset(0, 3),\n              ),\n            ],\n          ),\n          child: Column(\n            children: List.generate(children.length, (index) {\n              return Column(\n                children: [\n                  children[index],\n                  if (index < children.length - 1)\n                    Divider(\n                      height: 0,\n                      thickness: 1,\n                      color: Colors.grey[200],\n                      indent: 16,\n                      endIndent: 16,\n                    ),\n                ],\n              );\n            }),\n          ),\n        ),\n      ],\n    );\n  }\n}\n\nclass _SettingsTile extends StatelessWidget {\n  final String title;\n  final String? subtitle;\n  final IconData icon;\n  final VoidCallback onTap;\n  final TextTheme textTheme;\n  final Color primaryColor;\n\n  const _SettingsTile({\n    required this.title,\n    this.subtitle,\n    required this.icon,\n    required this.onTap,\n    required this.textTheme,\n    required this.primaryColor,\n  });\n\n  @override\n  Widget build(BuildContext context) {\n    return ListTile(\n      leading: Icon(icon, color: Colors.grey[700]),\n      title: Text(\n        title,\n        style: textTheme.bodyLarge?.copyWith(color: Colors.grey[800]),\n      ),\n      subtitle:\n          subtitle != null\n              ? Text(\n                subtitle!,\n                style: textTheme.bodySmall?.copyWith(color: Colors.grey[600]),\n              )\n              : null,\n      trailing: Icon(\n        Icons.arrow_forward_ios,\n        color: Colors.grey[400],\n        size: 16,\n      ),\n      onTap: onTap,\n    );\n  }\n}\n\nclass _SettingsToggleTile extends StatelessWidget {\n  final String title;\n  final IconData icon;\n  final bool value;\n  final ValueChanged<bool> onChanged;\n  final TextTheme textTheme;\n  final Color primaryColor;\n  final ColorScheme colorScheme;\n\n  const _SettingsToggleTile({\n    required this.title,\n    required this.icon,\n    required this.value,\n    required this.onChanged,\n    required this.textTheme,\n    required this.primaryColor,\n    required this.colorScheme,\n  });\n\n  @override\n  Widget build(BuildContext context) {\n    return SwitchListTile(\n      secondary: Icon(icon, color: Colors.grey[700]),\n      title: Text(\n        title,\n        style: textTheme.bodyLarge?.copyWith(color: Colors.grey[800]),\n      ),\n      value: value,\n      onChanged: onChanged,\n      activeColor: primaryColor, // Active track color is primaryColor\n      activeTrackColor: primaryColor,\n      inactiveThumbColor: Colors.grey[400],\n      inactiveTrackColor: Colors.grey[300],\n      thumbColor: MaterialStateProperty.resolveWith<Color>((\n        Set<MaterialState> states,\n      ) {\n        if (states.contains(MaterialState.selected)) {\n          return Colors.white; // White thumb when active/selected\n        }\n        return Colors.grey[400]!; // Default inactive thumb color\n      }),\n    );\n  }\n}\n```\n\n// File: lib\\screens\\subscription_screen.dart\n```dart\nimport 'package:flutter/gestures.dart';\nimport 'package:flutter/material.dart';\n\nclass SubscriptionScreen extends StatelessWidget {\n  const SubscriptionScreen({super.key});\n\n  @override\n  Widget build(BuildContext context) {\n    final TextTheme textTheme = Theme.of(context).textTheme;\n    final Color primaryColor = Theme.of(context).primaryColor;\n    final ColorScheme colorScheme = Theme.of(context).colorScheme;\n\n    return Scaffold(\n      backgroundColor: Colors.grey[100], // Light grey background\n      appBar: AppBar(\n        scrolledUnderElevation: 0,\n        backgroundColor: Colors.grey[100],\n        elevation: 0,\n        leading: IconButton(\n          icon: Icon(Icons.arrow_back, color: primaryColor), // Back arrow primary color\n          onPressed: () {\n            Navigator.of(context).pop();\n          },\n        ),\n        title: Text(\n          'Subscription',\n          style: textTheme.titleLarge?.copyWith(\n            fontWeight: FontWeight.bold,\n            color: Colors.grey[800],\n            fontSize: 18,\n          ),\n        ),\n        centerTitle: true,\n      ),\n      body: Padding(\n        padding: const EdgeInsets.symmetric(horizontal: 24.0),\n        child: Column(\n          crossAxisAlignment: CrossAxisAlignment.center,\n          children: [\n            const SizedBox(height: 40.0),\n            Container(\n              padding: const EdgeInsets.all(20.0),\n              decoration: BoxDecoration(\n                color: Colors.grey[200], // Light grey background for the icon container\n                borderRadius: BorderRadius.circular(15.0),\n              ),\n              child: Icon(\n                Icons.emoji_events_outlined, // Crown icon\n                size: 60,\n                color: primaryColor, // Crown icon primary color\n              ),\n            ),\n            const SizedBox(height: 16.0),\n            Text(\n              'AI Travel Premium',\n              style: textTheme.headlineSmall?.copyWith(\n                fontWeight: FontWeight.bold,\n                color: Colors.grey[800],\n              ),\n            ),\n            const SizedBox(height: 40.0),\n            Align(\n              alignment: Alignment.centerLeft,\n              child: Text(\n                'Benefits',\n                style: textTheme.titleMedium?.copyWith(\n                  fontWeight: FontWeight.bold,\n                  color: Colors.grey[800],\n                ),\n              ),\n            ),\n            const SizedBox(height: 8.0),\n            Align(\n              alignment: Alignment.centerLeft,\n              child: Container(\n                padding: const EdgeInsets.symmetric(horizontal: 12.0, vertical: 6.0),\n                decoration: BoxDecoration(\n                  color: Colors.grey[200],\n                  borderRadius: BorderRadius.circular(20.0),\n                ),\n                child: Text(\n                  'Members-only benefits',\n                  style: textTheme.bodySmall?.copyWith(color: Colors.grey[700]),\n                ),\n              ),\n            ),\n            const SizedBox(height: 16.0),\n            // Benefits Card\n            Container(\n              padding: const EdgeInsets.all(16.0),\n              decoration: BoxDecoration(\n                color: colorScheme.surface, // White background\n                borderRadius: BorderRadius.circular(15.0),\n                boxShadow: [\n                  BoxShadow(\n                    color: Colors.grey.withOpacity(0.1),\n                    spreadRadius: 1,\n                    blurRadius: 5,\n                    offset: const Offset(0, 3),\n                  ),\n                ],\n              ),\n              child: Column(\n                crossAxisAlignment: CrossAxisAlignment.start,\n                children: [\n                  _BenefitItem(\n                    text: 'Unlimited Free Delivery',\n                    hasLink: true,\n                    linkText: 'Terms apply',\n                    onLinkTap: () {\n                      print('Terms apply tapped');\n                    },\n                    textTheme: textTheme,\n                    primaryColor: primaryColor, // Pass primaryColor to BenefitItem\n                  ),\n                  const SizedBox(height: 8.0),\n                  _BenefitItem(text: 'Ready, Set & Drive', textTheme: textTheme, primaryColor: primaryColor),\n                  const SizedBox(height: 8.0),\n                  _BenefitItem(text: 'Free Shipping', textTheme: textTheme, primaryColor: primaryColor),\n                  const SizedBox(height: 24.0),\n                  Text(\n                    'Just \\$49 a year',\n                    style: textTheme.titleLarge?.copyWith(\n                      fontWeight: FontWeight.bold,\n                      color: Colors.grey[800],\n                    ),\n                  ),\n                  const SizedBox(height: 4.0),\n                  Text(\n                    'Pays for itself in 1.5 house cleanings.\\nBased on national Average.',\n                    style: textTheme.bodySmall?.copyWith(color: Colors.grey[600]),\n                  ),\n                  const SizedBox(height: 24.0),\n                  SizedBox(\n                    width: double.infinity,\n                    height: 50,\n                    child: FilledButton(\n                      onPressed: () {\n                        // TODO: Implement Unlock Benefits\n                        print('Unlock Benefits tapped');\n                      },\n                      style: FilledButton.styleFrom(\n                        backgroundColor: primaryColor, // Unlock Benefits button primary color\n                        foregroundColor: Colors.white,\n                        shape: RoundedRectangleBorder(\n                          borderRadius: BorderRadius.circular(60), // Match primary text button style\n                        ),\n                        padding: const EdgeInsets.symmetric(vertical: 16, horizontal: 16),\n                      ),\n                      child: Text(\n                        'UNLOCK BENEFITS',\n                        style: textTheme.bodyLarge?.copyWith(\n                          fontWeight: FontWeight.bold,\n                          color: Colors.white,\n                        ),\n                      ),\n                    ),\n                  ),\n                ],\n              ),\n            ),\n            const Spacer(), // Pushes content up if screen is tall\n          ],\n        ),\n      ),\n    );\n  }\n}\n\nclass _BenefitItem extends StatelessWidget {\n  final String text;\n  final bool hasLink;\n  final String? linkText;\n  final VoidCallback? onLinkTap;\n  final TextTheme textTheme;\n  final Color primaryColor; // Added primaryColor to BenefitItem\n\n  const _BenefitItem({\n    required this.text,\n    this.hasLink = false,\n    this.linkText,\n    this.onLinkTap,\n    required this.textTheme,\n    required this.primaryColor, // Require primaryColor\n  });\n\n  @override\n  Widget build(BuildContext context) {\n    return Row(\n      crossAxisAlignment: CrossAxisAlignment.center,\n      children: [\n        Icon(Icons.check_circle, color: primaryColor, size: 20), // Checkmark icon primary color\n        const SizedBox(width: 12.0),\n        Expanded(\n          child: Text.rich(\n            TextSpan(\n              text: text,\n              style: textTheme.bodyLarge?.copyWith(color: Colors.grey[800]),\n              children: [\n                if (hasLink && linkText != null)\n                  TextSpan(\n                    text: ' ($linkText)',\n                    style: textTheme.bodyLarge?.copyWith(\n                      color: primaryColor, // Link color\n                      decoration: TextDecoration.underline,\n                    ),\n                    recognizer: TapGestureRecognizer()..onTap = onLinkTap,\n                  ),\n              ],\n            ),\n          ),\n        ),\n      ],\n    );\n  }\n}\n```\n\n"}]},{"id":null,"role":"user","parts":[{"id":null,"text":"User Instruction: make the background of location icon transperent and add left padding to search Icon\n"},{"id":null,"text":"Here is a screenshot of the current UI state:"},{"id":null,"image":{"mime_type":"image/png","file_uri":"https://generativelanguage.googleapis.com/v1beta/files/lzvcj3xifps6"}},{"id":null,"text":"1. First, discuss what they want to achieve. \n2. Since the screens should strictly have theme and style of the UI template, figure out what new screens/widgets we need from the UI template to achieve the changes.\n3. Output the updated code in the same format as earlier:\n\n1. To make code edits in the users codebase:\n<<<PIXEL_FILE_PATH>>>\nlib/Screens/image_generator_screen.dart **// IMPORTANT: This is an EXAMPLE path. You MUST replace this with the correct, relevant file path derived from the user's request (e.g., `lib/screens/login_screen.dart` if the user asks for a login screen).**\n<<<PIXEL_CODE_START>>>\nentire file code\n<<<PIXEL_CODE_END>>>\nMake sure the file path is relative and the entire code to be replaced in file is included.\n\n2. To install pub dependencies:\n<<<PIXEL_PUB_INSTALL_START>>>\ndependency_name\n<<<PIXEL_PUB_INSTALL_END>>>\n\nOnly include a single dependency at a time, for instance:\n<<<PIXEL_PUB_INSTALL_START>>>\ngoogle_fonts\n<<<PIXEL_PUB_INSTALL_END>>>\n\n3. To relay important information, questions or clarifications to user:\n<<<PIXEL_USER_INFORM_START>>>\nyour message to be shown to user\n<<<PIXEL_USER_INFORM_END>>>\n\n4. To request viewing a single UI template file\n<<<PIXEL_VIEW_TEMPLATE_FILE_START>>>\npath of file\n<<<PIXEL_VIEW_TEMPLATE_FILE_END>>>\nTo view multiple files, add multiple such statements. Stop after you've requested all the files, the client will provide you the files in the next message.\n\n\nAll of these formats are parsed using Regex and programatically executed at the users end, so you should strictly stick to the above formats."}]},{"id":null,"role":"model","parts":[{"id":null,"text":"The user wants to refine the search bar's appearance on the home screen by:\n1.  Making the background of the location icon transparent.\n2.  Adding left padding to the search icon.\n\n**Design Requirements:**\n1.  **Transparent Background for Location Icon:** The `Container` wrapping the `Icons.location_on` icon in the `suffixIcon` of the `TextField` should have a transparent background color instead of `primaryColor.withOpacity(0.1)`. This will make the icon appear directly on the `TextField`'s fill color (`colorScheme.surface`).\n2.  **Left Padding for Search Icon:** The `prefixIcon` (which is `Icons.search`) needs to have a specific left padding to adjust its position within the text field. This requires wrapping the `Icon` in a `Padding` widget.\n\n**UIKit Elements to Use and Adapt:**\n*   The existing `TextField` in `home_screen.dart` will be modified.\n*   The `Container` for the suffix icon will have its `color` property changed.\n*   The `prefixIcon` will be wrapped in a `Padding` widget.\n\nI will modify `lib/screens/home_screen.dart` to implement these changes.\n\n<<<PIXEL_FILE_PATH>>>\nlib/screens/home_screen.dart\n<<<PIXEL_CODE_START>>>\nimport 'package:flutter/material.dart';\nimport 'package:ai_travel_app_ui_kit/components/buttons/primary_text_button.dart'; // Import if needed for any button\nimport 'package:font_awesome_flutter/font_awesome_flutter.dart'; // For icons if needed\n\nclass HomeScreen extends StatefulWidget {\n  const HomeScreen({super.key});\n\n  @override\n  State<HomeScreen> createState() => _HomeScreenState();\n}\n\nclass _HomeScreenState extends State<HomeScreen> {\n  String _selectedCategory = 'Hotel'; // Default selected category\n\n  @override\n  Widget build(BuildContext context) {\n    final TextTheme textTheme = Theme.of(context).textTheme;\n    final Color primaryColor = Theme.of(context).primaryColor;\n    final ColorScheme colorScheme = Theme.of(context).colorScheme;\n\n    return Scaffold(\n      backgroundColor: Colors.grey[100], // Consistent light grey background\n      appBar: AppBar(\n        backgroundColor: Colors.grey[100], // Match scaffold background\n        elevation: 0,\n        scrolledUnderElevation: 0, // Ensure no shadow on scroll\n        titleSpacing: 0, // Remove default title spacing for custom layout\n        title: Padding(\n          padding: const EdgeInsets.only(left: 24.0),\n          child: Row(\n            children: [\n              CircleAvatar(\n                radius: 20,\n                backgroundColor: Colors.grey[300],\n                backgroundImage: NetworkImage(\n                  'https://picsum.photos/100/100?random=profile_home', // Placeholder profile image\n                ),\n              ),\n              const SizedBox(width: 12.0),\n              Column(\n                crossAxisAlignment: CrossAxisAlignment.start,\n                children: [\n                  Text(\n                    'Hello, Jane!',\n                    style: textTheme.bodyLarge?.copyWith(\n                      fontWeight: FontWeight.bold,\n                      color: Colors.grey[800],\n                    ),\n                  ),\n                  Text(\n                    'Hope you are having a good time',\n                    style: textTheme.bodySmall?.copyWith(\n                      color: Colors.grey[600],\n                    ),\n                  ),\n                ],\n              ),\n            ],\n          ),\n        ),\n        actions: [\n          IconButton(\n            icon: Icon(Icons.notifications_none, color: primaryColor, size: 24),\n            onPressed: () {\n              // TODO: Implement notification action\n              print('Notifications tapped');\n            },\n          ),\n          const SizedBox(width: 16.0),\n        ],\n      ),\n      body: SingleChildScrollView(\n        padding: const EdgeInsets.symmetric(horizontal: 24.0),\n        child: Column(\n          crossAxisAlignment: CrossAxisAlignment.start,\n          children: [\n            const SizedBox(height: 24.0),\n            // Search Bar\n            TextField(\n              decoration: InputDecoration(\n                hintText: 'Search for your next adventure',\n                hintStyle:\n                    textTheme.bodyLarge?.copyWith(color: Colors.grey[500]),\n                filled: true,\n                fillColor: colorScheme.surface, // White background\n                prefixIcon: Padding( // Added Padding for left padding\n                  padding: const EdgeInsets.only(left: 16.0, right: 8.0), // Added left padding\n                  child: Icon(Icons.search, color: Colors.grey[600]),\n                ),\n                suffixIcon: Container(\n                  margin: const EdgeInsets.only(right: 8.0),\n                  padding: const EdgeInsets.all(8.0),\n                  decoration: BoxDecoration(\n                    color: Colors.transparent, // Made background transparent\n                    borderRadius: BorderRadius.circular(10.0),\n                  ),\n                  child: Icon(Icons.location_on, color: primaryColor),\n                ),\n                border: OutlineInputBorder(\n                  borderRadius: BorderRadius.circular(15.0),\n                  borderSide: BorderSide.none,\n                ),\n                contentPadding: const EdgeInsets.symmetric(vertical: 16.0),\n              ),\n              style: textTheme.bodyLarge?.copyWith(color: Colors.grey[850]),\n            ),\n            const SizedBox(height: 24.0),\n            // Categories\n            Text(\n              'Explore Categories',\n              style: textTheme.titleMedium?.copyWith(\n                fontWeight: FontWeight.bold,\n                color: Colors.grey[800],\n              ),\n            ),\n            const SizedBox(height: 16.0),\n            SingleChildScrollView(\n              scrollDirection: Axis.horizontal,\n              child: Row(\n                children: [\n                  _CategoryChip(\n                    text: 'Hotel',\n                    isSelected: _selectedCategory == 'Hotel',\n                    onTap: () {\n                      setState(() {\n                        _selectedCategory = 'Hotel';\n                      });\n                    },\n                    primaryColor: primaryColor,\n                    textTheme: textTheme,\n                  ),\n                  const SizedBox(width: 12.0),\n                  _CategoryChip(\n                    text: 'Convention Center',\n                    isSelected: _selectedCategory == 'Convention Center',\n                    onTap: () {\n                      setState(() {\n                        _selectedCategory = 'Convention Center';\n                      });\n                    },\n                    primaryColor: primaryColor,\n                    textTheme: textTheme,\n                  ),\n                  const SizedBox(width: 12.0),\n                  _CategoryChip(\n                    text: 'Flights',\n                    isSelected: _selectedCategory == 'Flights',\n                    onTap: () {\n                      setState(() {\n                        _selectedCategory = 'Flights';\n                      });\n                    },\n                    primaryColor: primaryColor,\n                    textTheme: textTheme,\n                  ),\n                  const SizedBox(width: 12.0),\n                  _CategoryChip(\n                    text: 'Travel',\n                    isSelected: _selectedCategory == 'Travel',\n                    onTap: () {\n                      setState(() {\n                        _selectedCategory = 'Travel';\n                      });\n                    },\n                    primaryColor: primaryColor,\n                    textTheme: textTheme,\n                  ),\n                ],\n              ),\n            ),\n            const SizedBox(height: 24.0),\n            // Featured Destination\n            Text(\n              'Featured Destination',\n              style: textTheme.titleMedium?.copyWith(\n                fontWeight: FontWeight.bold,\n                color: Colors.grey[800],\n              ),\n            ),\n            const SizedBox(height: 16.0),\n            _HotelCard(\n              hotelName: 'The Westin Dhaka',\n              address: 'Gulshan 2, Dhaka',\n              pricePerDay: '\\$180',\n              rating: '4.8 (1.5k reviews)',\n              imageUrl: 'https://picsum.photos/400/250?random=featured',\n              textTheme: textTheme,\n              colorScheme: colorScheme,\n              onTap: () {\n                // TODO: Navigate to The Westin Dhaka details\n                print('Tapped The Westin Dhaka');\n              },\n            ),\n            const SizedBox(height: 24.0),\n            // Recently Booked\n            Text(\n              'Recently Booked',\n              style: textTheme.titleMedium?.copyWith(\n                fontWeight: FontWeight.bold,\n                color: Colors.grey[800],\n              ),\n            ),\n            const SizedBox(height: 16.0),\n            ListView.builder(\n              shrinkWrap: true,\n              physics: const NeverScrollableScrollPhysics(), // Disable internal scrolling\n              itemCount: 3, // Example: 3 recently booked items\n              itemBuilder: (context, index) {\n                return Padding(\n                  padding: const EdgeInsets.only(bottom: 16.0),\n                  child: _HotelCard(\n                    hotelName: 'Hotel Supreme - Booking ${index + 1}',\n                    address: '4140 Parker Rd. Allentown, Sylhet 3100',\n                    pricePerDay: '\\$126',\n                    rating: '4.9 (234 reviews)',\n                    imageUrl: 'https://picsum.photos/400/250?random=${index + 10}', // Different image for each\n                    textTheme: textTheme,\n                    colorScheme: colorScheme,\n                    onTap: () {\n                      // TODO: Navigate to Hotel Supreme details\n                      print('Tapped Recently Booked Hotel Supreme ${index + 1}');\n                    },\n                  ),\n                );\n              },\n            ),\n            const SizedBox(height: 80.0), // Padding for bottom navigation\n          ],\n        ),\n      ),\n      floatingActionButton: FloatingActionButton(\n        onPressed: () {\n          // TODO: Implement AI assistance action\n          print('AI Assistance button tapped!');\n        },\n        child: Icon(Icons.psychology_outlined), // AI icon\n        shape: RoundedRectangleBorder(\n          borderRadius: BorderRadius.circular(50.0), // Makes it a circular button\n        ),\n      ),\n      floatingActionButtonLocation: FloatingActionButtonLocation.endFloat, // Positions it in the bottom-right\n      bottomNavigationBar: _BottomNavigationBar(\n        primaryColor: primaryColor,\n        colorScheme: colorScheme,\n        textTheme: textTheme,\n      ),\n    );\n  }\n}\n\nclass _CategoryChip extends StatelessWidget {\n  final String text;\n  final bool isSelected;\n  final VoidCallback onTap;\n  final Color primaryColor;\n  final TextTheme textTheme;\n\n  const _CategoryChip({\n    required this.text,\n    required this.isSelected,\n    required this.onTap,\n    required this.primaryColor,\n    required this.textTheme,\n  });\n\n  @override\n  Widget build(BuildContext context) {\n    return GestureDetector(\n      onTap: onTap,\n      child: Container(\n        padding: const EdgeInsets.symmetric(horizontal: 20.0, vertical: 12.0),\n        decoration: BoxDecoration(\n          color: isSelected ? primaryColor : Colors.transparent,\n          borderRadius: BorderRadius.circular(10.0),\n          border: Border.all(color: Colors.grey[300]!, width: 1.0),\n        ),\n        child: Text(\n          text,\n          style: textTheme.bodyMedium?.copyWith(\n            color: isSelected ? Colors.white : Colors.grey[700],\n            fontWeight: isSelected ? FontWeight.bold : FontWeight.normal,\n          ),\n        ),\n      ),\n    );\n  }\n}\n\n// Re-using _HotelCard from explore_hotels_screen.dart\nclass _HotelCard extends StatefulWidget {\n  final String hotelName;\n  final String address;\n  final String pricePerDay;\n  final String rating;\n  final String imageUrl;\n  final TextTheme textTheme;\n  final ColorScheme colorScheme;\n  final VoidCallback onTap;\n\n  const _HotelCard({\n    required this.hotelName,\n    required this.address,\n    required this.pricePerDay,\n    required this.rating,\n    required this.imageUrl,\n    required this.textTheme,\n    required this.colorScheme,\n    required this.onTap,\n    super.key,\n  });\n\n  @override\n  State<_HotelCard> createState() => _HotelCardState();\n}\n\nclass _HotelCardState extends State<_HotelCard> {\n  bool _isFavorite = false;\n\n  @override\n  Widget build(BuildContext context) {\n    return Material(\n      color: widget.colorScheme.surface,\n      borderRadius: BorderRadius.circular(15.0),\n      child: InkWell(\n        borderRadius: BorderRadius.circular(15.0),\n        onTap: widget.onTap,\n        hoverColor: widget.colorScheme.primary.withOpacity(0.05),\n        splashColor: widget.colorScheme.primary.withOpacity(0.2),\n        child: Container(\n          padding: const EdgeInsets.all(16.0),\n          decoration: BoxDecoration(\n            borderRadius: BorderRadius.circular(15.0),\n          ),\n          child: Column(\n            crossAxisAlignment: CrossAxisAlignment.start,\n            children: [\n              Stack(\n                children: [\n                  ClipRRect(\n                    borderRadius: BorderRadius.circular(10.0),\n                    child: Image.network(\n                      widget.imageUrl,\n                      height: 220,\n                      width: double.infinity,\n                      fit: BoxFit.cover,\n                      errorBuilder: (context, error, stackTrace) => Container(\n                        height: 220,\n                        width: double.infinity,\n                        color: Colors.grey[300],\n                        child: Icon(\n                          Icons.broken_image,\n                          color: Colors.grey[600],\n                        ),\n                      ),\n                    ),\n                  ),\n                  Positioned(\n                    top: 8.0,\n                    right: 8.0,\n                    child: Container(\n                      decoration: BoxDecoration(\n                        color: Colors.white.withOpacity(0.8),\n                        shape: BoxShape.circle,\n                      ),\n                      child: IconButton(\n                        icon: Icon(\n                          _isFavorite ? Icons.favorite : Icons.favorite_border,\n                          color: _isFavorite ? Colors.red : Colors.grey[700],\n                        ),\n                        onPressed: () {\n                          setState(() {\n                            _isFavorite = !_isFavorite;\n                          });\n                          print(\n                            'Favorite toggled for ${widget.hotelName}: $_isFavorite',\n                          );\n                        },\n                      ),\n                    ),\n                  ),\n                ],\n              ),\n              const SizedBox(height: 16.0),\n              Row(\n                mainAxisAlignment: MainAxisAlignment.spaceBetween,\n                children: [\n                  Expanded(\n                    child: Column(\n                      crossAxisAlignment: CrossAxisAlignment.start,\n                      children: [\n                        Text(\n                          widget.hotelName,\n                          style: widget.textTheme.titleMedium?.copyWith(\n                            fontWeight: FontWeight.bold,\n                            color: Colors.grey[800],\n                          ),\n                          maxLines: 1,\n                          overflow: TextOverflow.ellipsis,\n                        ),\n                        const SizedBox(height: 4.0),\n                        Text(\n                          widget.address,\n                          style: widget.textTheme.bodySmall?.copyWith(\n                            color: Colors.grey[600],\n                          ),\n                          maxLines: 1,\n                          overflow: TextOverflow.ellipsis,\n                        ),\n                      ],\n                    ),\n                  ),\n                  Text(\n                    '${widget.pricePerDay}/Day',\n                    style: widget.textTheme.titleSmall?.copyWith(\n                      fontWeight: FontWeight.bold,\n                      color: Colors.grey[800],\n                    ),\n                  ),\n                ],\n              ),\n              const SizedBox(height: 8.0),\n              Row(\n                children: [\n                  Icon(Icons.star, color: Colors.amber, size: 16),\n                  const SizedBox(width: 4.0),\n                  Text(\n                    widget.rating,\n                    style: widget.textTheme.bodySmall?.copyWith(\n                      color: Colors.grey[700],\n                    ),\n                  ),\n                ],\n              ),\n            ],\n          ),\n        ),\n      ),\n    );\n  }\n}\n\nclass _BottomNavigationBar extends StatefulWidget {\n  final Color primaryColor;\n  final ColorScheme colorScheme;\n  final TextTheme textTheme;\n\n  const _BottomNavigationBar({\n    required this.primaryColor,\n    required this.colorScheme,\n    required this.textTheme,\n  });\n\n  @override\n  State<_BottomNavigationBar> createState() => _BottomNavigationBarState();\n}\n\nclass _BottomNavigationBarState extends State<_BottomNavigationBar> {\n  int _selectedIndex = 0; // Default to Home tab\n\n  void _onItemTapped(int index) {\n    setState(() {\n      _selectedIndex = index;\n    });\n    // TODO: Implement navigation for each tab\n    print('Tapped tab: $index');\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    return Container(\n      decoration: BoxDecoration(\n        color: widget.colorScheme.surface,\n        boxShadow: [\n          BoxShadow(\n            color: Colors.grey.withOpacity(0.1),\n            spreadRadius: 1,\n            blurRadius: 5,\n            offset: const Offset(0, -3), // Shadow above the bar\n          ),\n        ],\n      ),\n      child: BottomNavigationBar(\n        elevation: 0, // No shadow on the bar itself, using container shadow\n        backgroundColor: Colors.transparent, // Transparent to show container color\n        selectedItemColor: widget.primaryColor,\n        unselectedItemColor: Colors.grey[500],\n        showSelectedLabels: true,\n        showUnselectedLabels: true,\n        selectedLabelStyle: widget.textTheme.bodySmall?.copyWith(\n          fontWeight: FontWeight.bold,\n          color: widget.primaryColor,\n        ),\n        unselectedLabelStyle: widget.textTheme.bodySmall?.copyWith(\n          color: Colors.grey[500],\n        ),\n        type: BottomNavigationBarType.fixed, // Ensures all items are visible\n        currentIndex: _selectedIndex,\n        onTap: _onItemTapped,\n        items: const <BottomNavigationBarItem>[\n          BottomNavigationBarItem(\n            icon: Icon(Icons.home_outlined),\n            label: 'Home',\n          ),\n          BottomNavigationBarItem(\n            icon: Icon(Icons.book_online_outlined),\n            label: 'Bookings',\n          ),\n          BottomNavigationBarItem(\n            icon: Icon(Icons.favorite_border),\n            label: 'Favorites',\n          ),\n          BottomNavigationBarItem(\n            icon: Icon(Icons.person_outline),\n            label: 'Profile',\n          ),\n        ],\n      ),\n    );\n  }\n}\n<<<PIXEL_CODE_END>>>"}]}]