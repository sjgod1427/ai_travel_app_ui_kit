[{"id":null,"role":"user","parts":[{"id":null,"text":"You’re Pixel, an expert assistant in building beautiful Flutter UI screens. Your advantage lies in having access to a UIKit with components and screens in the user's chosen style that are tested to be pixel-perfect.\n\nYou identify required UIKit elements based on users instructions, and use them in users projects to meet their requirements. You only assist with creating the UI and don't engage in building functionality for the user (like integrating APIs, Firebase etc).\n\nGenerate all the UI elements beautifully, following the theme and style of the components and screens in the UIKIT. Generously request more than required template files to view so you fully understand the UIKit style and theme and implement similarly in users codebase. If no components/screens is matching directly, try you best to create a great looking UI meeting the users style. You are allowed to think deeply and take as much time as you need to make sure the end result is world-class.\n\n- For placeholder images, strictly use https://picsum.photos/{width}/{height}\n\nYour normal prose and thoughts won't be displayed to the user, so feel free to take your time to think. \n\nMake sure that the user sees the screen once the code is run. To ensure this, make sure to edit the entry point of the app (usually main.dart) to point to the screen. There is a programatic client supporting below actions with their pre-defined formats that you shall use to perform changes into the users codebase and/or share information. The client also automatically runs or refreshes their app once the changes are made.\n\n1. To make code edits in the users codebase:\n<<<PIXEL_FILE_PATH>>>\nlib/Screens/image_generator_screen.dart **// IMPORTANT: This is an EXAMPLE path. You MUST replace this with the correct, relevant file path derived from the user's request (e.g., `lib/screens/login_screen.dart` if the user asks for a login screen).**\n<<<PIXEL_CODE_START>>>\nentire file code\n<<<PIXEL_CODE_END>>>\nMake sure the file path is relative and the entire code to be replaced in file is included.\n\n2. To install pub dependencies:\n<<<PIXEL_PUB_INSTALL_START>>>\ndependency_name\n<<<PIXEL_PUB_INSTALL_END>>>\n\nOnly include a single dependency at a time, for instance:\n<<<PIXEL_PUB_INSTALL_START>>>\ngoogle_fonts\n<<<PIXEL_PUB_INSTALL_END>>>\n\n3. To relay important information, questions or clarifications to user:\n<<<PIXEL_USER_INFORM_START>>>\nyour message to be shown to user\n<<<PIXEL_USER_INFORM_END>>>\n\n4. To request viewing a single UI template file\n<<<PIXEL_VIEW_TEMPLATE_FILE_START>>>\npath of file\n<<<PIXEL_VIEW_TEMPLATE_FILE_END>>>\nTo view multiple files, add multiple such statements. Stop after you've requested all the files, the client will provide you the files in the next message.\n\n\nAll of these formats are parsed using Regex and programatically executed at the users end, so you should strictly stick to the above formats."}]},{"id":null,"role":"user","parts":[{"id":null,"text":""},{"id":null,"text":"User Instructions: dont use the theme of the image use the theme of the current project"},{"id":null,"text":"Here are  1 image(s) user shared to explain the functionality they need in the screen while you should still strictly adapt the components, design theme, colors and typography from the selected UIKit and preferences only, to meet those functionalities."},{"id":null,"image":{"mime_type":"image/png","file_uri":"https://generativelanguage.googleapis.com/v1beta/files/xydxwif6b8fh"}},{"id":"codebase","text":"Here is the current state of the user’s codebase:\n\n--- Project Context (26 files read) ---\n\n// File: pubspec.yaml\n```yaml\nname: ai_travel_app_ui_kit\r\ndescription: \"A new Flutter project.\"\r\n# The following line prevents the package from being accidentally published to\r\n# pub.dev using `flutter pub publish`. This is preferred for private packages.\r\npublish_to: 'none' # Remove this line if you wish to publish to pub.dev\r\n\r\n# The following defines the version and build number for your application.\r\n# A version number is three numbers separated by dots, like 1.2.43\r\n# followed by an optional build number separated by a +.\r\n# Both the version and the builder number may be overridden in flutter\r\n# build by specifying --build-name and --build-number, respectively.\r\n# In Android, build-name is used as versionName while build-number used as versionCode.\r\n# Read more about Android versioning at https://developer.android.com/studio/publish/versioning\r\n# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.\r\n# Read more about iOS versioning at\r\n# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html\r\n# In Windows, build-name is used as the major, minor, and patch parts\r\n# of the product and file versions while build-number is used as the build suffix.\r\nversion: 1.0.0+1\r\n\r\nenvironment:\r\n  sdk: ^3.7.2\r\n\r\n# Dependencies specify other packages that your package needs in order to work.\r\n# To automatically upgrade your package dependencies to the latest versions\r\n# consider running `flutter pub upgrade --major-versions`. Alternatively,\r\n# dependencies can be manually updated by changing the version numbers below to\r\n# the latest version available on pub.dev. To see which dependencies have newer\r\n# versions available, run `flutter pub outdated`.\r\ndependencies:\r\n  flutter:\r\n    sdk: flutter\r\n\r\n  # The following adds the Cupertino Icons font to your application.\r\n  # Use with the CupertinoIcons class for iOS style icons.\r\n  cupertino_icons: ^1.0.8\r\n  pixel_preview:\r\n    git:\r\n      url: https://github.com/samyakkkk/pixel_preview.git\r\n      ref: pixel-app\r\n  font_awesome_flutter: ^10.8.0\r\n  google_fonts: ^6.2.1\r\n  flutter_svg: ^2.1.0\r\n\r\ndev_dependencies:\r\n  flutter_test:\r\n    sdk: flutter\r\n\r\n  # The \"flutter_lints\" package below contains a set of recommended lints to\r\n  # encourage good coding practices. The lint set provided by the package is\r\n  # activated in the `analysis_options.yaml` file located at the root of your\r\n  # package. See that file for information about deactivating specific lint\r\n  # rules and activating additional ones.\r\n  flutter_lints: ^5.0.0\r\n\r\n# For information on the generic Dart part of this file, see the\r\n# following page: https://dart.dev/tools/pub/pubspec\r\n\r\n# The following section is specific to Flutter packages.\r\nflutter:\r\n\r\n  # The following line ensures that the Material Icons font is\r\n  # included with your application, so that you can use the icons in\r\n  # the material Icons class.\r\n  uses-material-design: true\r\n\r\n  # To add assets to your application, add an assets section, like this:\r\n  # assets:\r\n  #   - images/a_dot_burr.jpeg\r\n  #   - images/a_dot_ham.jpeg\r\n\r\n  # An image asset can refer to one or more resolution-specific \"variants\", see\r\n  # https://flutter.dev/to/resolution-aware-images\r\n\r\n  # For details regarding adding assets from package dependencies, see\r\n  # https://flutter.dev/to/asset-from-package\r\n\r\n  # To add custom fonts to your application, add a fonts section here,\r\n  # in this \"flutter\" section. Each entry in this list should have a\r\n  # \"family\" key with the font family name, and a \"fonts\" key with a\r\n  # list giving the asset and other descriptors for the font. For\r\n  # example:\r\n  # fonts:\r\n  #   - family: Schyler\r\n  #     fonts:\r\n  #       - asset: fonts/Schyler-Regular.ttf\r\n  #       - asset: fonts/Schyler-Italic.ttf\r\n  #         style: italic\r\n  #   - family: Trajan Pro\r\n  #     fonts:\r\n  #       - asset: fonts/TrajanPro.ttf\r\n  #       - asset: fonts/TrajanPro_Bold.ttf\r\n  #         weight: 700\r\n  #\r\n  # For details regarding fonts from package dependencies,\r\n  # see https://flutter.dev/to/font-from-package\n```\n\n// File: lib\\components\\buttons\\primary_text_button.dart\n```dart\n/*\r\nA versatile primary button widget that spans the full width of its container with customizable text and state handling.\r\nCommon use cases:\r\n1. Form submission buttons\r\n2. Primary action buttons in workflows\r\n3. Confirmation dialogs\r\n4. Call-to-action buttons in key user flows\r\n*/\r\n\r\nimport 'package:flutter/material.dart';\r\n\r\nclass PrimaryTextButton extends StatelessWidget {\r\n  final Function()? onPressed;\r\n  final String text;\r\n  const PrimaryTextButton({\r\n    super.key,\r\n    this.text = \"Submit\",\r\n    this.onPressed = _defaultOnPressed,\r\n  });\r\n  static void _defaultOnPressed() {}\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return SizedBox(\r\n      width: double.infinity,\r\n      child: FilledButton(\r\n        onPressed: onPressed,\r\n        style: FilledButton.styleFrom(\r\n          /// The button should be rounded. Don't change the borderRadius.\r\n          shape: RoundedRectangleBorder(\r\n            borderRadius: BorderRadius.circular(60),\r\n          ),\r\n          padding: const EdgeInsets.symmetric(vertical: 24, horizontal: 16),\r\n        ),\r\n        child: Text(\r\n          text,\r\n          style: const TextStyle(fontSize: 16, fontWeight: FontWeight.bold),\r\n        ),\r\n      ),\r\n    );\r\n  }\r\n}\n```\n\n// File: lib\\components\\buttons\\social_auth_button.dart\n```dart\n/*\r\nA comprehensive social authentication button widget that supports multiple providers(Apple, Google, Facebook) with brand-specific styling.\r\n\r\nCommon use cases:\r\n1. Social login/signup flows\r\n2. Account linking interfaces\r\n3. Social sharing features\r\n4. OAuth authentication implementations\r\n*/\r\n\r\nimport 'package:flutter/material.dart';\r\nimport 'package:font_awesome_flutter/font_awesome_flutter.dart';\r\n\r\n// Enum defining the types of buttons supported\r\nenum ButtonType { apple, google, facebook }\r\n\r\nclass SocialAuthButton extends StatelessWidget {\r\n  final ButtonType type;\r\n  final VoidCallback onPressed;\r\n  final String? customText; // Optional text override\r\n\r\n  const SocialAuthButton({\r\n    super.key,\r\n    required this.type,\r\n    required this.onPressed,\r\n    this.customText,\r\n  });\r\n\r\n  factory SocialAuthButton.apple({Key? key, required VoidCallback onPressed}) =>\r\n      SocialAuthButton(key: key, type: ButtonType.apple, onPressed: onPressed);\r\n\r\n  factory SocialAuthButton.google({\r\n    Key? key,\r\n    required VoidCallback onPressed,\r\n  }) =>\r\n      SocialAuthButton(key: key, type: ButtonType.google, onPressed: onPressed);\r\n\r\n  factory SocialAuthButton.facebook({\r\n    Key? key,\r\n    required VoidCallback onPressed,\r\n  }) => SocialAuthButton(\r\n    key: key,\r\n    type: ButtonType.facebook,\r\n    onPressed: onPressed,\r\n  );\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return LayoutBuilder(\r\n      builder: (context, constraints) {\r\n        return SizedBox(\r\n          width: double.infinity,\r\n\r\n          child: FilledButton(\r\n            onPressed: onPressed,\r\n\r\n            style: FilledButton.styleFrom(\r\n              side:\r\n                  type == ButtonType.google\r\n                      ? BorderSide(color: Colors.grey.shade300, width: 1)\r\n                      : BorderSide.none,\r\n\r\n              /// The button should be rounded. Don't change the borderRadius.\r\n              shape: RoundedRectangleBorder(\r\n                borderRadius: BorderRadius.circular(60),\r\n              ),\r\n              padding: EdgeInsets.symmetric(vertical: 24, horizontal: 16),\r\n              backgroundColor: _getButtonColor(),\r\n              foregroundColor: _getTextColor(),\r\n            ),\r\n            child: Stack(\r\n              alignment: Alignment.center,\r\n              children: [\r\n                Positioned(left: 0, child: _getIcon(24.0)),\r\n                SizedBox(\r\n                  width: double.infinity,\r\n                  child: Text(\r\n                    // Use custom text first, then provider name, then default\r\n                    customText ?? 'Continue with ${_getProviderName()}',\r\n                    style: const TextStyle(\r\n                      fontSize: 16.0,\r\n                      fontWeight: FontWeight.w500,\r\n                    ),\r\n                    textAlign: TextAlign.center,\r\n                  ),\r\n                ),\r\n              ],\r\n            ),\r\n          ),\r\n        );\r\n      },\r\n    );\r\n  }\r\n\r\n  // Only relevant for social buttons\r\n  String _getProviderName() {\r\n    switch (type) {\r\n      case ButtonType.apple:\r\n        return 'Apple';\r\n      case ButtonType.google:\r\n        return 'Google';\r\n      case ButtonType.facebook:\r\n        return 'Facebook';\r\n    }\r\n  }\r\n\r\n  Color _getButtonColor() {\r\n    switch (type) {\r\n      case ButtonType.apple:\r\n        return Colors.black;\r\n      case ButtonType.google:\r\n        // Using white for Google button background as is common\r\n        return Colors.white;\r\n      case ButtonType.facebook:\r\n        return const Color(0xFF1877F2); // Facebook blue\r\n    }\r\n  }\r\n\r\n  Color _getTextColor() {\r\n    switch (type) {\r\n      case ButtonType.apple:\r\n      case ButtonType.facebook:\r\n        return Colors.white;\r\n      case ButtonType.google:\r\n        return Colors.black87;\r\n    }\r\n  }\r\n\r\n  // Returns the icon widget or an empty box\r\n  Widget _getIcon(double size) {\r\n    switch (type) {\r\n      case ButtonType.apple:\r\n        // Using FontAwesome for consistency, but could use Icons.apple\r\n        return FaIcon(\r\n          FontAwesomeIcons.apple,\r\n          size: size,\r\n          color: _getTextColor(),\r\n        );\r\n      case ButtonType.google:\r\n        return Image.network(\r\n          'https://img.icons8.com/?size=100&id=17949&format=png',\r\n          height: size,\r\n          width: size,\r\n        );\r\n      case ButtonType.facebook:\r\n        // Using FontAwesome's Facebook icon\r\n        return FaIcon(\r\n          FontAwesomeIcons.facebookF,\r\n          size: size,\r\n          color: _getTextColor(),\r\n        ); // Use F logo\r\n    }\r\n  }\r\n}\n```\n\n// File: lib\\components\\text_fields\\auth_textfields.dart\n```dart\nimport 'package:flutter/material.dart';\r\n\r\nclass AuthTextfields {\r\n  Widget buildTextField({\r\n    required TextEditingController controller,\r\n    String labelText = 'Email',\r\n    Color focusColor = const Color(0xFF7B4DFF),\r\n  }) {\r\n    final focusNode = FocusNode();\r\n    final isFocused = ValueNotifier<bool>(false);\r\n\r\n    focusNode.addListener(() {\r\n      isFocused.value = focusNode.hasFocus;\r\n    });\r\n\r\n    return ValueListenableBuilder<bool>(\r\n      valueListenable: isFocused,\r\n      builder: (context, focused, _) {\r\n        return Container(\r\n          decoration: BoxDecoration(\r\n            borderRadius: BorderRadius.circular(12.0),\r\n            boxShadow:\r\n                focused\r\n                    ? [\r\n                      BoxShadow(\r\n                        color: focusColor.withValues(alpha: 0.15),\r\n                        blurRadius: 15.0,\r\n                        spreadRadius: 5.0,\r\n                        offset: const Offset(0, 0),\r\n                      ),\r\n                    ]\r\n                    : [],\r\n          ),\r\n          child: TextField(\r\n            controller: controller,\r\n            focusNode: focusNode,\r\n            keyboardType: TextInputType.emailAddress,\r\n            obscureText: false,\r\n            style: const TextStyle(fontSize: 16.0),\r\n            decoration: InputDecoration(\r\n              labelText: labelText,\r\n              contentPadding: const EdgeInsets.fromLTRB(15.0, 20.0, 15.0, 10.0),\r\n              filled: true,\r\n              fillColor: Colors.white,\r\n              floatingLabelBehavior: FloatingLabelBehavior.auto,\r\n              enabledBorder: OutlineInputBorder(\r\n                borderRadius: BorderRadius.circular(12.0),\r\n                borderSide: BorderSide(color: Colors.grey.shade300, width: 1.0),\r\n              ),\r\n              focusedBorder: OutlineInputBorder(\r\n                borderRadius: BorderRadius.circular(12.0),\r\n                borderSide: BorderSide(color: focusColor, width: 2.0),\r\n              ),\r\n              labelStyle: TextStyle(\r\n                color: focused ? focusColor : Colors.grey.shade600,\r\n                fontSize: 16.0,\r\n              ),\r\n            ),\r\n          ),\r\n        );\r\n      },\r\n    );\r\n  }\r\n\r\n  Widget buildPasswordField({\r\n    required TextEditingController controller,\r\n    String labelText = 'Password',\r\n    Color focusColor = const Color(0xFF7B4DFF),\r\n  }) {\r\n    final focusNode = FocusNode();\r\n    final isFocused = ValueNotifier<bool>(false);\r\n    final obscureNotifier = ValueNotifier<bool>(true); // <-- persistent state\r\n\r\n    focusNode.addListener(() {\r\n      isFocused.value = focusNode.hasFocus;\r\n    });\r\n\r\n    return ValueListenableBuilder<bool>(\r\n      valueListenable: isFocused,\r\n      builder: (context, focused, _) {\r\n        return ValueListenableBuilder<bool>(\r\n          valueListenable: obscureNotifier,\r\n          builder: (context, _obscureText, _) {\r\n            return Container(\r\n              decoration: BoxDecoration(\r\n                borderRadius: BorderRadius.circular(12.0),\r\n                boxShadow:\r\n                    focused\r\n                        ? [\r\n                          BoxShadow(\r\n                            color: focusColor.withOpacity(0.15),\r\n                            blurRadius: 15.0,\r\n                            spreadRadius: 5.0,\r\n                            offset: const Offset(0, 0),\r\n                          ),\r\n                        ]\r\n                        : [],\r\n              ),\r\n              child: TextField(\r\n                controller: controller,\r\n                focusNode: focusNode,\r\n                keyboardType: TextInputType.text,\r\n                obscureText: _obscureText,\r\n                style: const TextStyle(fontSize: 16.0),\r\n                decoration: InputDecoration(\r\n                  labelText: labelText,\r\n                  contentPadding: const EdgeInsets.fromLTRB(\r\n                    15.0,\r\n                    20.0,\r\n                    15.0,\r\n                    10.0,\r\n                  ),\r\n                  filled: true,\r\n                  fillColor: Colors.white,\r\n                  floatingLabelBehavior: FloatingLabelBehavior.auto,\r\n                  enabledBorder: OutlineInputBorder(\r\n                    borderRadius: BorderRadius.circular(12.0),\r\n                    borderSide: BorderSide(\r\n                      color: Colors.grey.shade300,\r\n                      width: 1.0,\r\n                    ),\r\n                  ),\r\n                  focusedBorder: OutlineInputBorder(\r\n                    borderRadius: BorderRadius.circular(12.0),\r\n                    borderSide: BorderSide(color: focusColor, width: 2.0),\r\n                  ),\r\n                  labelStyle: TextStyle(\r\n                    color: focused ? focusColor : Colors.grey.shade600,\r\n                    fontSize: 16.0,\r\n                  ),\r\n                  suffixIcon: Padding(\r\n                    padding: const EdgeInsets.only(right: 8.0),\r\n                    child: IconButton(\r\n                      icon: Icon(\r\n                        _obscureText ? Icons.visibility_off : Icons.visibility,\r\n                        color: Colors.grey.withOpacity(0.7),\r\n                      ),\r\n                      onPressed: () {\r\n                        obscureNotifier.value = !obscureNotifier.value;\r\n                      },\r\n                    ),\r\n                  ),\r\n                ),\r\n              ),\r\n            );\r\n          },\r\n        );\r\n      },\r\n    );\r\n  }\r\n}\n```\n\n// File: lib\\main.dart\n```dart\nimport 'package:ai_travel_app_ui_kit/screens/ai_chat_section.dart';\r\nimport 'package:ai_travel_app_ui_kit/screens/app_ai_screen.dart';\r\nimport 'package:ai_travel_app_ui_kit/screens/book_hotel_screen.dart';\r\nimport 'package:ai_travel_app_ui_kit/screens/date_timeline_screen.dart';\r\nimport 'package:ai_travel_app_ui_kit/screens/explore_hotels_screen.dart';\r\nimport 'package:ai_travel_app_ui_kit/screens/hotel_details_screen.dart';\r\nimport 'package:ai_travel_app_ui_kit/screens/hotel_filter_screen.dart';\r\nimport 'package:ai_travel_app_ui_kit/screens/onboarding_screen.dart';\r\nimport 'package:ai_travel_app_ui_kit/screens/order_status_screen.dart';\r\nimport 'package:ai_travel_app_ui_kit/screens/phone_input_screen.dart';\r\nimport 'package:ai_travel_app_ui_kit/screens/profile_screen.dart';\r\nimport 'package:ai_travel_app_ui_kit/screens/reservation_details_screen.dart';\r\nimport 'package:ai_travel_app_ui_kit/screens/settings_screen.dart';\r\nimport 'package:ai_travel_app_ui_kit/screens/subscription_screen.dart';\r\nimport 'package:flutter/material.dart';\r\nimport 'package:pixel_preview/pixel_app/pixel_group.dart';\r\nimport 'package:pixel_preview/pixel_preview.dart';\r\nimport 'package:google_fonts/google_fonts.dart'; // Import google_fonts\r\n\r\nimport 'package:ai_travel_app_ui_kit/screens/home_screen.dart'; // Import the new home screen\r\nimport 'package:ai_travel_app_ui_kit/screens/booking_pending_screen.dart'; // Import the new booking pending screen\r\nimport 'package:ai_travel_app_ui_kit/screens/ai_chat_screen2.dart'; // Import the new AI chat screen 2\r\nimport 'package:ai_travel_app_ui_kit/screens/login_screen.dart'; // Import login screen\r\nimport 'package:ai_travel_app_ui_kit/screens/signup_screen.dart'; // Import signup screen\r\nimport 'package:ai_travel_app_ui_kit/screens/otp_screen.dart';\r\nimport 'package:pixel_preview/pixel_thumbnail/pixel_thumbnail.dart'; // Import OTP screen\r\n\r\nvoid main() {\r\n  runApp(const MyApp());\r\n}\r\n\r\nclass MyApp extends StatelessWidget {\r\n  const MyApp({super.key});\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    const Color primaryColor = Color(0xFF7356FF); // User's chosen primary color\r\n    return MaterialApp(\r\n      debugShowCheckedModeBanner: false,\r\n      title: 'Starter App', // Updated title\r\n      theme: ThemeData(\r\n        primaryColor: primaryColor,\r\n        colorScheme: ColorScheme.fromSeed(\r\n          seedColor: primaryColor,\r\n          brightness: ThemeData.light().brightness,\r\n          onPrimary: Colors.white,\r\n          surface: Colors.white,\r\n        ),\r\n        appBarTheme: const AppBarTheme(\r\n          backgroundColor: Colors.white,\r\n          elevation: 0,\r\n          iconTheme: IconThemeData(color: primaryColor),\r\n        ),\r\n        elevatedButtonTheme: ElevatedButtonThemeData(\r\n          style: ElevatedButton.styleFrom(\r\n            backgroundColor: primaryColor,\r\n            foregroundColor: Colors.white,\r\n          ),\r\n        ),\r\n        textButtonTheme: TextButtonThemeData(\r\n          style: TextButton.styleFrom(foregroundColor: primaryColor),\r\n        ),\r\n        outlinedButtonTheme: OutlinedButtonThemeData(\r\n          style: OutlinedButton.styleFrom(\r\n            foregroundColor: primaryColor,\r\n            side: const BorderSide(color: primaryColor),\r\n          ),\r\n        ),\r\n        floatingActionButtonTheme: FloatingActionButtonThemeData(\r\n          backgroundColor: primaryColor,\r\n          foregroundColor: Colors.white,\r\n        ),\r\n        filledButtonTheme: FilledButtonThemeData(\r\n          style: FilledButton.styleFrom(\r\n            backgroundColor: primaryColor,\r\n            foregroundColor: Colors.white,\r\n          ),\r\n        ),\r\n        textTheme:\r\n            GoogleFonts.plusJakartaSansTextTheme(), // Apply user's text theme\r\n      ),\r\n      home:\r\n          false\r\n              ? PixelThumbnail(\r\n                screens: [\r\n                  PixelPreview(\r\n                    presets: ScreenPresets(),\r\n                    enabled: true,\r\n                    child: const HotelDetailsScreen(),\r\n                  ),\r\n\r\n                  PixelPreview(\r\n                    presets: ScreenPresets(),\r\n                    enabled: true,\r\n                    child: const ReservationDetailsScreen(),\r\n                  ),\r\n                  PixelPreview(\r\n                    presets: ScreenPresets(),\r\n                    enabled: true,\r\n                    child: const AIChatSection(),\r\n                  ),\r\n                  PixelPreview(\r\n                    presets: ScreenPresets(),\r\n                    enabled: true,\r\n                    child: const HomeScreen(),\r\n                  ),\r\n\r\n                  PixelPreview(\r\n                    presets: ScreenPresets(),\r\n                    enabled: true,\r\n                    child: const HotelFilterScreen(),\r\n                  ),\r\n                ],\r\n              )\r\n              : PixelApp(\r\n                iFrameMode: true,\r\n                groups: [\r\n                  PixelGroup(\r\n                    title: 'Screens',\r\n                    children: [\r\n                      PixelPreview(\r\n                        presets: ScreenPresets(),\r\n                        enabled: true,\r\n                        child: const OnboardingScreen(),\r\n                      ),\r\n                      PixelPreview(\r\n                        presets: ScreenPresets(),\r\n                        enabled: true,\r\n                        child: const LoginScreen(),\r\n                      ),\r\n                      PixelPreview(\r\n                        presets: ScreenPresets(),\r\n                        enabled: true,\r\n                        child: const SignupScreen(),\r\n                      ),\r\n                      PixelPreview(\r\n                        presets: ScreenPresets(),\r\n                        enabled: true,\r\n                        child: const PhoneInputScreen(),\r\n                      ),\r\n                      PixelPreview(\r\n                        presets: ScreenPresets(),\r\n                        enabled: true,\r\n                        child: const OtpScreen(), // Set as the initial screen\r\n                      ),\r\n                      PixelPreview(\r\n                        presets: ScreenPresets(),\r\n                        enabled: true,\r\n                        child: const HomeScreen(),\r\n                      ),\r\n\r\n                      PixelPreview(\r\n                        presets: ScreenPresets(),\r\n                        enabled: true,\r\n                        child: const AIChatSection(),\r\n                      ),\r\n\r\n                      PixelPreview(\r\n                        presets: ScreenPresets(),\r\n                        enabled: true,\r\n                        child: const AIChatScreen2(),\r\n                      ),\r\n                      PixelPreview(\r\n                        presets: ScreenPresets(),\r\n                        enabled: true,\r\n                        child: const AppAIScreen(),\r\n                      ),\r\n                      PixelPreview(\r\n                        presets: ScreenPresets(),\r\n                        enabled: true,\r\n                        child: const BookHotelScreen(),\r\n                      ),\r\n                      PixelPreview(\r\n                        presets: ScreenPresets(),\r\n                        enabled: true,\r\n                        child: const DateTimelineScreen(),\r\n                      ),\r\n                      PixelPreview(\r\n                        presets: ScreenPresets(),\r\n                        enabled: true,\r\n                        child: const ExploreHotelsScreen(),\r\n                      ),\r\n                      PixelPreview(\r\n                        presets: ScreenPresets(),\r\n                        enabled: true,\r\n                        child: const HotelDetailsScreen(),\r\n                      ),\r\n                      PixelPreview(\r\n                        presets: ScreenPresets(),\r\n                        enabled: true,\r\n                        child: const HotelFilterScreen(),\r\n                      ),\r\n\r\n                      PixelPreview(\r\n                        presets: ScreenPresets(),\r\n                        enabled: true,\r\n                        child: const OrderStatusScreen(),\r\n                      ),\r\n\r\n                      PixelPreview(\r\n                        presets: ScreenPresets(),\r\n                        enabled: true,\r\n                        child: const ReservationDetailsScreen(),\r\n                      ),\r\n                      PixelPreview(\r\n                        presets: ScreenPresets(),\r\n                        enabled: true,\r\n                        child: const BookingPendingScreen(),\r\n                      ),\r\n                      PixelPreview(\r\n                        presets: ScreenPresets(),\r\n                        enabled: true,\r\n                        child: const ProfileScreen(),\r\n                      ),\r\n                      PixelPreview(\r\n                        presets: ScreenPresets(),\r\n                        enabled: true,\r\n                        child: const SettingsScreen(),\r\n                      ),\r\n                      PixelPreview(\r\n                        presets: ScreenPresets(),\r\n                        enabled: true,\r\n                        child: const SubscriptionScreen(),\r\n                      ),\r\n                    ],\r\n                  ),\r\n                ],\r\n              ),\r\n    );\r\n  }\r\n}\n```\n\n// File: lib\\placeholder.dart\n```dart\nimport 'package:flutter/material.dart';\n\nclass PlaceHolderScreen extends StatelessWidget {\n  const PlaceHolderScreen({super.key});\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      body: Center(child: const Text(\"Hi! Let's build something awesome\")),\n    );\n  }\n}\n```\n\n// File: lib\\screens\\ai_chat_screen2.dart\n```dart\nimport 'package:ai_travel_app_ui_kit/screens/date_timeline_screen.dart';\nimport 'package:flutter/material.dart';\nimport 'dart:math';\n\nclass AIChatScreen2 extends StatefulWidget {\n  const AIChatScreen2({super.key});\n\n  @override\n  State<AIChatScreen2> createState() => _AIChatScreen2State();\n}\n\nclass _AIChatScreen2State extends State<AIChatScreen2> {\n  final Set<String> _selectedSuggestions = {}; // To manage selected chips\n\n  void _toggleSuggestion(String text) {\n    setState(() {\n      if (_selectedSuggestions.contains(text)) {\n        _selectedSuggestions.remove(text);\n      } else {\n        _selectedSuggestions.add(text);\n      }\n    });\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    final TextTheme textTheme = Theme.of(context).textTheme;\n    final Color primaryColor = Theme.of(context).primaryColor;\n    final ColorScheme colorScheme = Theme.of(context).colorScheme;\n\n    return Scaffold(\n      backgroundColor: Colors.white, // Light grey background\n      appBar: AppBar(\n        backgroundColor: Colors.white, // Match scaffold background\n        elevation: 0,\n        leading: IconButton(\n          icon: Icon(\n            Icons.arrow_back_ios,\n            color: primaryColor,\n            size: 20,\n          ), // Back icon with primary color and size 20\n          onPressed: () {\n            Navigator.of(context).pop();\n          },\n        ),\n        title: Text(\n          'App AI',\n          style: textTheme.titleLarge?.copyWith(\n            fontWeight: FontWeight.bold,\n            color: Colors.grey[800],\n            fontSize: 18, // Title font size 18\n          ),\n        ),\n        centerTitle: true,\n        actions: [\n          IconButton(\n            icon: Icon(Icons.calendar_month, color: primaryColor, size: 20),\n            onPressed: () {\n              Navigator.of(context).push(\n                PageRouteBuilder(\n                  pageBuilder: (_, __, ___) => DateTimelineScreen(),\n                ),\n              );\n            },\n          ),\n          IconButton(\n            icon: Icon(Icons.more_vert, color: primaryColor, size: 20),\n            onPressed: () {},\n          ),\n          const SizedBox(width: 8.0),\n        ],\n      ),\n      body: Column(\n        children: [\n          Expanded(\n            child: SingleChildScrollView(\n              padding: const EdgeInsets.symmetric(\n                horizontal: 24.0,\n                vertical: 24.0,\n              ),\n              child: Column(\n                crossAxisAlignment:\n                    CrossAxisAlignment\n                        .center, // Center the content horizontally\n                mainAxisAlignment:\n                    MainAxisAlignment\n                        .center, // Center content vertically within available space\n                children: [\n                  const SizedBox(height: 150),\n                  Text(\n                    'What can i help with?',\n                    style: textTheme.titleMedium?.copyWith(\n                      fontWeight: FontWeight.w600,\n                      color: Colors.grey[700],\n                    ),\n                    textAlign: TextAlign.center, // Center the text itself\n                  ),\n                  const SizedBox(height: 20.0),\n                  Center(\n                    // Center the Wrap widget (redundant with parent column's CrossAxisAlignment.center if Wrap takes full width, but good for safety)\n                    child: Wrap(\n                      spacing: 8.0, // horizontal spacing\n                      runSpacing: 8.0, // vertical spacing\n                      children: [\n                        _SuggestionChip(\n                          text: 'Trip Planning & Itineraries',\n                          onTap:\n                              () => _toggleSuggestion(\n                                'Trip Planning & Itineraries',\n                              ),\n                          isActive: _selectedSuggestions.contains(\n                            'Trip Planning & Itineraries',\n                          ),\n                          textTheme: textTheme,\n                          primaryColor: primaryColor,\n                        ),\n                        _SuggestionChip(\n                          text: 'Cost Optimization',\n                          onTap: () => _toggleSuggestion('Cost Optimization'),\n                          isActive: _selectedSuggestions.contains(\n                            'Cost Optimization',\n                          ),\n                          textTheme: textTheme,\n                          primaryColor: primaryColor,\n                        ),\n                        _SuggestionChip(\n                          text: 'Filtering System',\n                          onTap: () => _toggleSuggestion('Filtering System'),\n                          isActive: _selectedSuggestions.contains(\n                            'Filtering System',\n                          ),\n                          textTheme: textTheme,\n                          primaryColor: primaryColor,\n                        ),\n                        _SuggestionChip(\n                          text: 'Travel Safety & Security',\n                          onTap:\n                              () =>\n                                  _toggleSuggestion('Travel Safety & Security'),\n                          isActive: _selectedSuggestions.contains(\n                            'Travel Safety & Security',\n                          ),\n                          textTheme: textTheme,\n                          primaryColor: primaryColor,\n                        ),\n                        _SuggestionChip(\n                          text: 'Eco-Friendly Travel',\n                          onTap: () => _toggleSuggestion('Eco-Friendly Travel'),\n                          isActive: _selectedSuggestions.contains(\n                            'Eco-Friendly Travel',\n                          ),\n                          textTheme: textTheme,\n                          primaryColor: primaryColor,\n                        ),\n                        _SuggestionChip(\n                          text: 'AI-Powered Travel Reviews',\n                          onTap:\n                              () => _toggleSuggestion(\n                                'AI-Powered Travel Reviews',\n                              ),\n                          isActive: _selectedSuggestions.contains(\n                            'AI-Powered Travel Reviews',\n                          ),\n                          textTheme: textTheme,\n                          primaryColor: primaryColor,\n                        ),\n                        _SuggestionChip(\n                          text: 'More',\n                          onTap: () => _toggleSuggestion('More'),\n                          isActive: _selectedSuggestions.contains('More'),\n                          textTheme: textTheme,\n                          primaryColor: primaryColor,\n                        ),\n                      ],\n                    ),\n                  ),\n                ],\n              ),\n            ),\n          ),\n          // Audio recording bar at the bottom\n          _AudioRecordingBar(\n            primaryColor: primaryColor,\n            colorScheme: colorScheme,\n            textTheme: textTheme,\n          ),\n        ],\n      ),\n    );\n  }\n}\n\nclass _SuggestionChip extends StatelessWidget {\n  final String text;\n  final VoidCallback onTap;\n  final bool isActive; // Added isActive property\n  final TextTheme textTheme;\n  final Color primaryColor; // Added primaryColor for styling\n\n  const _SuggestionChip({\n    required this.text,\n    required this.onTap,\n    this.isActive = false, // Default to false\n    required this.textTheme,\n    required this.primaryColor,\n  });\n\n  @override\n  Widget build(BuildContext context) {\n    return GestureDetector(\n      onTap: onTap,\n      child: Container(\n        padding: const EdgeInsets.symmetric(horizontal: 16.0, vertical: 10.0),\n        decoration: BoxDecoration(\n          color:\n              isActive\n                  ? primaryColor.withOpacity(0.1)\n                  : Colors.white, // Background changes based on isActive\n          borderRadius: BorderRadius.circular(20.0), // Increased border radius\n          border: Border.all(\n            color: isActive ? primaryColor.withOpacity(0.3) : Colors.grey[300]!,\n            width: 1.0,\n          ),\n        ),\n        child: Text(\n          text,\n          style: textTheme.bodySmall?.copyWith(\n            color:\n                isActive\n                    ? primaryColor\n                    : Colors.grey[700], // Text color changes based on isActive\n            fontWeight:\n                isActive\n                    ? FontWeight.bold\n                    : FontWeight\n                        .normal, // Font weight changes based on isActive\n          ),\n        ),\n      ),\n    );\n  }\n}\n\nclass _AudioRecordingBar extends StatefulWidget {\n  final Color primaryColor;\n  final ColorScheme colorScheme;\n  final TextTheme textTheme;\n\n  const _AudioRecordingBar({\n    required this.primaryColor,\n    required this.colorScheme,\n    required this.textTheme,\n  });\n\n  @override\n  State<_AudioRecordingBar> createState() => _AudioRecordingBarState();\n}\n\nclass _AudioRecordingBarState extends State<_AudioRecordingBar> {\n  // This value would typically come from an audio recording process\n  // For UI demonstration, we'll keep it static or animate it if needed.\n  // Represents the \"progress\" of the audio visualization, 0.0 to 1.0.\n  double _audioProgress = 0.5;\n\n  @override\n  Widget build(BuildContext context) {\n    return Container(\n      padding: const EdgeInsets.symmetric(horizontal: 16.0, vertical: 12.0),\n      decoration: BoxDecoration(\n        color: widget.colorScheme.surface, // White background\n        boxShadow: [\n          BoxShadow(\n            color: Colors.grey.withOpacity(0.1),\n            spreadRadius: 1,\n            blurRadius: 5,\n            offset: const Offset(0, -3), // Shadow above the bar\n          ),\n        ],\n      ),\n      child: Row(\n        children: [\n          // Trash Can Icon\n          Container(\n            decoration: BoxDecoration(\n              color: Colors.grey[200],\n              borderRadius: BorderRadius.circular(10.0),\n            ),\n            child: IconButton(\n              icon: Icon(Icons.delete_outline, color: Colors.grey[700]),\n              onPressed: () {\n                // Handle delete action\n              },\n            ),\n          ),\n          const SizedBox(width: 12.0),\n          // Audio Waveform and Time\n          Expanded(\n            child: Container(\n              padding: const EdgeInsets.symmetric(horizontal: 12.0),\n              height: 48, // Fixed height for the bar\n              decoration: BoxDecoration(\n                color: Colors.grey[200], // Background for the waveform\n                borderRadius: BorderRadius.circular(10.0),\n              ),\n              child: Row(\n                children: [\n                  Expanded(\n                    child: CustomPaint(\n                      size: Size(\n                        double.infinity,\n                        30,\n                      ), // Height for the waveform inside the container\n                      painter: _WaveAudioBarPainter(\n                        primaryColor: widget.primaryColor,\n                        inactiveColor: Colors.grey[400]!,\n                        progress: _audioProgress,\n                      ),\n                    ),\n                  ),\n                  const SizedBox(width: 8.0),\n                  Text(\n                    '0:06', // Static time for now\n                    style: widget.textTheme.bodyMedium?.copyWith(\n                      color: Colors.grey[700],\n                      fontWeight: FontWeight.w500,\n                    ),\n                  ),\n                ],\n              ),\n            ),\n          ),\n          const SizedBox(width: 12.0),\n          // Up Arrow Icon (Send/Upload)\n          Container(\n            decoration: BoxDecoration(\n              color: widget.primaryColor,\n              borderRadius: BorderRadius.circular(10.0), // Rounded corners\n            ),\n            child: IconButton(\n              icon: Icon(\n                Icons.arrow_upward,\n                color: widget.colorScheme.onPrimary,\n              ),\n              onPressed: () {\n                // Handle send/upload action\n              },\n            ),\n          ),\n        ],\n      ),\n    );\n  }\n}\n\nclass _WaveAudioBarPainter extends CustomPainter {\n  final Color primaryColor;\n  final Color inactiveColor;\n  final double progress; // 0.0 to 1.0 to simulate playback progress\n\n  _WaveAudioBarPainter({\n    required this.primaryColor,\n    required this.inactiveColor,\n    this.progress = 0.0,\n  });\n\n  @override\n  void paint(Canvas canvas, Size size) {\n    final double width = size.width;\n    final double height = size.height;\n    const int numBars = 30; // Number of vertical bars\n    final double barWidth = (width / numBars) * 0.7; // Width of each bar\n    final double gapWidth = (width / numBars) * 0.3; // Gap between bars\n\n    final Random random = Random(0); // Use a fixed seed for consistent pattern\n\n    for (int i = 0; i < numBars; i++) {\n      final double x = i * (barWidth + gapWidth);\n      // Generate a random height, scaled to look like an audio waveform\n      final double barHeight =\n          (0.3 + random.nextDouble() * 0.7) *\n          height; // Vary height between 30% and 100% of available height\n\n      // Determine bar color based on progress\n      final double currentProgressPx = progress * width;\n      final Color barColor =\n          (x < currentProgressPx) ? primaryColor : inactiveColor;\n\n      final Paint paint = Paint()..color = barColor;\n\n      // Draw the bar. Rect.fromLTWH(left, top, width, height)\n      // Top calculated from bottom, so it grows upwards.\n      canvas.drawRRect(\n        RRect.fromRectAndRadius(\n          Rect.fromLTWH(x, height - barHeight, barWidth, barHeight),\n          const Radius.circular(2), // Slight rounded corners for bars\n        ),\n        paint,\n      );\n    }\n  }\n\n  @override\n  bool shouldRepaint(covariant _WaveAudioBarPainter oldDelegate) {\n    return oldDelegate.primaryColor != primaryColor ||\n        oldDelegate.inactiveColor != inactiveColor ||\n        oldDelegate.progress != progress;\n  }\n}\n```\n\n// File: lib\\screens\\ai_chat_section.dart\n```dart\nimport 'package:ai_travel_app_ui_kit/screens/date_timeline_screen.dart';\r\nimport 'package:flutter/material.dart';\r\n\r\nclass AIChatSection extends StatefulWidget {\r\n  const AIChatSection({super.key});\r\n\r\n  @override\r\n  State<AIChatSection> createState() => _AIChatSectionState();\r\n}\r\n\r\nclass _AIChatSectionState extends State<AIChatSection> {\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    final TextTheme textTheme = Theme.of(context).textTheme;\r\n    final Color primaryColor = Theme.of(context).primaryColor;\r\n    final ColorScheme colorScheme = Theme.of(context).colorScheme;\r\n\r\n    return Scaffold(\r\n      backgroundColor: Colors.white, // Light grey background\r\n      appBar: AppBar(\r\n        backgroundColor: Colors.white, // Match scaffold background\r\n        elevation: 0,\r\n        leading: IconButton(\r\n          icon: Icon(Icons.arrow_back_ios, color: primaryColor, size: 20),\r\n          onPressed: () {\r\n            Navigator.of(context).pop();\r\n          },\r\n        ),\r\n        title: Text(\r\n          'App AI',\r\n          style: textTheme.titleLarge?.copyWith(\r\n            fontWeight: FontWeight.bold,\r\n            color: Colors.grey[800],\r\n            fontSize: 18,\r\n          ),\r\n        ),\r\n        centerTitle: true,\r\n        actions: [\r\n          IconButton(\r\n            icon: Icon(Icons.calendar_month, color: primaryColor, size: 20),\r\n            onPressed: () {\r\n              Navigator.of(context).push(\r\n                PageRouteBuilder(\r\n                  pageBuilder: (_, __, ___) => DateTimelineScreen(),\r\n                ),\r\n              );\r\n            },\r\n          ),\r\n          IconButton(\r\n            icon: Icon(Icons.more_vert, color: primaryColor, size: 20),\r\n            onPressed: () {},\r\n          ),\r\n          const SizedBox(width: 8.0),\r\n        ],\r\n      ),\r\n      body: Column(\r\n        children: [\r\n          Expanded(\r\n            child: ListView(\r\n              reverse: true, // Make messages start from bottom\r\n              padding: const EdgeInsets.only(\r\n                left: 24.0,\r\n                right: 24.0,\r\n                top: 24.0,\r\n                bottom: 24.0,\r\n              ), // Added bottom padding here\r\n              children:\r\n                  [\r\n                    // Display messages in reverse order of how they appear in the image\r\n                    // Latest message (from user) first, then AI's response, then audio.\r\n                    _UserMessageBubble(\r\n                      text:\r\n                          'Suggest me some hotels with good rating minimum 4 star, under 20,000 BDT Budget, Wifi Available, Complimentary Breakfast Added, Location will be near Mirabazar Centar.',\r\n                      textTheme: textTheme,\r\n                      primaryColor: primaryColor,\r\n                    ),\r\n                    const SizedBox(height: 16.0),\r\n                    _AIMessageBubble(\r\n                      text:\r\n                          'Got it! Searching for hotels in Sylhet from March 20 for three nights. What\\'s your budget range?',\r\n                      textTheme: textTheme,\r\n                      colorScheme: colorScheme,\r\n                    ),\r\n                    const SizedBox(height: 16.0),\r\n                    // Audio message player (will be at the top of the list, thus bottom of screen)\r\n                    Align(\r\n                      alignment: Alignment.centerRight,\r\n                      child: _AudioMessagePlayer(primaryColor: primaryColor),\r\n                    ),\r\n                  ].reversed.toList(), // Reverse the list to match image order from top-to-bottom\r\n            ),\r\n          ),\r\n          // Message input bar at the bottom\r\n          Container(\r\n            padding: const EdgeInsets.symmetric(\r\n              horizontal: 16.0,\r\n              vertical: 12.0,\r\n            ),\r\n            color: colorScheme.surface,\r\n            child: Row(\r\n              children: [\r\n                IconButton(\r\n                  icon: Icon(Icons.add, color: Colors.grey[600]),\r\n                  onPressed: () {},\r\n                ),\r\n                const SizedBox(width: 8.0),\r\n                Expanded(\r\n                  child: TextField(\r\n                    decoration: InputDecoration(\r\n                      hintText: 'Message...',\r\n                      hintStyle: textTheme.bodyLarge?.copyWith(\r\n                        color: Colors.grey[500],\r\n                      ),\r\n                      filled: true,\r\n                      fillColor: Colors.grey[200],\r\n                      border: OutlineInputBorder(\r\n                        borderRadius: BorderRadius.circular(25.0),\r\n                        borderSide: BorderSide.none,\r\n                      ),\r\n                      contentPadding: const EdgeInsets.only(\r\n                        left: 16.0,\r\n                        top: 12.0,\r\n                        bottom: 12.0,\r\n                      ),\r\n                      suffixIcon: Padding(\r\n                        padding: const EdgeInsets.only(right: 16.0),\r\n                        child: Icon(Icons.mic, color: Colors.grey[600]),\r\n                      ),\r\n                    ),\r\n                    style: textTheme.bodyLarge?.copyWith(\r\n                      color: Colors.grey[850],\r\n                    ),\r\n                  ),\r\n                ),\r\n                const SizedBox(width: 8.0),\r\n                Container(\r\n                  decoration: BoxDecoration(\r\n                    color: primaryColor,\r\n                    shape: BoxShape.circle,\r\n                  ),\r\n                  child: IconButton(\r\n                    icon: Icon(Icons.send, color: colorScheme.onPrimary),\r\n                    onPressed: () {},\r\n                  ),\r\n                ),\r\n              ],\r\n            ),\r\n          ),\r\n        ],\r\n      ),\r\n    );\r\n  }\r\n}\r\n\r\nclass _AudioMessagePlayer extends StatefulWidget {\r\n  final Color primaryColor;\r\n  const _AudioMessagePlayer({required this.primaryColor});\r\n\r\n  @override\r\n  State<_AudioMessagePlayer> createState() => _AudioMessagePlayerState();\r\n}\r\n\r\nclass _AudioMessagePlayerState extends State<_AudioMessagePlayer> {\r\n  double _currentSliderValue = 0.5; // Initial value for the slider\r\n  bool _isPlaying = false; // State for play/pause button\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return Container(\r\n      width: 200,\r\n      padding: const EdgeInsets.symmetric(horizontal: 12.0, vertical: 8.0),\r\n      decoration: BoxDecoration(\r\n        color:\r\n            widget\r\n                .primaryColor, // Use primary color for audio message background\r\n        borderRadius: BorderRadius.circular(20.0),\r\n      ),\r\n      child: Row(\r\n        mainAxisSize: MainAxisSize.min,\r\n        children: [\r\n          IconButton(\r\n            padding: EdgeInsets.zero, // Remove default IconButton padding\r\n            constraints:\r\n                const BoxConstraints(), // Remove default IconButton constraints\r\n            icon: Icon(\r\n              _isPlaying ? Icons.pause : Icons.play_arrow,\r\n              color: Colors.white,\r\n              size: 24,\r\n            ),\r\n            onPressed: () {\r\n              setState(() {\r\n                _isPlaying = !_isPlaying; // Toggle play/pause state\r\n              });\r\n            },\r\n          ),\r\n          const SizedBox(width: 8.0),\r\n          Expanded(\r\n            child: SliderTheme(\r\n              data: SliderTheme.of(context).copyWith(\r\n                trackHeight: 2.0,\r\n                thumbShape: const RoundSliderThumbShape(\r\n                  enabledThumbRadius: 6.0,\r\n                ),\r\n                overlayShape: const RoundSliderOverlayShape(\r\n                  overlayRadius: 10.0,\r\n                ),\r\n                activeTrackColor: Colors.white, // White for active part\r\n                inactiveTrackColor: Colors.white.withValues(\r\n                  alpha: 0.5,\r\n                ), // Lighter white for inactive\r\n                thumbColor: Colors.white, // White thumb\r\n                overlayColor: Colors.white.withValues(alpha: 0.2),\r\n              ),\r\n              child: Slider(\r\n                value: _currentSliderValue,\r\n                min: 0.0,\r\n                max: 1.0,\r\n                onChanged: (double value) {\r\n                  setState(() {\r\n                    _currentSliderValue = value;\r\n                  });\r\n                },\r\n              ),\r\n            ),\r\n          ),\r\n          const SizedBox(width: 8.0),\r\n          Text(\r\n            '0:21',\r\n            style: Theme.of(\r\n              context,\r\n            ).textTheme.bodySmall?.copyWith(color: Colors.white),\r\n          ),\r\n        ],\r\n      ),\r\n    );\r\n  }\r\n}\r\n\r\nclass _AIMessageBubble extends StatelessWidget {\r\n  final String text;\r\n  final TextTheme textTheme;\r\n  final ColorScheme colorScheme;\r\n\r\n  const _AIMessageBubble({\r\n    required this.text,\r\n    required this.textTheme,\r\n    required this.colorScheme,\r\n  });\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return Row(\r\n      crossAxisAlignment: CrossAxisAlignment.start,\r\n      children: [\r\n        CircleAvatar(\r\n          radius: 16,\r\n          backgroundColor: Colors.grey[300],\r\n          child: Icon(Icons.person, color: Colors.grey[600], size: 20),\r\n        ),\r\n        const SizedBox(width: 8.0),\r\n        Expanded(\r\n          child: Container(\r\n            padding: const EdgeInsets.all(12.0),\r\n            decoration: BoxDecoration(\r\n              color: colorScheme.surface, // White background for AI message\r\n              borderRadius: BorderRadius.only(\r\n                topLeft: Radius.circular(16.0),\r\n                topRight: Radius.circular(16.0),\r\n                bottomRight: Radius.circular(16.0),\r\n                bottomLeft: Radius.circular(4.0),\r\n              ),\r\n            ),\r\n            child: Text(\r\n              text,\r\n              style: textTheme.bodyMedium?.copyWith(color: Colors.grey[800]),\r\n            ),\r\n          ),\r\n        ),\r\n      ],\r\n    );\r\n  }\r\n}\r\n\r\nclass _UserMessageBubble extends StatelessWidget {\r\n  final String text;\r\n  final TextTheme textTheme;\r\n  final Color primaryColor;\r\n\r\n  const _UserMessageBubble({\r\n    required this.text,\r\n    required this.textTheme,\r\n    required this.primaryColor,\r\n  });\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return Align(\r\n      alignment: Alignment.centerRight,\r\n      child: Container(\r\n        margin: const EdgeInsets.only(left: 50.0),\r\n        padding: const EdgeInsets.all(12.0),\r\n        decoration: BoxDecoration(\r\n          color: primaryColor, // Use primary color for user message background\r\n          borderRadius: BorderRadius.only(\r\n            topLeft: Radius.circular(16.0),\r\n            topRight: Radius.circular(16.0),\r\n            bottomLeft: Radius.circular(16.0),\r\n            bottomRight: Radius.circular(4.0),\r\n          ),\r\n        ),\r\n        child: Text(\r\n          text,\r\n          style: textTheme.bodyMedium?.copyWith(\r\n            color: Colors.white,\r\n          ), // White text on primary background\r\n        ),\r\n      ),\r\n    );\r\n  }\r\n}\n```\n\n// File: lib\\screens\\app_ai_screen.dart\n```dart\nimport 'package:ai_travel_app_ui_kit/screens/date_timeline_screen.dart';\nimport 'package:flutter/material.dart';\n\nclass AppAIScreen extends StatefulWidget {\n  const AppAIScreen({super.key});\n\n  @override\n  State<AppAIScreen> createState() => _AppAIScreenState();\n}\n\nclass _AppAIScreenState extends State<AppAIScreen> {\n  final Set<String> _selectedSuggestions = {}; // To manage selected chips\n\n  void _toggleSuggestion(String text) {\n    setState(() {\n      if (_selectedSuggestions.contains(text)) {\n        _selectedSuggestions.remove(text);\n      } else {\n        _selectedSuggestions.add(text);\n      }\n    });\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    final TextTheme textTheme = Theme.of(context).textTheme;\n    final Color primaryColor = Theme.of(context).primaryColor;\n    final ColorScheme colorScheme = Theme.of(context).colorScheme;\n\n    return Scaffold(\n      backgroundColor: Colors.white, // Light grey background\n      appBar: AppBar(\n        backgroundColor: Colors.transparent, // Match scaffold background\n        elevation: 0,\n        leading: IconButton(\n          icon: Icon(\n            Icons.arrow_back_ios,\n            color: primaryColor,\n            size: 20,\n          ), // Back icon with primary color and size 20\n          onPressed: () {\n            Navigator.of(context).pop();\n          },\n        ),\n        title: Text(\n          'App AI',\n          style: textTheme.titleLarge?.copyWith(\n            fontWeight: FontWeight.bold,\n            color: Colors.grey[800],\n            fontSize: 18, // Title font size 18\n          ),\n        ),\n        centerTitle: true,\n        actions: [\n          IconButton(\n            icon: Icon(\n              Icons.calendar_month,\n              color: primaryColor,\n              size: 20,\n            ), // Calendar icon with primary color and size 20\n            onPressed: () {\n              Navigator.of(context).push(\n                PageRouteBuilder(\n                  pageBuilder: (_, __, ___) => DateTimelineScreen(),\n                ),\n              );\n            },\n          ),\n          IconButton(\n            icon: Icon(\n              Icons.more_vert,\n              color: primaryColor,\n              size: 20,\n            ), // More icon with primary color and size 20\n            onPressed: () {},\n          ),\n          const SizedBox(width: 8.0),\n        ],\n      ),\n      body: Column(\n        children: [\n          Expanded(\n            child: SingleChildScrollView(\n              padding: const EdgeInsets.symmetric(\n                horizontal: 24.0,\n                vertical: 24.0,\n              ),\n              child: Column(\n                crossAxisAlignment:\n                    CrossAxisAlignment\n                        .center, // Center the content horizontally\n                mainAxisAlignment:\n                    MainAxisAlignment\n                        .center, // Center content vertically within available space\n                children: [\n                  SizedBox(height: 150),\n                  Text(\n                    'What can i help with?',\n                    style: textTheme.titleMedium?.copyWith(\n                      fontWeight: FontWeight.w600,\n                      color: Colors.grey[700],\n                    ),\n                    textAlign: TextAlign.center, // Center the text itself\n                  ),\n                  const SizedBox(height: 20.0),\n                  Center(\n                    // Center the Wrap widget (redundant with parent column's CrossAxisAlignment.center if Wrap takes full width, but good for safety)\n                    child: Wrap(\n                      spacing: 8.0, // horizontal spacing\n                      runSpacing: 8.0, // vertical spacing\n                      children: [\n                        _SuggestionChip(\n                          text: 'Trip Planning & Itineraries',\n                          onTap:\n                              () => _toggleSuggestion(\n                                'Trip Planning & Itineraries',\n                              ),\n                          isActive: _selectedSuggestions.contains(\n                            'Trip Planning & Itineraries',\n                          ),\n                          textTheme: textTheme,\n                          primaryColor: primaryColor,\n                        ),\n                        _SuggestionChip(\n                          text: 'Cost Optimization',\n                          onTap: () => _toggleSuggestion('Cost Optimization'),\n                          isActive: _selectedSuggestions.contains(\n                            'Cost Optimization',\n                          ),\n                          textTheme: textTheme,\n                          primaryColor: primaryColor,\n                        ),\n                        _SuggestionChip(\n                          text: 'Filtering System',\n                          onTap: () => _toggleSuggestion('Filtering System'),\n                          isActive: _selectedSuggestions.contains(\n                            'Filtering System',\n                          ),\n                          textTheme: textTheme,\n                          primaryColor: primaryColor,\n                        ),\n                        _SuggestionChip(\n                          text: 'Travel Safety & Security',\n                          onTap:\n                              () =>\n                                  _toggleSuggestion('Travel Safety & Security'),\n                          isActive: _selectedSuggestions.contains(\n                            'Travel Safety & Security',\n                          ),\n                          textTheme: textTheme,\n                          primaryColor: primaryColor,\n                        ),\n                        _SuggestionChip(\n                          text: 'Eco-Friendly Travel',\n                          onTap: () => _toggleSuggestion('Eco-Friendly Travel'),\n                          isActive: _selectedSuggestions.contains(\n                            'Eco-Friendly Travel',\n                          ),\n                          textTheme: textTheme,\n                          primaryColor: primaryColor,\n                        ),\n                        _SuggestionChip(\n                          text: 'AI-Powered Travel Reviews',\n                          onTap:\n                              () => _toggleSuggestion(\n                                'AI-Powered Travel Reviews',\n                              ),\n                          isActive: _selectedSuggestions.contains(\n                            'AI-Powered Travel Reviews',\n                          ),\n                          textTheme: textTheme,\n                          primaryColor: primaryColor,\n                        ),\n                        _SuggestionChip(\n                          text: 'More',\n                          onTap: () => _toggleSuggestion('More'),\n                          isActive: _selectedSuggestions.contains('More'),\n                          textTheme: textTheme,\n                          primaryColor: primaryColor,\n                        ),\n                      ],\n                    ),\n                  ),\n                ],\n              ),\n            ),\n          ),\n          // Message input bar at the bottom\n          Container(\n            padding: const EdgeInsets.symmetric(\n              horizontal: 16.0,\n              vertical: 12.0,\n            ),\n            color: colorScheme.surface, // White background for the input bar\n            child: Row(\n              children: [\n                IconButton(\n                  icon: Icon(Icons.add, color: Colors.grey[600]),\n                  onPressed: () {},\n                ),\n                const SizedBox(width: 8.0),\n                Expanded(\n                  child: TextField(\n                    decoration: InputDecoration(\n                      hintText: 'Message...',\n                      hintStyle: textTheme.bodyLarge?.copyWith(\n                        color: Colors.grey[500],\n                      ),\n                      filled: true,\n                      fillColor: Colors.grey[200], // Light grey background\n                      border: OutlineInputBorder(\n                        borderRadius: BorderRadius.circular(\n                          25.0,\n                        ), // More rounded corners\n                        borderSide: BorderSide.none,\n                      ),\n                      contentPadding: const EdgeInsets.only(\n                        left: 16.0,\n                        top: 12.0,\n                        bottom: 12.0,\n                      ), // Removed original right padding here\n                      suffixIcon: Padding(\n                        // Wrapped mic icon in Padding\n                        padding: const EdgeInsets.only(\n                          right: 16.0,\n                        ), // Added right padding\n                        child: Icon(\n                          Icons.mic,\n                          color: Colors.grey[600],\n                        ), // Microphone icon\n                      ),\n                    ),\n                    style: textTheme.bodyLarge?.copyWith(\n                      color: Colors.grey[850],\n                    ),\n                  ),\n                ),\n                const SizedBox(width: 8.0),\n                Container(\n                  decoration: BoxDecoration(\n                    color: primaryColor, // Use primaryColor for send button\n                    shape: BoxShape.circle,\n                  ),\n                  child: IconButton(\n                    icon: Icon(\n                      Icons.send,\n                      color: colorScheme.onPrimary,\n                    ), // White send icon\n                    onPressed: () {},\n                  ),\n                ),\n              ],\n            ),\n          ),\n        ],\n      ),\n    );\n  }\n}\n\nclass _SuggestionChip extends StatelessWidget {\n  final String text;\n  final VoidCallback onTap;\n  final bool isActive; // Added isActive property\n  final TextTheme textTheme;\n  final Color primaryColor; // Added primaryColor for styling\n\n  const _SuggestionChip({\n    required this.text,\n    required this.onTap,\n    this.isActive = false, // Default to false\n    required this.textTheme,\n    required this.primaryColor,\n  });\n\n  @override\n  Widget build(BuildContext context) {\n    return GestureDetector(\n      onTap: onTap,\n      child: Container(\n        padding: const EdgeInsets.symmetric(horizontal: 16.0, vertical: 10.0),\n        decoration: BoxDecoration(\n          color:\n              isActive\n                  ? primaryColor.withValues(alpha: 0.1)\n                  : Colors.white, // Background changes based on isActive\n          borderRadius: BorderRadius.circular(20.0), // Increased border radius\n          border: Border.all(\n            color:\n                isActive\n                    ? primaryColor.withValues(alpha: 0.3)\n                    : Colors.grey[300]!,\n            width: 1.0,\n          ),\n        ),\n        child: Text(\n          text,\n          style: textTheme.bodySmall?.copyWith(\n            color:\n                isActive\n                    ? primaryColor\n                    : Colors.grey[700], // Text color changes based on isActive\n            fontWeight:\n                isActive\n                    ? FontWeight.bold\n                    : FontWeight\n                        .normal, // Font weight changes based on isActive\n          ),\n        ),\n      ),\n    );\n  }\n}\n```\n\n// File: lib\\screens\\booking_pending_screen.dart\n```dart\nimport 'package:ai_travel_app_ui_kit/screens/order_status_screen.dart';\nimport 'package:flutter/material.dart';\nimport 'package:ai_travel_app_ui_kit/components/buttons/primary_text_button.dart';\n\nclass BookingPendingScreen extends StatelessWidget {\n  const BookingPendingScreen({super.key});\n\n  @override\n  Widget build(BuildContext context) {\n    final TextTheme textTheme = Theme.of(context).textTheme;\n    final Color primaryColor = Theme.of(context).primaryColor;\n    final ColorScheme colorScheme = Theme.of(context).colorScheme;\n\n    return Scaffold(\n      backgroundColor: Colors.white, // Light grey background\n      appBar: AppBar(\n        scrolledUnderElevation: 0,\n        backgroundColor: Colors.transparent, // Match scaffold background\n        elevation: 0, // No shadow\n        leading: IconButton(\n          icon: Icon(Icons.close, color: primaryColor, size: 20), // Close icon\n          onPressed: () {\n            Navigator.of(context).pop();\n          },\n        ),\n        title: Text(\n          'Request to book',\n          style: textTheme.titleLarge?.copyWith(\n            fontSize: 18,\n            fontWeight: FontWeight.bold,\n            color: Colors.grey[800],\n          ),\n        ),\n        centerTitle: true,\n      ),\n      body: Column(\n        children: [\n          Expanded(\n            child: SingleChildScrollView(\n              padding: const EdgeInsets.symmetric(horizontal: 24.0),\n              child: Column(\n                crossAxisAlignment: CrossAxisAlignment.center,\n                children: [\n                  const SizedBox(height: 32.0),\n                  Text(\n                    'Your stay is pending',\n                    style: textTheme.headlineSmall?.copyWith(\n                      fontWeight: FontWeight.bold,\n                      color: Colors.grey[800],\n                    ),\n                    textAlign: TextAlign.center,\n                  ),\n                  const SizedBox(height: 12.0),\n                  Text(\n                    'Your request is on hold—awaiting confirmation from the host or service provider. We\\'ll notify you as soon as there\\'s an update.',\n                    style: textTheme.bodyLarge?.copyWith(\n                      color: Colors.grey[600],\n                      height: 1.5,\n                    ),\n                    textAlign: TextAlign.center,\n                  ),\n                  const SizedBox(height: 24.0),\n                  _HotelDetailCard(\n                    hotelName: 'Hotel Supreme',\n                    address: '4140 Parker Rd. Allentown, Sylhet 3100',\n                    pricePerDay: '\\$126',\n                    rating: '4.9 (234 reviews)',\n                    imageUrl:\n                        'https://picsum.photos/400/250?random=bookingpending',\n                    textTheme: textTheme,\n                    colorScheme: colorScheme,\n                  ),\n                  const SizedBox(height: 40.0), // Space before bottom button\n                ],\n              ),\n            ),\n          ),\n          Padding(\n            padding: const EdgeInsets.symmetric(\n              horizontal: 24.0,\n              vertical: 24.0,\n            ),\n            child: PrimaryTextButton(\n              text: 'Got It',\n              onPressed: () {\n                Navigator.pop(context);\n              },\n            ),\n          ),\n        ],\n      ),\n    );\n  }\n}\n\nclass _HotelDetailCard extends StatefulWidget {\n  final String hotelName;\n  final String address;\n  final String pricePerDay;\n  final String rating;\n  final String imageUrl;\n  final TextTheme textTheme;\n  final ColorScheme colorScheme;\n\n  const _HotelDetailCard({\n    required this.hotelName,\n    required this.address,\n    required this.pricePerDay,\n    required this.rating,\n    required this.imageUrl,\n    required this.textTheme,\n    required this.colorScheme,\n  });\n\n  @override\n  State<_HotelDetailCard> createState() => _HotelDetailCardState();\n}\n\nclass _HotelDetailCardState extends State<_HotelDetailCard> {\n  bool _isFavorite = false; // State for the heart icon\n\n  @override\n  Widget build(BuildContext context) {\n    return Container(\n      padding: const EdgeInsets.all(16.0),\n      decoration: BoxDecoration(\n        color: widget.colorScheme.surface, // White background\n        borderRadius: BorderRadius.circular(15.0),\n        boxShadow: [\n          BoxShadow(\n            color: Colors.grey.withValues(alpha: 0.1),\n            spreadRadius: 5,\n            blurRadius: 5,\n            offset: const Offset(0, 5), // Subtle shadow\n          ),\n        ],\n      ),\n      child: Column(\n        crossAxisAlignment: CrossAxisAlignment.start,\n        children: [\n          Stack(\n            children: [\n              ClipRRect(\n                borderRadius: BorderRadius.circular(10.0),\n                child: Image.network(\n                  widget.imageUrl,\n                  height: 220,\n                  width: double.infinity,\n                  fit: BoxFit.cover,\n                  errorBuilder:\n                      (context, error, stackTrace) => Container(\n                        height: 220,\n                        width: double.infinity,\n                        color: Colors.grey[300],\n                        child: Icon(\n                          Icons.broken_image,\n                          color: Colors.grey[600],\n                          size: 80,\n                        ),\n                      ),\n                ),\n              ),\n              Positioned(\n                top: 8.0,\n                right: 8.0,\n                child: Container(\n                  decoration: BoxDecoration(\n                    color: Colors.white.withOpacity(0.8),\n                    shape: BoxShape.circle,\n                  ),\n                  child: IconButton(\n                    icon: Icon(\n                      _isFavorite ? Icons.favorite : Icons.favorite_border,\n                      color: _isFavorite ? Colors.red : Colors.grey[700],\n                    ),\n                    onPressed: () {\n                      setState(() {\n                        _isFavorite = !_isFavorite;\n                      });\n                    },\n                  ),\n                ),\n              ),\n            ],\n          ),\n          const SizedBox(height: 16.0),\n          Row(\n            mainAxisAlignment: MainAxisAlignment.spaceBetween,\n            children: [\n              Expanded(\n                child: Column(\n                  crossAxisAlignment: CrossAxisAlignment.start,\n                  children: [\n                    Text(\n                      widget.hotelName,\n                      style: widget.textTheme.titleMedium?.copyWith(\n                        fontWeight: FontWeight.bold,\n                        color: Colors.grey[800],\n                      ),\n                      maxLines: 1,\n                      overflow: TextOverflow.ellipsis,\n                    ),\n                    const SizedBox(height: 4.0),\n                    Text(\n                      widget.address,\n                      style: widget.textTheme.bodySmall?.copyWith(\n                        color: Colors.grey[600],\n                      ),\n                      maxLines: 1,\n                      overflow: TextOverflow.ellipsis,\n                    ),\n                  ],\n                ),\n              ),\n              Text(\n                '${widget.pricePerDay}/Day',\n                style: widget.textTheme.titleSmall?.copyWith(\n                  fontWeight: FontWeight.bold,\n                  color: Colors.grey[800],\n                ),\n              ),\n            ],\n          ),\n          const SizedBox(height: 8.0),\n          Row(\n            children: [\n              Icon(Icons.star, color: Colors.amber, size: 16),\n              const SizedBox(width: 4.0),\n              Text(\n                widget.rating,\n                style: widget.textTheme.bodySmall?.copyWith(\n                  color: Colors.grey[700],\n                ),\n              ),\n            ],\n          ),\n        ],\n      ),\n    );\n  }\n}\n```\n\n// File: lib\\screens\\book_hotel_screen.dart\n```dart\nimport 'package:ai_travel_app_ui_kit/screens/date_timeline_screen.dart';\r\nimport 'package:flutter/material.dart';\r\n\r\nimport 'package:ai_travel_app_ui_kit/components/buttons/primary_text_button.dart'; // Import PrimaryTextButton\r\n\r\nclass BookHotelScreen extends StatelessWidget {\r\n  const BookHotelScreen({super.key});\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    final TextTheme textTheme = Theme.of(context).textTheme;\r\n    final Color primaryColor = Theme.of(context).primaryColor;\r\n\r\n    return Scaffold(\r\n      backgroundColor: Colors.white, // Light grey background matching the image\r\n      appBar: AppBar(\r\n        backgroundColor: Colors.transparent, // Match scaffold background\r\n        elevation: 0, // No shadow\r\n        leading: IconButton(\r\n          icon: Icon(Icons.close, color: primaryColor, size: 20), // Close icon\r\n          onPressed: () {\r\n            Navigator.of(context).pop();\r\n          },\r\n        ),\r\n        title: Text(\r\n          'Book a Hotel',\r\n          style: textTheme.titleLarge?.copyWith(\r\n            fontSize: 18,\r\n            fontWeight: FontWeight.bold,\r\n            color: Colors.grey[800],\r\n          ),\r\n        ),\r\n        centerTitle: true,\r\n      ),\r\n      body: Padding(\r\n        padding: const EdgeInsets.symmetric(horizontal: 24.0),\r\n        child: Column(\r\n          crossAxisAlignment: CrossAxisAlignment.start,\r\n          children: [\r\n            const SizedBox(height: 32.0),\r\n            Text(\r\n              'Book a Hotel From?',\r\n              style: textTheme.titleMedium?.copyWith(\r\n                fontWeight: FontWeight.w600, // Semi-bold\r\n                color: Colors.grey[700],\r\n              ),\r\n            ),\r\n            const SizedBox(height: 8.0),\r\n            TextField(\r\n              decoration: InputDecoration(\r\n                hintText: 'Sylhet, Bangl', // Example hint text\r\n                hintStyle: textTheme.bodyLarge?.copyWith(\r\n                  color: Colors.grey[500],\r\n                ),\r\n                filled: true,\r\n                fillColor:\r\n                    Colors.grey[100], // White background for the input field\r\n                prefixIcon: Padding(\r\n                  // Add padding around the prefix icon\r\n                  padding: const EdgeInsets.only(\r\n                    left: 12.0,\r\n                    right: 8.0,\r\n                  ), // Adjust padding as needed\r\n                  child: Icon(\r\n                    Icons.location_on,\r\n                    color: primaryColor,\r\n                  ), // Location icon\r\n                ),\r\n                suffixIcon: Padding(\r\n                  // Add padding around the suffix icon\r\n                  padding: const EdgeInsets.only(\r\n                    left: 8.0,\r\n                    right: 12.0,\r\n                  ), // Adjust padding as needed\r\n                  child: Icon(\r\n                    Icons.keyboard_arrow_down,\r\n                    color: Colors.grey[600],\r\n                  ), // Dropdown arrow\r\n                ),\r\n                border: OutlineInputBorder(\r\n                  borderRadius: BorderRadius.circular(\r\n                    15.0,\r\n                  ), // More rounded corners\r\n                  borderSide: BorderSide.none, // No border line\r\n                ),\r\n                contentPadding: const EdgeInsets.symmetric(\r\n                  horizontal: 16.0,\r\n                  vertical: 16.0,\r\n                ),\r\n              ),\r\n              style: textTheme.bodyLarge?.copyWith(color: Colors.grey[850]),\r\n            ),\r\n            const Spacer(), // Pushes the button to the bottom\r\n            PrimaryTextButton(\r\n              // Using the UIKit PrimaryTextButton\r\n              text: 'Next',\r\n              onPressed: () {\r\n                Navigator.of(context).push(\r\n                  PageRouteBuilder(\r\n                    pageBuilder: (_, __, ___) => DateTimelineScreen(),\r\n                  ),\r\n                );\r\n              },\r\n            ),\r\n            const SizedBox(height: 40.0), // Bottom padding\r\n          ],\r\n        ),\r\n      ),\r\n    );\r\n  }\r\n}\n```\n\n// File: lib\\screens\\date_timeline_screen.dart\n```dart\nimport 'package:ai_travel_app_ui_kit/screens/book_hotel_screen.dart';\nimport 'package:ai_travel_app_ui_kit/screens/explore_hotels_screen.dart';\nimport 'package:ai_travel_app_ui_kit/screens/reservation_details_screen.dart';\nimport 'package:flutter/material.dart';\nimport 'package:ai_travel_app_ui_kit/components/buttons/primary_text_button.dart';\n\nclass DateTimelineScreen extends StatefulWidget {\n  const DateTimelineScreen({super.key});\n\n  @override\n  State<DateTimelineScreen> createState() => _DateTimelineScreenState();\n}\n\nclass _DateTimelineScreenState extends State<DateTimelineScreen> {\n  DateTime _focusedDay = DateTime.now(); // Current month for display\n  DateTime? _selectedStartDate;\n  DateTime? _selectedEndDate;\n\n  @override\n  void initState() {\n    super.initState();\n    _focusedDay = DateTime(2025, 3, 1);\n    _selectedStartDate = DateTime(2025, 3, 10);\n    _selectedEndDate = DateTime(2025, 3, 13);\n  }\n\n  void _onDaySelected(DateTime selectedDay) {\n    setState(() {\n      if (_selectedStartDate == null || _selectedEndDate != null) {\n        _selectedStartDate = selectedDay;\n        _selectedEndDate = null;\n      } else if (selectedDay.isBefore(_selectedStartDate!)) {\n        _selectedEndDate = _selectedStartDate;\n        _selectedStartDate = selectedDay;\n      } else if (selectedDay.isAfter(_selectedStartDate!)) {\n        _selectedEndDate = selectedDay;\n      } else {\n        _selectedStartDate = null;\n        _selectedEndDate = null;\n      }\n    });\n  }\n\n  bool _isDaySelected(DateTime day) {\n    if (_selectedStartDate == null) return false;\n    if (_selectedEndDate == null) {\n      return day.year == _selectedStartDate!.year &&\n          day.month == _selectedStartDate!.month &&\n          day.day == _selectedStartDate!.day;\n    }\n    return (day.isAtSameMomentAs(_selectedStartDate!) ||\n            day.isAtSameMomentAs(_selectedEndDate!)) ||\n        (day.isAfter(_selectedStartDate!) && day.isBefore(_selectedEndDate!));\n  }\n\n  bool _isRangeMiddle(DateTime day) {\n    if (_selectedStartDate == null || _selectedEndDate == null) return false;\n    return day.isAfter(_selectedStartDate!) && day.isBefore(_selectedEndDate!);\n  }\n\n  void _goToPreviousMonth() {\n    setState(() {\n      _focusedDay = DateTime(_focusedDay.year, _focusedDay.month - 1, 1);\n    });\n  }\n\n  void _goToNextMonth() {\n    setState(() {\n      _focusedDay = DateTime(_focusedDay.year, _focusedDay.month + 1, 1);\n    });\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    final TextTheme textTheme = Theme.of(context).textTheme;\n    final ColorScheme colorScheme = Theme.of(context).colorScheme;\n    final Color primaryColor = Theme.of(context).primaryColor;\n\n    final DateTime firstDayOfMonth = DateTime(\n      _focusedDay.year,\n      _focusedDay.month,\n      1,\n    );\n    final int daysInMonth =\n        DateTime(_focusedDay.year, _focusedDay.month + 1, 0).day;\n    final int blankDays = firstDayOfMonth.weekday % 7;\n\n    return Scaffold(\n      backgroundColor: Colors.white,\n      appBar: AppBar(\n        scrolledUnderElevation: 0,\n        backgroundColor: Colors.transparent,\n        elevation: 0,\n        leading: IconButton(\n          icon: Icon(Icons.arrow_back_ios, color: primaryColor, size: 20),\n          onPressed: () {\n            Navigator.of(context).pop();\n          },\n        ),\n        title: Text(\n          'Date & Timeline',\n          style: textTheme.titleLarge?.copyWith(\n            fontWeight: FontWeight.bold,\n            color: Colors.grey[800],\n            fontSize: 18,\n          ),\n        ),\n        centerTitle: true,\n      ),\n      body: SingleChildScrollView(\n        child: Padding(\n          padding: const EdgeInsets.symmetric(horizontal: 24.0),\n          child: Column(\n            crossAxisAlignment: CrossAxisAlignment.start,\n            children: [\n              const SizedBox(height: 32.0),\n              Text(\n                'Select Date & Stay Timeline?',\n                style: textTheme.titleMedium?.copyWith(\n                  fontWeight: FontWeight.w600,\n                  color: Colors.grey[700],\n                ),\n              ),\n              const SizedBox(height: 16.0),\n              Container(\n                padding: const EdgeInsets.all(16.0),\n                decoration: BoxDecoration(\n                  color: colorScheme.surface,\n                  borderRadius: BorderRadius.circular(15.0),\n                  boxShadow: [\n                    BoxShadow(\n                      color: Colors.grey.withAlpha(25),\n                      spreadRadius: 5,\n                      blurRadius: 5,\n                      offset: const Offset(0, 5),\n                    ),\n                  ],\n                ),\n                child: Column(\n                  children: [\n                    Row(\n                      mainAxisAlignment: MainAxisAlignment.spaceBetween,\n                      children: [\n                        IconButton(\n                          icon: Icon(\n                            Icons.arrow_back_ios,\n                            size: 16,\n                            color: Colors.grey[700],\n                          ),\n                          onPressed: _goToPreviousMonth,\n                        ),\n                        Text(\n                          '${_focusedDay.monthName} ${_focusedDay.year}',\n                          style: textTheme.titleMedium?.copyWith(\n                            fontWeight: FontWeight.bold,\n                            color: Colors.grey[800],\n                          ),\n                        ),\n                        IconButton(\n                          icon: Icon(\n                            Icons.arrow_forward_ios,\n                            size: 16,\n                            color: Colors.grey[700],\n                          ),\n                          onPressed: _goToNextMonth,\n                        ),\n                      ],\n                    ),\n                    const SizedBox(height: 16.0),\n                    Row(\n                      mainAxisAlignment: MainAxisAlignment.spaceAround,\n                      children: const [\n                        _WeekdayText('Sun'),\n                        _WeekdayText('Mon'),\n                        _WeekdayText('Tue'),\n                        _WeekdayText('Wed'),\n                        _WeekdayText('Thu'),\n                        _WeekdayText('Fri'),\n                        _WeekdayText('Sat'),\n                      ],\n                    ),\n                    const SizedBox(height: 8.0),\n                    GridView.builder(\n                      shrinkWrap: true,\n                      physics: const NeverScrollableScrollPhysics(),\n                      gridDelegate:\n                          const SliverGridDelegateWithFixedCrossAxisCount(\n                            crossAxisCount: 7,\n                            childAspectRatio: 1.0,\n                          ),\n                      itemCount:\n                          blankDays +\n                          daysInMonth +\n                          (7 - ((blankDays + daysInMonth) % 7)) % 7,\n                      itemBuilder: (context, index) {\n                        if (index < blankDays ||\n                            index >= blankDays + daysInMonth) {\n                          return const SizedBox.shrink();\n                        }\n\n                        final int dayNumber = index - blankDays + 1;\n                        final DateTime day = DateTime(\n                          _focusedDay.year,\n                          _focusedDay.month,\n                          dayNumber,\n                        );\n                        final bool isSelected = _isDaySelected(day);\n                        final bool isRangeMiddle = _isRangeMiddle(day);\n                        final bool isStartDate =\n                            _selectedStartDate != null &&\n                            day.isAtSameMomentAs(_selectedStartDate!);\n                        final bool isEndDate =\n                            _selectedEndDate != null &&\n                            day.isAtSameMomentAs(_selectedEndDate!);\n\n                        Color textColor = Colors.grey[800]!;\n                        Color backgroundColor = Colors.transparent;\n                        BorderRadius borderRadius = BorderRadius.circular(8.0);\n\n                        if (isSelected) {\n                          if (isStartDate || isEndDate) {\n                            backgroundColor = primaryColor;\n                            textColor = colorScheme.onPrimary;\n                            if (isStartDate && isEndDate) {\n                              borderRadius = BorderRadius.circular(8.0);\n                            } else if (isStartDate &&\n                                _selectedEndDate != null) {\n                              borderRadius = const BorderRadius.only(\n                                topLeft: Radius.circular(8.0),\n                                bottomLeft: Radius.circular(8.0),\n                              );\n                            } else if (isEndDate &&\n                                _selectedStartDate != null) {\n                              borderRadius = const BorderRadius.only(\n                                topRight: Radius.circular(8.0),\n                                bottomRight: Radius.circular(8.0),\n                              );\n                            }\n                          } else if (isRangeMiddle) {\n                            backgroundColor = primaryColor.withAlpha(25);\n                            textColor = primaryColor;\n                            borderRadius = BorderRadius.zero;\n                          }\n                        }\n\n                        return GestureDetector(\n                          onTap: () => _onDaySelected(day),\n                          child: Container(\n                            margin: const EdgeInsets.symmetric(horizontal: 1.0),\n                            decoration: BoxDecoration(\n                              color: backgroundColor,\n                              borderRadius: borderRadius,\n                            ),\n                            alignment: Alignment.center,\n                            child: Text(\n                              '$dayNumber',\n                              style: textTheme.bodyMedium?.copyWith(\n                                color: textColor,\n                                fontWeight:\n                                    isSelected\n                                        ? FontWeight.bold\n                                        : FontWeight.normal,\n                              ),\n                            ),\n                          ),\n                        );\n                      },\n                    ),\n                  ],\n                ),\n              ),\n              const SizedBox(height: 24.0),\n              PrimaryTextButton(\n                text: 'Next',\n                onPressed: () {\n                  Navigator.of(context).push(\n                    PageRouteBuilder(\n                      pageBuilder: (_, __, ___) => ExploreHotelsScreen(),\n                    ),\n                  );\n                },\n              ),\n              const SizedBox(height: 40.0),\n            ],\n          ),\n        ),\n      ),\n    );\n  }\n}\n\nclass _WeekdayText extends StatelessWidget {\n  final String text;\n  const _WeekdayText(this.text);\n\n  @override\n  Widget build(BuildContext context) {\n    return Expanded(\n      child: Center(\n        child: Text(\n          text,\n          style: Theme.of(context).textTheme.bodySmall?.copyWith(\n            color: Colors.grey[600],\n            fontWeight: FontWeight.bold,\n          ),\n        ),\n      ),\n    );\n  }\n}\n\nextension on DateTime {\n  String get monthName {\n    switch (month) {\n      case 1:\n        return 'January';\n      case 2:\n        return 'February';\n      case 3:\n        return 'March';\n      case 4:\n        return 'April';\n      case 5:\n        return 'May';\n      case 6:\n        return 'June';\n      case 7:\n        return 'July';\n      case 8:\n        return 'August';\n      case 9:\n        return 'September';\n      case 10:\n        return 'October';\n      case 11:\n        return 'November';\n      case 12:\n        return 'December';\n      default:\n        return '';\n    }\n  }\n}\n```\n\n// File: lib\\screens\\explore_hotels_screen.dart\n```dart\nimport 'package:ai_travel_app_ui_kit/screens/hotel_filter_screen.dart';\nimport 'package:flutter/material.dart';\n\nclass ExploreHotelsScreen extends StatefulWidget {\n  const ExploreHotelsScreen({super.key});\n\n  @override\n  State<ExploreHotelsScreen> createState() => _ExploreHotelsScreenState();\n}\n\nclass _ExploreHotelsScreenState extends State<ExploreHotelsScreen> {\n  // Use a Set to store currently active filter chips\n  final Set<String> _activeFilters = {\n    'Hotel - Sylhet',\n  }; // Initialize with 'Hotel - Sylhet' active\n\n  void _toggleFilter(String filterText) {\n    setState(() {\n      if (_activeFilters.contains(filterText)) {\n        _activeFilters.remove(filterText);\n      } else {\n        _activeFilters.add(filterText);\n      }\n    });\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    final TextTheme textTheme = Theme.of(context).textTheme;\n    final Color primaryColor = Theme.of(context).primaryColor;\n    final ColorScheme colorScheme = Theme.of(context).colorScheme;\n\n    return Scaffold(\n      backgroundColor: Colors.white, // Light grey background\n      appBar: AppBar(\n        scrolledUnderElevation: 0,\n        backgroundColor: Colors.transparent, // Match scaffold background\n        elevation: 0, // No shadow\n        leading: IconButton(\n          icon: Icon(\n            Icons.close,\n            color: primaryColor,\n          ), // Close icon with primaryColor\n          onPressed: () {\n            Navigator.of(context).pop(); // Navigate back\n          },\n        ),\n        title: Text(\n          'Book a Hotel',\n          style: textTheme.titleLarge?.copyWith(\n            fontWeight: FontWeight.bold,\n            color: Colors.grey[800],\n            fontSize:\n                18, // Based on previous request for title size consistency\n          ),\n        ),\n        centerTitle: true,\n        actions: [\n          IconButton(\n            icon: Container(\n              padding: const EdgeInsets.all(6.0),\n              decoration: BoxDecoration(\n                color: primaryColor.withValues(\n                  alpha: 0.1,\n                ), // Light primary color background\n                borderRadius: BorderRadius.circular(8.0),\n              ),\n              child: Icon(\n                Icons.psychology_outlined,\n                color: primaryColor,\n              ), // AI icon\n            ),\n            onPressed: () {},\n          ),\n          IconButton(\n            icon: Icon(\n              Icons.filter_list,\n              color: Colors.grey[700],\n            ), // Filter icon\n            onPressed: () {\n              Navigator.of(context).push(\n                PageRouteBuilder(\n                  pageBuilder: (_, __, ___) => HotelFilterScreen(),\n                ),\n              );\n            },\n          ),\n          const SizedBox(width: 8.0),\n        ],\n      ),\n      body: Column(\n        crossAxisAlignment: CrossAxisAlignment.start,\n        children: [\n          Padding(\n            padding: const EdgeInsets.symmetric(\n              horizontal: 24.0,\n              vertical: 16.0,\n            ),\n            child: SingleChildScrollView(\n              scrollDirection: Axis.horizontal,\n              child: Row(\n                children: [\n                  _FilterChip(\n                    text: 'Hotel - Sylhet',\n                    onTap: () => _toggleFilter('Hotel - Sylhet'),\n                    isActive: _activeFilters.contains('Hotel - Sylhet'),\n                    primaryColor: primaryColor,\n                    textTheme: textTheme,\n                  ),\n                  const SizedBox(width: 8.0),\n                  _FilterChip(\n                    text: '4 Days',\n                    onTap: () => _toggleFilter('4 Days'),\n                    isActive: _activeFilters.contains('4 Days'),\n                    primaryColor: primaryColor,\n                    textTheme: textTheme,\n                  ),\n                  const SizedBox(width: 8.0),\n                  _FilterChip(\n                    text: 'Check in - Mar 10',\n                    onTap: () => _toggleFilter('Check in - Mar 10'),\n                    isActive: _activeFilters.contains('Check in - Mar 10'),\n                    primaryColor: primaryColor,\n                    textTheme: textTheme,\n                  ),\n                  const SizedBox(width: 8.0),\n                  // Add more chips if needed\n                ],\n              ),\n            ),\n          ),\n          const SizedBox(height: 16.0),\n          Padding(\n            padding: const EdgeInsets.symmetric(horizontal: 24.0),\n            child: Text(\n              'Available Hotels, Choose by yourself',\n              style: textTheme.titleMedium?.copyWith(\n                fontWeight: FontWeight.w600,\n                color: Colors.grey[800],\n              ),\n            ),\n          ),\n          Padding(\n            padding: const EdgeInsets.symmetric(horizontal: 24.0),\n            child: Text(\n              'Your Selection applies to all traveler and hotel authority.',\n              style: textTheme.bodySmall?.copyWith(color: Colors.grey[600]),\n            ),\n          ),\n          const SizedBox(height: 24.0),\n          Expanded(\n            child: ListView.builder(\n              padding: const EdgeInsets.symmetric(horizontal: 24.0),\n              itemCount: 5, // Example: 5 hotel cards\n              itemBuilder: (context, index) {\n                return Padding(\n                  padding: const EdgeInsets.only(bottom: 16.0),\n                  child: _HotelCard(\n                    hotelName: 'Hotel Supreme', // Example data\n                    address: '4140 Parker Rd. Allentown, Sylhet 3100',\n                    pricePerDay: '\\$126',\n                    rating: '4.9 (234 reviews)',\n                    imageUrl:\n                        'https://picsum.photos/400/250?random=$index', // Placeholder image\n                    textTheme: textTheme,\n                    colorScheme: colorScheme,\n                    onTap: () {},\n                  ),\n                );\n              },\n            ),\n          ),\n        ],\n      ),\n    );\n  }\n}\n\nclass _FilterChip extends StatelessWidget {\n  final String text;\n  final VoidCallback onTap;\n  final bool isActive;\n  final Color primaryColor;\n  final TextTheme textTheme;\n\n  const _FilterChip({\n    required this.text,\n    required this.onTap,\n    this.isActive = false,\n    required this.primaryColor,\n    required this.textTheme,\n  });\n\n  @override\n  Widget build(BuildContext context) {\n    return GestureDetector(\n      onTap: onTap,\n      child: Container(\n        padding: const EdgeInsets.symmetric(horizontal: 16.0, vertical: 10.0),\n        decoration: BoxDecoration(\n          color:\n              isActive\n                  ? primaryColor.withValues(alpha: 0.1)\n                  : Colors.transparent,\n          borderRadius: BorderRadius.circular(20.0), // Increased border radius\n          border: Border.all(\n            color:\n                isActive\n                    ? primaryColor.withValues(alpha: 0.3)\n                    : Colors.grey[300]!,\n            width: 1.5,\n          ),\n        ),\n        child: Text(\n          text,\n          style: textTheme.bodySmall?.copyWith(\n            color: isActive ? primaryColor : Colors.grey[700],\n            fontWeight: isActive ? FontWeight.bold : FontWeight.normal,\n          ),\n        ),\n      ),\n    );\n  }\n}\n\nclass _HotelCard extends StatefulWidget {\n  final String hotelName;\n  final String address;\n  final String pricePerDay;\n  final String rating;\n  final String imageUrl;\n  final TextTheme textTheme;\n  final ColorScheme colorScheme;\n  final VoidCallback onTap; // Added for making the card tappable\n\n  const _HotelCard({\n    required this.hotelName,\n    required this.address,\n    required this.pricePerDay,\n    required this.rating,\n    required this.imageUrl,\n    required this.textTheme,\n    required this.colorScheme,\n    required this.onTap, // Added key to constructor\n  });\n\n  @override\n  State<_HotelCard> createState() => _HotelCardState();\n}\n\nclass _HotelCardState extends State<_HotelCard> {\n  bool _isFavorite = false; // State for the heart icon\n\n  @override\n  Widget build(BuildContext context) {\n    return Material(\n      color: widget.colorScheme.surface, // Card background color\n      borderRadius: BorderRadius.circular(15.0),\n      child: InkWell(\n        borderRadius: BorderRadius.circular(15.0),\n        onTap: widget.onTap,\n        hoverColor: widget.colorScheme.primary.withValues(alpha: 0.05),\n        splashColor: widget.colorScheme.primary.withValues(alpha: 0.2),\n        child: Container(\n          padding: const EdgeInsets.all(16.0),\n          decoration: BoxDecoration(\n            borderRadius: BorderRadius.circular(15.0),\n            // Removed color and shadow from here to prevent overriding Material effects\n          ),\n          child: Column(\n            crossAxisAlignment: CrossAxisAlignment.start,\n            children: [\n              Stack(\n                children: [\n                  ClipRRect(\n                    borderRadius: BorderRadius.circular(10.0),\n                    child: Image.network(\n                      widget.imageUrl,\n                      height: 220, // Increased image height\n                      width: double.infinity,\n                      fit: BoxFit.cover,\n                      errorBuilder:\n                          (context, error, stackTrace) => Container(\n                            height: 220, // Match increased height\n                            width: double.infinity,\n                            color: Colors.grey[300],\n                            child: Icon(\n                              Icons.broken_image,\n                              color: Colors.grey[600],\n                            ),\n                          ),\n                    ),\n                  ),\n                  Positioned(\n                    top: 8.0,\n                    right: 8.0,\n                    child: Container(\n                      decoration: BoxDecoration(\n                        color: Colors.white.withValues(alpha: 0.8),\n                        shape: BoxShape.circle,\n                      ),\n                      child: IconButton(\n                        icon: Icon(\n                          _isFavorite ? Icons.favorite : Icons.favorite_border,\n                          color: _isFavorite ? Colors.red : Colors.grey[700],\n                        ),\n                        onPressed: () {\n                          setState(() {\n                            _isFavorite = !_isFavorite;\n                          });\n                        },\n                      ),\n                    ),\n                  ),\n                ],\n              ),\n              const SizedBox(height: 16.0),\n              Row(\n                mainAxisAlignment: MainAxisAlignment.spaceBetween,\n                children: [\n                  Expanded(\n                    child: Column(\n                      crossAxisAlignment: CrossAxisAlignment.start,\n                      children: [\n                        Text(\n                          widget.hotelName,\n                          style: widget.textTheme.titleMedium?.copyWith(\n                            fontWeight: FontWeight.bold,\n                            color: Colors.grey[800],\n                          ),\n                          maxLines: 1,\n                          overflow: TextOverflow.ellipsis,\n                        ),\n                        const SizedBox(height: 4.0),\n                        Text(\n                          widget.address,\n                          style: widget.textTheme.bodySmall?.copyWith(\n                            color: Colors.grey[600],\n                          ),\n                          maxLines: 1,\n                          overflow: TextOverflow.ellipsis,\n                        ),\n                      ],\n                    ),\n                  ),\n                  Text(\n                    '${widget.pricePerDay}/Day',\n                    style: widget.textTheme.titleSmall?.copyWith(\n                      fontWeight: FontWeight.bold,\n                      color: Colors.grey[800],\n                    ),\n                  ),\n                ],\n              ),\n              const SizedBox(height: 8.0),\n              Row(\n                children: [\n                  Icon(Icons.star, color: Colors.amber, size: 16),\n                  const SizedBox(width: 4.0),\n                  Text(\n                    widget.rating,\n                    style: widget.textTheme.bodySmall?.copyWith(\n                      color: Colors.grey[700],\n                    ),\n                  ),\n                ],\n              ),\n            ],\n          ),\n        ),\n      ),\n    );\n  }\n}\n```\n\n// File: lib\\screens\\home_screen.dart\n```dart\nimport 'package:ai_travel_app_ui_kit/screens/ai_chat_section.dart';\r\nimport 'package:ai_travel_app_ui_kit/screens/explore_hotels_screen.dart';\r\nimport 'package:ai_travel_app_ui_kit/screens/order_status_screen.dart';\r\nimport 'package:ai_travel_app_ui_kit/screens/profile_screen.dart';\r\nimport 'package:flutter/material.dart';\r\n\r\nclass HomeScreen extends StatefulWidget {\r\n  const HomeScreen({super.key});\r\n\r\n  @override\r\n  State<HomeScreen> createState() => _HomeScreenState();\r\n}\r\n\r\nclass _HomeScreenState extends State<HomeScreen> {\r\n  int _selectedIndex = 0; // Current tab index\r\n\r\n  // List of screens/widgets for each tab\r\n  final List<Widget> _screens = [\r\n    const HomeTabContent(), // Home content\r\n    const OrderStatusScreen(), // Bookings content\r\n    const ExploreHotelsScreen(), // Favorites content\r\n    const ProfileScreen(), // Profile content\r\n  ];\r\n\r\n  void _onItemTapped(int index) {\r\n    setState(() {\r\n      _selectedIndex = index;\r\n    });\r\n  }\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    final Color primaryColor = Theme.of(context).primaryColor;\r\n    final ColorScheme colorScheme = Theme.of(context).colorScheme;\r\n    final TextTheme textTheme = Theme.of(context).textTheme;\r\n\r\n    return Scaffold(\r\n      backgroundColor: Colors.white,\r\n      body: IndexedStack(index: _selectedIndex, children: _screens),\r\n      floatingActionButton: FloatingActionButton(\r\n        onPressed: () {\r\n          Navigator.of(context).push(\r\n            PageRouteBuilder(pageBuilder: (_, __, ___) => AIChatSection()),\r\n          );\r\n        },\r\n        shape: RoundedRectangleBorder(\r\n          borderRadius: BorderRadius.circular(50.0),\r\n        ),\r\n        child: Icon(Icons.psychology_outlined),\r\n      ),\r\n      floatingActionButtonLocation: FloatingActionButtonLocation.endFloat,\r\n      bottomNavigationBar: _BottomNavigationBar(\r\n        primaryColor: primaryColor,\r\n        colorScheme: colorScheme,\r\n        textTheme: textTheme,\r\n        selectedIndex: _selectedIndex,\r\n        onItemTapped: _onItemTapped,\r\n      ),\r\n    );\r\n  }\r\n}\r\n\r\n// Home Tab Content (your original home screen content)\r\nclass HomeTabContent extends StatefulWidget {\r\n  const HomeTabContent({super.key});\r\n\r\n  @override\r\n  State<HomeTabContent> createState() => _HomeTabContentState();\r\n}\r\n\r\nclass _HomeTabContentState extends State<HomeTabContent> {\r\n  String _selectedCategory = 'Hotel';\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    final TextTheme textTheme = Theme.of(context).textTheme;\r\n    final Color primaryColor = Theme.of(context).primaryColor;\r\n    final ColorScheme colorScheme = Theme.of(context).colorScheme;\r\n\r\n    return Scaffold(\r\n      backgroundColor: Colors.white,\r\n      appBar: AppBar(\r\n        backgroundColor: Colors.white,\r\n        elevation: 0,\r\n        scrolledUnderElevation: 0,\r\n        titleSpacing: 0,\r\n        title: Padding(\r\n          padding: const EdgeInsets.only(left: 24.0),\r\n          child: Row(\r\n            children: [\r\n              CircleAvatar(\r\n                radius: 20,\r\n                backgroundColor: Colors.grey[300],\r\n                backgroundImage: NetworkImage(\r\n                  'https://picsum.photos/100/100?random=profile_home',\r\n                ),\r\n              ),\r\n              const SizedBox(width: 12.0),\r\n              Column(\r\n                crossAxisAlignment: CrossAxisAlignment.start,\r\n                children: [\r\n                  Text(\r\n                    'Hello, Jane!',\r\n                    style: textTheme.bodyLarge?.copyWith(\r\n                      fontWeight: FontWeight.bold,\r\n                      color: Colors.grey[800],\r\n                    ),\r\n                  ),\r\n                  Text(\r\n                    'Hope you are having a good time',\r\n                    style: textTheme.bodySmall?.copyWith(\r\n                      color: Colors.grey[600],\r\n                    ),\r\n                  ),\r\n                ],\r\n              ),\r\n            ],\r\n          ),\r\n        ),\r\n        actions: [\r\n          IconButton(\r\n            icon: Icon(Icons.notifications_none, color: primaryColor, size: 24),\r\n            onPressed: () {},\r\n          ),\r\n          const SizedBox(width: 16.0),\r\n        ],\r\n      ),\r\n      body: SingleChildScrollView(\r\n        padding: const EdgeInsets.symmetric(horizontal: 24.0),\r\n        child: Column(\r\n          crossAxisAlignment: CrossAxisAlignment.start,\r\n          children: [\r\n            const SizedBox(height: 24.0),\r\n            // Search Bar\r\n            TextField(\r\n              decoration: InputDecoration(\r\n                hintText: 'Search for your next adventure',\r\n                hintStyle: textTheme.bodyLarge?.copyWith(\r\n                  color: Colors.grey[500],\r\n                ),\r\n                filled: true,\r\n                fillColor: Colors.grey[100],\r\n                prefixIcon: Padding(\r\n                  padding: const EdgeInsets.only(left: 16.0, right: 8.0),\r\n                  child: Icon(Icons.search, color: primaryColor),\r\n                ),\r\n                suffixIcon: Container(\r\n                  margin: const EdgeInsets.only(right: 8.0),\r\n                  padding: const EdgeInsets.all(8.0),\r\n                  decoration: BoxDecoration(\r\n                    color: Colors.transparent,\r\n                    borderRadius: BorderRadius.circular(10.0),\r\n                  ),\r\n                  child: Icon(Icons.location_on, color: primaryColor),\r\n                ),\r\n                border: OutlineInputBorder(\r\n                  borderRadius: BorderRadius.circular(15.0),\r\n                  borderSide: BorderSide.none,\r\n                ),\r\n                contentPadding: const EdgeInsets.symmetric(vertical: 16.0),\r\n              ),\r\n              style: textTheme.bodyLarge?.copyWith(color: Colors.grey[850]),\r\n            ),\r\n            const SizedBox(height: 24.0),\r\n            // Categories\r\n            Text(\r\n              'Explore Categories',\r\n              style: textTheme.titleMedium?.copyWith(\r\n                fontWeight: FontWeight.bold,\r\n                color: Colors.grey[800],\r\n              ),\r\n            ),\r\n            const SizedBox(height: 16.0),\r\n            SingleChildScrollView(\r\n              scrollDirection: Axis.horizontal,\r\n              child: Row(\r\n                children: [\r\n                  _CategoryChip(\r\n                    text: 'Hotel',\r\n                    isSelected: _selectedCategory == 'Hotel',\r\n                    onTap: () {\r\n                      setState(() {\r\n                        _selectedCategory = 'Hotel';\r\n                      });\r\n                    },\r\n                    primaryColor: primaryColor,\r\n                    textTheme: textTheme,\r\n                  ),\r\n                  const SizedBox(width: 12.0),\r\n                  _CategoryChip(\r\n                    text: 'Convention Center',\r\n                    isSelected: _selectedCategory == 'Convention Center',\r\n                    onTap: () {\r\n                      setState(() {\r\n                        _selectedCategory = 'Convention Center';\r\n                      });\r\n                    },\r\n                    primaryColor: primaryColor,\r\n                    textTheme: textTheme,\r\n                  ),\r\n                  const SizedBox(width: 12.0),\r\n                  _CategoryChip(\r\n                    text: 'Flights',\r\n                    isSelected: _selectedCategory == 'Flights',\r\n                    onTap: () {\r\n                      setState(() {\r\n                        _selectedCategory = 'Flights';\r\n                      });\r\n                    },\r\n                    primaryColor: primaryColor,\r\n                    textTheme: textTheme,\r\n                  ),\r\n                  const SizedBox(width: 12.0),\r\n                  _CategoryChip(\r\n                    text: 'Travel',\r\n                    isSelected: _selectedCategory == 'Travel',\r\n                    onTap: () {\r\n                      setState(() {\r\n                        _selectedCategory = 'Travel';\r\n                      });\r\n                    },\r\n                    primaryColor: primaryColor,\r\n                    textTheme: textTheme,\r\n                  ),\r\n                ],\r\n              ),\r\n            ),\r\n            const SizedBox(height: 24.0),\r\n            // Featured Destination\r\n            Text(\r\n              'Featured Destination',\r\n              style: textTheme.titleMedium?.copyWith(\r\n                fontWeight: FontWeight.bold,\r\n                color: Colors.grey[800],\r\n              ),\r\n            ),\r\n            const SizedBox(height: 16.0),\r\n            _HotelCard(\r\n              hotelName: 'The Westin Dhaka',\r\n              address: 'Gulshan 2, Dhaka',\r\n              pricePerDay: '\\$180',\r\n              rating: '4.8 (1.5k reviews)',\r\n              imageUrl: 'https://picsum.photos/400/250?random=featured',\r\n              textTheme: textTheme,\r\n              colorScheme: colorScheme,\r\n              onTap: () {},\r\n            ),\r\n            const SizedBox(height: 24.0),\r\n            // Recently Booked\r\n            Text(\r\n              'Recently Booked',\r\n              style: textTheme.titleMedium?.copyWith(\r\n                fontWeight: FontWeight.bold,\r\n                color: Colors.grey[800],\r\n              ),\r\n            ),\r\n            const SizedBox(height: 16.0),\r\n            ListView.builder(\r\n              shrinkWrap: true,\r\n              physics: const NeverScrollableScrollPhysics(),\r\n              itemCount: 3,\r\n              itemBuilder: (context, index) {\r\n                return Padding(\r\n                  padding: const EdgeInsets.only(bottom: 16.0),\r\n                  child: _HotelCard(\r\n                    hotelName: 'Hotel Supreme - Booking ${index + 1}',\r\n                    address: '4140 Parker Rd. Allentown, Sylhet 3100',\r\n                    pricePerDay: '\\$126',\r\n                    rating: '4.9 (234 reviews)',\r\n                    imageUrl:\r\n                        'https://picsum.photos/400/250?random=${index + 10}',\r\n                    textTheme: textTheme,\r\n                    colorScheme: colorScheme,\r\n                    onTap: () {},\r\n                  ),\r\n                );\r\n              },\r\n            ),\r\n            const SizedBox(height: 80.0),\r\n          ],\r\n        ),\r\n      ),\r\n    );\r\n  }\r\n}\r\n\r\n// Bookings Tab Content\r\nclass BookingsTabContent extends StatelessWidget {\r\n  const BookingsTabContent({super.key});\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    final TextTheme textTheme = Theme.of(context).textTheme;\r\n    final Color primaryColor = Theme.of(context).primaryColor;\r\n\r\n    return Scaffold(\r\n      backgroundColor: Colors.white,\r\n      appBar: AppBar(\r\n        backgroundColor: Colors.white,\r\n        elevation: 0,\r\n        scrolledUnderElevation: 0,\r\n        title: Text(\r\n          'My Bookings',\r\n          style: textTheme.titleLarge?.copyWith(\r\n            fontWeight: FontWeight.bold,\r\n            color: Colors.grey[800],\r\n          ),\r\n        ),\r\n        centerTitle: true,\r\n      ),\r\n      body: Padding(\r\n        padding: const EdgeInsets.all(24.0),\r\n        child: Column(\r\n          children: [\r\n            // Tab selection for booking status\r\n            Container(\r\n              decoration: BoxDecoration(\r\n                color: Colors.grey[100],\r\n                borderRadius: BorderRadius.circular(12.0),\r\n              ),\r\n              child: Row(\r\n                children: [\r\n                  Expanded(\r\n                    child: Container(\r\n                      padding: const EdgeInsets.symmetric(vertical: 12.0),\r\n                      decoration: BoxDecoration(\r\n                        color: primaryColor,\r\n                        borderRadius: BorderRadius.circular(12.0),\r\n                      ),\r\n                      child: Text(\r\n                        'Upcoming',\r\n                        textAlign: TextAlign.center,\r\n                        style: textTheme.bodyMedium?.copyWith(\r\n                          color: Colors.white,\r\n                          fontWeight: FontWeight.bold,\r\n                        ),\r\n                      ),\r\n                    ),\r\n                  ),\r\n                  Expanded(\r\n                    child: Container(\r\n                      padding: const EdgeInsets.symmetric(vertical: 12.0),\r\n                      child: Text(\r\n                        'Past',\r\n                        textAlign: TextAlign.center,\r\n                        style: textTheme.bodyMedium?.copyWith(\r\n                          color: Colors.grey[600],\r\n                        ),\r\n                      ),\r\n                    ),\r\n                  ),\r\n                ],\r\n              ),\r\n            ),\r\n            const SizedBox(height: 24.0),\r\n            // Booking list\r\n            Expanded(\r\n              child: ListView.builder(\r\n                itemCount: 5,\r\n                itemBuilder: (context, index) {\r\n                  return Container(\r\n                    margin: const EdgeInsets.only(bottom: 16.0),\r\n                    padding: const EdgeInsets.all(16.0),\r\n                    decoration: BoxDecoration(\r\n                      color: Colors.white,\r\n                      borderRadius: BorderRadius.circular(15.0),\r\n                      boxShadow: [\r\n                        BoxShadow(\r\n                          color: Colors.grey.withOpacity(0.1),\r\n                          spreadRadius: 1,\r\n                          blurRadius: 5,\r\n                          offset: const Offset(0, 2),\r\n                        ),\r\n                      ],\r\n                    ),\r\n                    child: Row(\r\n                      children: [\r\n                        ClipRRect(\r\n                          borderRadius: BorderRadius.circular(10.0),\r\n                          child: Image.network(\r\n                            'https://picsum.photos/80/80?random=booking$index',\r\n                            width: 80,\r\n                            height: 80,\r\n                            fit: BoxFit.cover,\r\n                          ),\r\n                        ),\r\n                        const SizedBox(width: 16.0),\r\n                        Expanded(\r\n                          child: Column(\r\n                            crossAxisAlignment: CrossAxisAlignment.start,\r\n                            children: [\r\n                              Text(\r\n                                'Hotel Booking ${index + 1}',\r\n                                style: textTheme.titleMedium?.copyWith(\r\n                                  fontWeight: FontWeight.bold,\r\n                                  color: Colors.grey[800],\r\n                                ),\r\n                              ),\r\n                              const SizedBox(height: 4.0),\r\n                              Text(\r\n                                'Check-in: Dec ${20 + index}, 2024',\r\n                                style: textTheme.bodySmall?.copyWith(\r\n                                  color: Colors.grey[600],\r\n                                ),\r\n                              ),\r\n                              const SizedBox(height: 8.0),\r\n                              Container(\r\n                                padding: const EdgeInsets.symmetric(\r\n                                  horizontal: 8.0,\r\n                                  vertical: 4.0,\r\n                                ),\r\n                                decoration: BoxDecoration(\r\n                                  color: Colors.green.withOpacity(0.1),\r\n                                  borderRadius: BorderRadius.circular(6.0),\r\n                                ),\r\n                                child: Text(\r\n                                  'Confirmed',\r\n                                  style: textTheme.bodySmall?.copyWith(\r\n                                    color: Colors.green[700],\r\n                                    fontWeight: FontWeight.bold,\r\n                                  ),\r\n                                ),\r\n                              ),\r\n                            ],\r\n                          ),\r\n                        ),\r\n                      ],\r\n                    ),\r\n                  );\r\n                },\r\n              ),\r\n            ),\r\n          ],\r\n        ),\r\n      ),\r\n    );\r\n  }\r\n}\r\n\r\n// Favorites Tab Content\r\nclass FavoritesTabContent extends StatelessWidget {\r\n  const FavoritesTabContent({super.key});\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    final TextTheme textTheme = Theme.of(context).textTheme;\r\n    final ColorScheme colorScheme = Theme.of(context).colorScheme;\r\n\r\n    return Scaffold(\r\n      backgroundColor: Colors.white,\r\n      appBar: AppBar(\r\n        backgroundColor: Colors.white,\r\n        elevation: 0,\r\n        scrolledUnderElevation: 0,\r\n        title: Text(\r\n          'Favorites',\r\n          style: textTheme.titleLarge?.copyWith(\r\n            fontWeight: FontWeight.bold,\r\n            color: Colors.grey[800],\r\n          ),\r\n        ),\r\n        centerTitle: true,\r\n      ),\r\n      body: Padding(\r\n        padding: const EdgeInsets.all(24.0),\r\n        child: GridView.builder(\r\n          gridDelegate: const SliverGridDelegateWithFixedCrossAxisCount(\r\n            crossAxisCount: 2,\r\n            crossAxisSpacing: 16.0,\r\n            mainAxisSpacing: 16.0,\r\n            childAspectRatio: 0.8,\r\n          ),\r\n          itemCount: 6,\r\n          itemBuilder: (context, index) {\r\n            return _HotelCard(\r\n              hotelName: 'Favorite Hotel ${index + 1}',\r\n              address: 'City Location ${index + 1}',\r\n              pricePerDay: '\\$${120 + index * 20}',\r\n              rating: '4.${7 + index % 3} (${200 + index * 50} reviews)',\r\n              imageUrl: 'https://picsum.photos/200/150?random=fav$index',\r\n              textTheme: textTheme,\r\n              colorScheme: colorScheme,\r\n              onTap: () {},\r\n            );\r\n          },\r\n        ),\r\n      ),\r\n    );\r\n  }\r\n}\r\n\r\n// Profile Tab Content\r\nclass ProfileTabContent extends StatelessWidget {\r\n  const ProfileTabContent({super.key});\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    final TextTheme textTheme = Theme.of(context).textTheme;\r\n    final Color primaryColor = Theme.of(context).primaryColor;\r\n\r\n    return Scaffold(\r\n      backgroundColor: Colors.white,\r\n      appBar: AppBar(\r\n        backgroundColor: Colors.white,\r\n        elevation: 0,\r\n        scrolledUnderElevation: 0,\r\n        title: Text(\r\n          'Profile',\r\n          style: textTheme.titleLarge?.copyWith(\r\n            fontWeight: FontWeight.bold,\r\n            color: Colors.grey[800],\r\n          ),\r\n        ),\r\n        centerTitle: true,\r\n        actions: [\r\n          IconButton(\r\n            icon: Icon(Icons.settings_outlined, color: primaryColor),\r\n            onPressed: () {},\r\n          ),\r\n        ],\r\n      ),\r\n      body: SingleChildScrollView(\r\n        padding: const EdgeInsets.all(24.0),\r\n        child: Column(\r\n          children: [\r\n            // Profile header\r\n            CircleAvatar(\r\n              radius: 50,\r\n              backgroundColor: Colors.grey[300],\r\n              backgroundImage: NetworkImage(\r\n                'https://picsum.photos/200/200?random=profile',\r\n              ),\r\n            ),\r\n            const SizedBox(height: 16.0),\r\n            Text(\r\n              'Jane Doe',\r\n              style: textTheme.titleLarge?.copyWith(\r\n                fontWeight: FontWeight.bold,\r\n                color: Colors.grey[800],\r\n              ),\r\n            ),\r\n            Text(\r\n              'jane.doe@example.com',\r\n              style: textTheme.bodyMedium?.copyWith(color: Colors.grey[600]),\r\n            ),\r\n            const SizedBox(height: 32.0),\r\n            // Profile options\r\n            _ProfileOption(\r\n              icon: Icons.person_outline,\r\n              title: 'Personal Information',\r\n              onTap: () {},\r\n              textTheme: textTheme,\r\n            ),\r\n            _ProfileOption(\r\n              icon: Icons.payment_outlined,\r\n              title: 'Payment Methods',\r\n              onTap: () {},\r\n              textTheme: textTheme,\r\n            ),\r\n            _ProfileOption(\r\n              icon: Icons.notifications_outlined,\r\n              title: 'Notifications',\r\n              onTap: () {},\r\n              textTheme: textTheme,\r\n            ),\r\n            _ProfileOption(\r\n              icon: Icons.security_outlined,\r\n              title: 'Security',\r\n              onTap: () {},\r\n              textTheme: textTheme,\r\n            ),\r\n            _ProfileOption(\r\n              icon: Icons.help_outline,\r\n              title: 'Help & Support',\r\n              onTap: () {},\r\n              textTheme: textTheme,\r\n            ),\r\n            _ProfileOption(\r\n              icon: Icons.info_outline,\r\n              title: 'About',\r\n              onTap: () {},\r\n              textTheme: textTheme,\r\n            ),\r\n            const SizedBox(height: 32.0),\r\n            // Logout button\r\n            Container(\r\n              width: double.infinity,\r\n              child: ElevatedButton(\r\n                onPressed: () {},\r\n                style: ElevatedButton.styleFrom(\r\n                  backgroundColor: Colors.red[50],\r\n                  foregroundColor: Colors.red[700],\r\n                  elevation: 0,\r\n                  padding: const EdgeInsets.symmetric(vertical: 16.0),\r\n                  shape: RoundedRectangleBorder(\r\n                    borderRadius: BorderRadius.circular(12.0),\r\n                  ),\r\n                ),\r\n                child: Text(\r\n                  'Logout',\r\n                  style: textTheme.bodyLarge?.copyWith(\r\n                    fontWeight: FontWeight.bold,\r\n                    color: Colors.red[700],\r\n                  ),\r\n                ),\r\n              ),\r\n            ),\r\n          ],\r\n        ),\r\n      ),\r\n    );\r\n  }\r\n}\r\n\r\nclass _ProfileOption extends StatelessWidget {\r\n  final IconData icon;\r\n  final String title;\r\n  final VoidCallback onTap;\r\n  final TextTheme textTheme;\r\n\r\n  const _ProfileOption({\r\n    required this.icon,\r\n    required this.title,\r\n    required this.onTap,\r\n    required this.textTheme,\r\n  });\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return Container(\r\n      margin: const EdgeInsets.only(bottom: 8.0),\r\n      child: InkWell(\r\n        onTap: onTap,\r\n        borderRadius: BorderRadius.circular(12.0),\r\n        child: Container(\r\n          padding: const EdgeInsets.all(16.0),\r\n          decoration: BoxDecoration(\r\n            color: Colors.grey[50],\r\n            borderRadius: BorderRadius.circular(12.0),\r\n          ),\r\n          child: Row(\r\n            children: [\r\n              Icon(icon, color: Colors.grey[700]),\r\n              const SizedBox(width: 16.0),\r\n              Expanded(\r\n                child: Text(\r\n                  title,\r\n                  style: textTheme.bodyLarge?.copyWith(color: Colors.grey[800]),\r\n                ),\r\n              ),\r\n              Icon(Icons.chevron_right, color: Colors.grey[400]),\r\n            ],\r\n          ),\r\n        ),\r\n      ),\r\n    );\r\n  }\r\n}\r\n\r\nclass _CategoryChip extends StatelessWidget {\r\n  final String text;\r\n  final bool isSelected;\r\n  final VoidCallback onTap;\r\n  final Color primaryColor;\r\n  final TextTheme textTheme;\r\n\r\n  const _CategoryChip({\r\n    required this.text,\r\n    required this.isSelected,\r\n    required this.onTap,\r\n    required this.primaryColor,\r\n    required this.textTheme,\r\n  });\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return GestureDetector(\r\n      onTap: onTap,\r\n      child: Container(\r\n        padding: const EdgeInsets.symmetric(horizontal: 20.0, vertical: 12.0),\r\n        decoration: BoxDecoration(\r\n          color: isSelected ? primaryColor : Colors.transparent,\r\n          borderRadius: BorderRadius.circular(60.0),\r\n          border: Border.all(color: Colors.grey[300]!, width: 1.0),\r\n        ),\r\n        child: Text(\r\n          text,\r\n          style: textTheme.bodyMedium?.copyWith(\r\n            color: isSelected ? Colors.white : Colors.grey[700],\r\n            fontWeight: isSelected ? FontWeight.bold : FontWeight.normal,\r\n          ),\r\n        ),\r\n      ),\r\n    );\r\n  }\r\n}\r\n\r\nclass _HotelCard extends StatefulWidget {\r\n  final String hotelName;\r\n  final String address;\r\n  final String pricePerDay;\r\n  final String rating;\r\n  final String imageUrl;\r\n  final TextTheme textTheme;\r\n  final ColorScheme colorScheme;\r\n  final VoidCallback onTap;\r\n\r\n  const _HotelCard({\r\n    required this.hotelName,\r\n    required this.address,\r\n    required this.pricePerDay,\r\n    required this.rating,\r\n    required this.imageUrl,\r\n    required this.textTheme,\r\n    required this.colorScheme,\r\n    required this.onTap,\r\n  });\r\n\r\n  @override\r\n  State<_HotelCard> createState() => _HotelCardState();\r\n}\r\n\r\nclass _HotelCardState extends State<_HotelCard> {\r\n  bool _isFavorite = false;\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return Material(\r\n      color: widget.colorScheme.surface,\r\n      borderRadius: BorderRadius.circular(15.0),\r\n      child: InkWell(\r\n        borderRadius: BorderRadius.circular(15.0),\r\n        onTap: widget.onTap,\r\n        hoverColor: widget.colorScheme.primary.withValues(alpha: 0.05),\r\n        splashColor: widget.colorScheme.primary.withValues(alpha: 0.2),\r\n        child: Container(\r\n          padding: const EdgeInsets.all(16.0),\r\n          decoration: BoxDecoration(borderRadius: BorderRadius.circular(15.0)),\r\n          child: Column(\r\n            crossAxisAlignment: CrossAxisAlignment.start,\r\n            children: [\r\n              Stack(\r\n                children: [\r\n                  ClipRRect(\r\n                    borderRadius: BorderRadius.circular(10.0),\r\n                    child: Image.network(\r\n                      widget.imageUrl,\r\n                      height: 220,\r\n                      width: double.infinity,\r\n                      fit: BoxFit.cover,\r\n                      errorBuilder:\r\n                          (context, error, stackTrace) => Container(\r\n                            height: 220,\r\n                            width: double.infinity,\r\n                            color: Colors.grey[300],\r\n                            child: Icon(\r\n                              Icons.broken_image,\r\n                              color: Colors.grey[600],\r\n                            ),\r\n                          ),\r\n                    ),\r\n                  ),\r\n                  Positioned(\r\n                    top: 8.0,\r\n                    right: 8.0,\r\n                    child: Container(\r\n                      decoration: BoxDecoration(\r\n                        color: Colors.white.withValues(alpha: 0.8),\r\n                        shape: BoxShape.circle,\r\n                      ),\r\n                      child: IconButton(\r\n                        icon: Icon(\r\n                          _isFavorite ? Icons.favorite : Icons.favorite_border,\r\n                          color: _isFavorite ? Colors.red : Colors.grey[700],\r\n                        ),\r\n                        onPressed: () {\r\n                          setState(() {\r\n                            _isFavorite = !_isFavorite;\r\n                          });\r\n                        },\r\n                      ),\r\n                    ),\r\n                  ),\r\n                ],\r\n              ),\r\n              const SizedBox(height: 16.0),\r\n              Row(\r\n                mainAxisAlignment: MainAxisAlignment.spaceBetween,\r\n                children: [\r\n                  Expanded(\r\n                    child: Column(\r\n                      crossAxisAlignment: CrossAxisAlignment.start,\r\n                      children: [\r\n                        Text(\r\n                          widget.hotelName,\r\n                          style: widget.textTheme.titleMedium?.copyWith(\r\n                            fontWeight: FontWeight.bold,\r\n                            color: Colors.grey[800],\r\n                          ),\r\n                          maxLines: 1,\r\n                          overflow: TextOverflow.ellipsis,\r\n                        ),\r\n                        const SizedBox(height: 4.0),\r\n                        Text(\r\n                          widget.address,\r\n                          style: widget.textTheme.bodySmall?.copyWith(\r\n                            color: Colors.grey[600],\r\n                          ),\r\n                          maxLines: 1,\r\n                          overflow: TextOverflow.ellipsis,\r\n                        ),\r\n                      ],\r\n                    ),\r\n                  ),\r\n                  Text(\r\n                    '${widget.pricePerDay}/Day',\r\n                    style: widget.textTheme.titleSmall?.copyWith(\r\n                      fontWeight: FontWeight.bold,\r\n                      color: Colors.grey[800],\r\n                    ),\r\n                  ),\r\n                ],\r\n              ),\r\n              const SizedBox(height: 8.0),\r\n              Row(\r\n                children: [\r\n                  Icon(Icons.star, color: Colors.amber, size: 16),\r\n                  const SizedBox(width: 4.0),\r\n                  Text(\r\n                    widget.rating,\r\n                    style: widget.textTheme.bodySmall?.copyWith(\r\n                      color: Colors.grey[700],\r\n                    ),\r\n                  ),\r\n                ],\r\n              ),\r\n            ],\r\n          ),\r\n        ),\r\n      ),\r\n    );\r\n  }\r\n}\r\n\r\nclass _BottomNavigationBar extends StatelessWidget {\r\n  final Color primaryColor;\r\n  final ColorScheme colorScheme;\r\n  final TextTheme textTheme;\r\n  final int selectedIndex;\r\n  final ValueChanged<int> onItemTapped;\r\n\r\n  const _BottomNavigationBar({\r\n    required this.primaryColor,\r\n    required this.colorScheme,\r\n    required this.textTheme,\r\n    required this.selectedIndex,\r\n    required this.onItemTapped,\r\n  });\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return Container(\r\n      decoration: BoxDecoration(\r\n        color: colorScheme.surface,\r\n        boxShadow: [\r\n          BoxShadow(\r\n            color: Colors.grey.withValues(alpha: 0.1),\r\n            spreadRadius: 1,\r\n            blurRadius: 5,\r\n            offset: const Offset(0, -3),\r\n          ),\r\n        ],\r\n      ),\r\n      child: BottomNavigationBar(\r\n        elevation: 0,\r\n        backgroundColor: Colors.transparent,\r\n        selectedItemColor: primaryColor,\r\n        unselectedItemColor: Colors.grey[500],\r\n        showSelectedLabels: true,\r\n        showUnselectedLabels: true,\r\n        selectedLabelStyle: textTheme.bodySmall?.copyWith(\r\n          fontWeight: FontWeight.bold,\r\n          color: primaryColor,\r\n        ),\r\n        unselectedLabelStyle: textTheme.bodySmall?.copyWith(\r\n          color: Colors.grey[500],\r\n        ),\r\n        type: BottomNavigationBarType.fixed,\r\n        currentIndex: selectedIndex,\r\n        onTap: onItemTapped,\r\n        items: const <BottomNavigationBarItem>[\r\n          BottomNavigationBarItem(\r\n            icon: Icon(Icons.home_outlined),\r\n            label: 'Home',\r\n          ),\r\n          BottomNavigationBarItem(\r\n            icon: Icon(Icons.book_online_outlined),\r\n            label: 'Bookings',\r\n          ),\r\n          BottomNavigationBarItem(\r\n            icon: Icon(Icons.favorite_border),\r\n            label: 'Favorites',\r\n          ),\r\n          BottomNavigationBarItem(\r\n            icon: Icon(Icons.person_outline),\r\n            label: 'Profile',\r\n          ),\r\n        ],\r\n      ),\r\n    );\r\n  }\r\n}\n```\n\n// File: lib\\screens\\hotel_details_screen.dart\n```dart\nimport 'package:ai_travel_app_ui_kit/screens/reservation_details_screen.dart';\nimport 'package:flutter/material.dart';\nimport 'package:ai_travel_app_ui_kit/components/buttons/primary_text_button.dart'; // Assuming PrimaryTextButton is suitable for \"Reserve\"\n// TapGestureRecognizer to make parts of TextSpan tappable\nimport 'package:flutter/gestures.dart';\n\nclass HotelDetailsScreen extends StatefulWidget {\n  const HotelDetailsScreen({super.key});\n\n  @override\n  State<HotelDetailsScreen> createState() => _HotelDetailsScreenState();\n}\n\nclass _HotelDetailsScreenState extends State<HotelDetailsScreen> {\n  bool _isDescriptionExpanded = false;\n  String _selectedTab = 'Overview'; // Default selected tab\n  bool _isFavorited = false; // State for the heart icon\n\n  @override\n  Widget build(BuildContext context) {\n    final TextTheme textTheme = Theme.of(context).textTheme;\n    final Color primaryColor = Theme.of(context).primaryColor;\n    final ColorScheme colorScheme = Theme.of(context).colorScheme;\n\n    return Scaffold(\n      backgroundColor: Colors.white, // Light grey background\n      appBar: AppBar(\n        scrolledUnderElevation: 0,\n        backgroundColor:\n            Colors.transparent, // Transparent to show background behind\n        elevation: 0,\n        leading: IconButton(\n          icon: Icon(\n            Icons.arrow_back_ios,\n            color: primaryColor,\n            size: 20,\n          ), // Back icon\n          onPressed: () {\n            Navigator.of(context).pop();\n          },\n        ),\n        actions: [\n          IconButton(\n            icon: Icon(\n              _isFavorited\n                  ? Icons.favorite\n                  : Icons.favorite_border, // Toggle icon based on state\n              color:\n                  _isFavorited\n                      ? Colors.red\n                      : primaryColor, // Red when favorited\n              size: 24,\n            ), // Heart icon\n            onPressed: () {\n              setState(() {\n                _isFavorited = !_isFavorited; // Toggle favorite state\n              });\n            },\n          ),\n          const SizedBox(width: 8.0),\n        ],\n      ),\n      body: Stack(\n        children: [\n          SingleChildScrollView(\n            padding: const EdgeInsets.only(\n              bottom: 80,\n            ), // Space for the fixed bottom bar\n            child: Column(\n              crossAxisAlignment: CrossAxisAlignment.start,\n              children: [\n                Padding(\n                  padding: const EdgeInsets.symmetric(horizontal: 4),\n                  child: Center(\n                    child: ClipRRect(\n                      child: Image.network(\n                        'https://picsum.photos/400/250?random=hotelmain', // Main hotel image - changed to 400x250 for better filling\n                        height: 200,\n                        width: double.infinity, // Make image fill width\n                        fit: BoxFit.cover, // Ensure image covers the area\n                        errorBuilder:\n                            (context, error, stackTrace) => Container(\n                              height: 200,\n                              width: double.infinity,\n                              color: Colors.grey[300],\n                              child: Icon(\n                                Icons.image,\n                                size: 80,\n                                color: Colors.grey[600],\n                              ),\n                            ),\n                      ),\n                    ),\n                  ),\n                ),\n                const SizedBox(height: 24.0),\n                Padding(\n                  padding: const EdgeInsets.symmetric(horizontal: 16.0),\n                  child: Row(\n                    mainAxisAlignment: MainAxisAlignment.spaceBetween,\n                    children: [\n                      Expanded(\n                        // Use Expanded to give available space to text\n                        child: Column(\n                          crossAxisAlignment: CrossAxisAlignment.start,\n                          children: [\n                            Text(\n                              'Hotel Supreme',\n                              style: textTheme.headlineSmall?.copyWith(\n                                fontSize: 18,\n                                fontWeight: FontWeight.bold,\n                                color: Colors.grey[800],\n                              ),\n                              overflow:\n                                  TextOverflow\n                                      .ellipsis, // Add overflow handling\n                            ),\n                            const SizedBox(height: 4.0),\n                            Text(\n                              '4140 Parker Rd. Allentown, Sylhet 3100',\n                              style: textTheme.bodyMedium?.copyWith(\n                                color: Colors.grey[600],\n                              ),\n                              overflow:\n                                  TextOverflow\n                                      .ellipsis, // Add overflow handling\n                            ),\n                          ],\n                        ),\n                      ),\n                      const SizedBox(\n                        width: 16.0,\n                      ), // Add some space between text and share button\n                      Ink(\n                        decoration: BoxDecoration(\n                          color: Colors.grey[100],\n                          borderRadius: BorderRadius.circular(20.0),\n                        ),\n                        child: InkWell(\n                          borderRadius: BorderRadius.circular(20.0),\n                          onTap: () {},\n                          splashColor: primaryColor.withValues(alpha: 0.2),\n                          hoverColor: primaryColor.withValues(alpha: 0.1),\n                          child: Padding(\n                            padding: const EdgeInsets.symmetric(\n                              horizontal: 12.0,\n                              vertical: 8.0,\n                            ),\n                            child: Row(\n                              mainAxisSize: MainAxisSize.min,\n                              children: [\n                                Icon(\n                                  Icons.share,\n                                  size: 16,\n                                  color: Colors.grey[700],\n                                ),\n                                const SizedBox(width: 4.0),\n                                Text(\n                                  'Share',\n                                  style: textTheme.bodySmall?.copyWith(\n                                    color: Colors.grey[700],\n                                  ),\n                                ),\n                              ],\n                            ),\n                          ),\n                        ),\n                      ),\n                    ],\n                  ),\n                ),\n                const SizedBox(height: 24.0),\n                Padding(\n                  padding: const EdgeInsets.symmetric(horizontal: 16.0),\n                  child: Row(\n                    mainAxisAlignment: MainAxisAlignment.spaceAround,\n                    children: const [\n                      _HotelAttributeChip(icon: Icons.king_bed, text: '2 Beds'),\n                      _HotelAttributeChip(icon: Icons.bathtub, text: '1 Bath'),\n                      _HotelAttributeChip(icon: Icons.group, text: '2 Guests'),\n                    ],\n                  ),\n                ),\n                const SizedBox(height: 24.0),\n                Padding(\n                  padding: const EdgeInsets.symmetric(horizontal: 24.0),\n                  child: Row(\n                    mainAxisAlignment: MainAxisAlignment.spaceAround,\n                    children: [\n                      _TabButton(\n                        text: 'Overview',\n                        isSelected: _selectedTab == 'Overview',\n                        onTap: () => setState(() => _selectedTab = 'Overview'),\n                        primaryColor: primaryColor,\n                        textTheme: textTheme,\n                      ),\n                      _TabButton(\n                        text: 'Review',\n                        isSelected: _selectedTab == 'Review',\n                        onTap: () => setState(() => _selectedTab = 'Review'),\n                        primaryColor: primaryColor,\n                        textTheme: textTheme,\n                      ),\n                      _TabButton(\n                        text: 'Location',\n                        isSelected: _selectedTab == 'Location',\n                        onTap: () => setState(() => _selectedTab = 'Location'),\n                        primaryColor: primaryColor,\n                        textTheme: textTheme,\n                      ),\n                    ],\n                  ),\n                ),\n                const SizedBox(height: 24.0),\n                // Conditionally display content based on selected tab\n                _selectedTab == 'Overview'\n                    ? _OverviewContent(\n                      isDescriptionExpanded: _isDescriptionExpanded,\n                      primaryColor: primaryColor,\n                      textTheme: textTheme,\n                      onSeeMoreTap: () {\n                        setState(() {\n                          _isDescriptionExpanded = !_isDescriptionExpanded;\n                        });\n                      },\n                    )\n                    : _selectedTab == 'Review'\n                    ? _ReviewSectionContent(\n                      textTheme: textTheme,\n                      primaryColor: primaryColor,\n                      colorScheme: colorScheme,\n                    )\n                    : _LocationContent(textTheme: textTheme),\n                const SizedBox(height: 24.0), // Final padding before bottom bar\n              ],\n            ),\n          ),\n          // Fixed bottom bar\n          Positioned(\n            bottom: 0,\n            left: 0,\n            right: 0,\n            child: Container(\n              padding: const EdgeInsets.symmetric(\n                horizontal: 24.0,\n                vertical: 16.0,\n              ),\n              decoration: BoxDecoration(\n                color: colorScheme.surface, // White background\n                boxShadow: [\n                  BoxShadow(\n                    color: Colors.grey.withValues(alpha: 0.1),\n                    spreadRadius: 1,\n                    blurRadius: 5,\n                    offset: const Offset(0, -3), // Shadow above the bar\n                  ),\n                ],\n              ),\n              child: Row(\n                children: [\n                  Expanded(\n                    // Use Expanded to give available space to text\n                    child: Column(\n                      crossAxisAlignment: CrossAxisAlignment.start,\n                      children: [\n                        Text(\n                          '27,200 BDT / Tax included',\n                          style: textTheme.titleLarge?.copyWith(\n                            fontSize: 18,\n                            fontWeight: FontWeight.bold,\n                            color: Colors.grey[800],\n                          ),\n                          overflow:\n                              TextOverflow.ellipsis, // Add overflow handling\n                          maxLines: 1,\n                        ),\n                        const SizedBox(height: 4.0),\n                        Text(\n                          '40% Money • 10 - 13 March',\n                          style: textTheme.bodySmall?.copyWith(\n                            fontSize: 12,\n                            color: Colors.grey[600],\n                          ),\n                          overflow:\n                              TextOverflow.ellipsis, // Add overflow handling\n                          maxLines: 1,\n                        ),\n                      ],\n                    ),\n                  ),\n                  const SizedBox(width: 16.0), // Space between text and button\n                  SizedBox(\n                    width: 120, // Fixed width for the button as per image\n                    // Fixed height for the button\n                    child: PrimaryTextButton(\n                      text: 'Reserve',\n                      onPressed: () {\n                        Navigator.of(context).push(\n                          PageRouteBuilder(\n                            pageBuilder:\n                                (_, __, ___) => ReservationDetailsScreen(),\n                          ),\n                        );\n                      },\n                    ),\n                  ),\n                ],\n              ),\n            ),\n          ),\n        ],\n      ),\n    );\n  }\n}\n\n// Separate widget for Overview content\nclass _OverviewContent extends StatelessWidget {\n  final bool isDescriptionExpanded;\n  final Color primaryColor;\n  final TextTheme textTheme;\n  final VoidCallback onSeeMoreTap;\n\n  const _OverviewContent({\n    required this.isDescriptionExpanded,\n    required this.primaryColor,\n    required this.textTheme,\n    required this.onSeeMoreTap,\n  });\n\n  @override\n  Widget build(BuildContext context) {\n    return Column(\n      crossAxisAlignment: CrossAxisAlignment.start,\n      children: [\n        Padding(\n          padding: const EdgeInsets.symmetric(horizontal: 24.0),\n          child: Column(\n            crossAxisAlignment: CrossAxisAlignment.start,\n            children: [\n              Text(\n                'Description',\n                style: textTheme.titleMedium?.copyWith(\n                  fontWeight: FontWeight.bold,\n                  color: Colors.grey[800],\n                ),\n              ),\n              const SizedBox(height: 8.0),\n              Text.rich(\n                TextSpan(\n                  text:\n                      'Featuring a garden, Hotel Supreme is located in Sylhet. With a fitness centre, the 3-star hotel has air-conditioned rooms with free WiFi. Each room features a flat-screen TV with cable channels and a private bathroom.',\n                  style: textTheme.bodyMedium?.copyWith(\n                    color: Colors.grey[600],\n                    height: 1.5,\n                  ),\n                  children: [\n                    if (!isDescriptionExpanded)\n                      TextSpan(\n                        text: '... ',\n                        style: textTheme.bodyMedium?.copyWith(\n                          color: Colors.grey[600],\n                        ),\n                      ),\n                    TextSpan(\n                      text: isDescriptionExpanded ? '' : 'See more',\n                      style: textTheme.bodyMedium?.copyWith(\n                        color: primaryColor,\n                        fontWeight: FontWeight.bold,\n                      ),\n                      recognizer: TapGestureRecognizer()..onTap = onSeeMoreTap,\n                    ),\n                  ],\n                ),\n                maxLines: isDescriptionExpanded ? null : 3,\n                overflow:\n                    isDescriptionExpanded\n                        ? TextOverflow.visible\n                        : TextOverflow.ellipsis,\n              ),\n            ],\n          ),\n        ),\n        const SizedBox(height: 24.0),\n        Padding(\n          padding: const EdgeInsets.symmetric(horizontal: 24.0),\n          child: Text(\n            'Amenities',\n            style: textTheme.titleMedium?.copyWith(\n              fontWeight: FontWeight.bold,\n              color: Colors.grey[800],\n            ),\n          ),\n        ),\n        const SizedBox(height: 16.0),\n        Padding(\n          padding: const EdgeInsets.symmetric(horizontal: 24.0),\n          child: GridView.count(\n            shrinkWrap: true,\n            physics: const NeverScrollableScrollPhysics(),\n            crossAxisCount: 2,\n            childAspectRatio: 4.0,\n            mainAxisSpacing: 16.0,\n            crossAxisSpacing: 16.0,\n            children: const [\n              _AmenityItem(icon: Icons.park_outlined, text: 'Outdoor Park'),\n              _AmenityItem(\n                icon: Icons.room_service_outlined,\n                text: 'Room Service',\n              ),\n              _AmenityItem(\n                icon: Icons.chair_alt_outlined,\n                text: 'Fully-furnished',\n              ),\n              _AmenityItem(icon: Icons.deck_outlined, text: 'Terrace'),\n              _AmenityItem(icon: Icons.bathtub_outlined, text: 'Bathtub'),\n              _AmenityItem(\n                icon: Icons.volume_mute_outlined,\n                text: 'Quiet surroundings',\n              ),\n            ],\n          ),\n        ),\n        const SizedBox(height: 24.0),\n        Padding(\n          padding: const EdgeInsets.symmetric(horizontal: 24.0),\n          child: Text(\n            'Gallery Images',\n            style: textTheme.titleMedium?.copyWith(\n              fontWeight: FontWeight.bold,\n              color: Colors.grey[800],\n            ),\n          ),\n        ),\n        const SizedBox(height: 16.0),\n        Padding(\n          padding: const EdgeInsets.symmetric(horizontal: 24.0),\n          child: Row(\n            children: [\n              Expanded(\n                flex: 2,\n                child: _GalleryImage(\n                  imageUrl: 'https://picsum.photos/400/300?random=1',\n                ),\n              ),\n              const SizedBox(width: 16.0),\n              Expanded(\n                flex: 1,\n                child: Column(\n                  children: [\n                    _GalleryImage(\n                      imageUrl: 'https://picsum.photos/200/150?random=2',\n                      height: 92,\n                    ),\n                    const SizedBox(height: 16.0),\n                    _GalleryImage(\n                      imageUrl: 'https://picsum.photos/200/150?random=3',\n                      height: 92,\n                    ),\n                  ],\n                ),\n              ),\n            ],\n          ),\n        ),\n      ],\n    );\n  }\n}\n\n// New widget for Review Section\nclass _ReviewSectionContent extends StatelessWidget {\n  final TextTheme textTheme;\n  final Color primaryColor;\n  final ColorScheme colorScheme;\n\n  const _ReviewSectionContent({\n    required this.textTheme,\n    required this.primaryColor,\n    required this.colorScheme,\n  });\n\n  @override\n  Widget build(BuildContext context) {\n    return Padding(\n      padding: const EdgeInsets.symmetric(horizontal: 24.0),\n      child: Column(\n        crossAxisAlignment: CrossAxisAlignment.start,\n        children: [\n          Row(\n            crossAxisAlignment: CrossAxisAlignment.start,\n            children: [\n              Column(\n                crossAxisAlignment: CrossAxisAlignment.start,\n                children: [\n                  Text(\n                    '4.9',\n                    style: textTheme.displayMedium?.copyWith(\n                      fontWeight: FontWeight.bold,\n                      color: Colors.grey[800],\n                      fontSize: 48,\n                    ),\n                  ),\n                  Text(\n                    'Excellent',\n                    style: textTheme.titleMedium?.copyWith(\n                      color: Colors.grey[700],\n                      fontWeight: FontWeight.bold,\n                    ),\n                  ),\n                  Text(\n                    '(240 Reviews)',\n                    style: textTheme.bodySmall?.copyWith(\n                      color: Colors.grey[600],\n                    ),\n                  ),\n                ],\n              ),\n              const SizedBox(width: 24.0),\n              Expanded(\n                child: Column(\n                  children: [\n                    _RatingBreakdownRow(\n                      category: 'Excellent',\n                      count: 167,\n                      total: 240,\n                      textTheme: textTheme,\n                      primaryColor: primaryColor,\n                    ),\n                    _RatingBreakdownRow(\n                      category: 'Very Good',\n                      count: 43,\n                      total: 240,\n                      textTheme: textTheme,\n                      primaryColor: primaryColor,\n                    ),\n                    _RatingBreakdownRow(\n                      category: 'Average',\n                      count: 14,\n                      total: 240,\n                      textTheme: textTheme,\n                      primaryColor: primaryColor,\n                    ),\n                    _RatingBreakdownRow(\n                      category: 'Poor',\n                      count: 10,\n                      total: 240,\n                      textTheme: textTheme,\n                      primaryColor: primaryColor,\n                    ),\n                    _RatingBreakdownRow(\n                      category: 'Terrible',\n                      count: 6,\n                      total: 240,\n                      textTheme: textTheme,\n                      primaryColor: primaryColor,\n                    ),\n                  ],\n                ),\n              ),\n            ],\n          ),\n          const SizedBox(height: 24.0),\n          Row(\n            mainAxisAlignment: MainAxisAlignment.spaceAround,\n            children: [\n              _CategoryRatingBar(\n                category: 'Cleanliness',\n                rating: 4.5,\n                primaryColor: primaryColor,\n                textTheme: textTheme,\n              ),\n              _CategoryRatingBar(\n                category: 'Location',\n                rating: 5.0,\n                primaryColor: primaryColor,\n                textTheme: textTheme,\n              ),\n              _CategoryRatingBar(\n                category: 'Service',\n                rating: 4.8,\n                primaryColor: primaryColor,\n                textTheme: textTheme,\n              ),\n            ],\n          ),\n          const SizedBox(height: 16.0),\n          Row(\n            mainAxisAlignment: MainAxisAlignment.spaceAround,\n            children: [\n              _CategoryRatingBar(\n                category: 'Value',\n                rating: 4.9,\n                primaryColor: primaryColor,\n                textTheme: textTheme,\n              ),\n              _CategoryRatingBar(\n                category: 'Sleep',\n                rating: 4.1,\n                primaryColor: primaryColor,\n                textTheme: textTheme,\n              ),\n              _CategoryRatingBar(\n                category: 'Room',\n                rating: 4.6,\n                primaryColor: primaryColor,\n                textTheme: textTheme,\n              ),\n            ],\n          ),\n          const SizedBox(height: 24.0),\n          Text(\n            'Reviews',\n            style: textTheme.titleMedium?.copyWith(\n              fontWeight: FontWeight.bold,\n              color: Colors.grey[800],\n            ),\n          ),\n          const SizedBox(height: 16.0),\n          SizedBox(\n            height: 200, // Height for horizontal review cards\n            child: ListView.builder(\n              scrollDirection: Axis.horizontal,\n              itemCount: 3, // Example reviews\n              itemBuilder: (context, index) {\n                return Padding(\n                  padding: EdgeInsets.only(right: index == 2 ? 0 : 16.0),\n                  child: _ReviewCard(\n                    reviewerName: 'Jim Majesky',\n                    date: '12/01/2025',\n                    reviewText:\n                        'I love how they broke down their KYC and onboarding. I enjoyed the user experience, and even the service experience while...',\n                    rating: 5,\n                    textTheme: textTheme,\n                    colorScheme: colorScheme,\n                  ),\n                );\n              },\n            ),\n          ),\n          const SizedBox(height: 24.0),\n          Center(\n            child: SizedBox(\n              width: double.infinity,\n              height: 50,\n              child: OutlinedButton.icon(\n                onPressed: () {},\n                icon: Icon(Icons.edit_outlined, color: primaryColor),\n                label: Text(\n                  'Write a review',\n                  style: textTheme.bodyLarge?.copyWith(color: primaryColor),\n                ),\n                style: OutlinedButton.styleFrom(\n                  side: BorderSide(color: primaryColor),\n                  shape: RoundedRectangleBorder(\n                    borderRadius: BorderRadius.circular(\n                      60,\n                    ), // Set to 60 for pill shape\n                  ),\n                ),\n              ),\n            ),\n          ),\n        ],\n      ),\n    );\n  }\n}\n\n// New widget for Location section (can be expanded later)\nclass _LocationContent extends StatelessWidget {\n  final TextTheme textTheme;\n\n  const _LocationContent({required this.textTheme});\n\n  @override\n  Widget build(BuildContext context) {\n    return Padding(\n      padding: const EdgeInsets.symmetric(horizontal: 24.0),\n      child: Column(\n        crossAxisAlignment: CrossAxisAlignment.start,\n        children: [\n          Text(\n            'Location Details',\n            style: textTheme.titleMedium?.copyWith(\n              fontWeight: FontWeight.bold,\n              color: Colors.grey[800],\n            ),\n          ),\n          const SizedBox(height: 16.0),\n          // Placeholder for map or location details\n          Container(\n            height: 200,\n            width: double.infinity,\n            clipBehavior: Clip.hardEdge,\n            decoration: BoxDecoration(\n              color: Colors.grey[300],\n              borderRadius: BorderRadius.circular(12),\n            ),\n            child: Image.network(\n              'https://media.istockphoto.com/id/858885038/photo/airplane-fly-on-the-blue-painted-map.jpg?s=2048x2048&w=is&k=20&c=LRt0Jw0WNIrJkpJ8X5uorgCLtFJN0Px-nrw7l_Y6zh4=', // Example map image\n              fit: BoxFit.cover,\n              loadingBuilder: (context, child, loadingProgress) {\n                if (loadingProgress == null) return child;\n                return Center(\n                  child: CircularProgressIndicator(\n                    valueColor: AlwaysStoppedAnimation<Color>(\n                      Colors.grey[600]!,\n                    ),\n                  ),\n                );\n              },\n              errorBuilder: (context, error, stackTrace) {\n                return Center(\n                  child: Text(\n                    'Map Placeholder',\n                    style: textTheme.bodyLarge?.copyWith(\n                      color: Colors.grey[600],\n                    ),\n                  ),\n                );\n              },\n            ),\n          ),\n        ],\n      ),\n    );\n  }\n}\n\nclass _RatingBreakdownRow extends StatelessWidget {\n  final String category;\n  final int count;\n  final int total;\n  final TextTheme textTheme;\n  final Color primaryColor;\n\n  const _RatingBreakdownRow({\n    required this.category,\n    required this.count,\n    required this.total,\n    required this.textTheme,\n    required this.primaryColor,\n  });\n\n  @override\n  Widget build(BuildContext context) {\n    return Padding(\n      padding: const EdgeInsets.symmetric(vertical: 4.0),\n      child: Row(\n        children: [\n          SizedBox(\n            width: 80, // Fixed width for category text\n            child: Text(\n              category,\n              style: textTheme.bodySmall?.copyWith(color: Colors.grey[700]),\n            ),\n          ),\n          Expanded(\n            child: LinearProgressIndicator(\n              value: count / total,\n              backgroundColor: Colors.grey[300],\n              valueColor: AlwaysStoppedAnimation<Color>(primaryColor),\n              minHeight: 8.0,\n              borderRadius: BorderRadius.circular(\n                4.0,\n              ), // Rounded corners for progress bar\n            ),\n          ),\n          const SizedBox(width: 8.0),\n          Text(\n            '$count',\n            style: textTheme.bodySmall?.copyWith(color: Colors.grey[700]),\n          ),\n        ],\n      ),\n    );\n  }\n}\n\nclass _CategoryRatingBar extends StatelessWidget {\n  final String category;\n  final double rating;\n  final Color primaryColor;\n  final TextTheme textTheme;\n\n  const _CategoryRatingBar({\n    required this.category,\n    required this.rating,\n    required this.primaryColor,\n    required this.textTheme,\n  });\n\n  @override\n  Widget build(BuildContext context) {\n    return Column(\n      children: [\n        Text(\n          category,\n          style: textTheme.bodySmall?.copyWith(color: Colors.grey[700]),\n        ),\n        const SizedBox(height: 4.0),\n        SizedBox(\n          width: 80, // Fixed width for the bar\n          child: LinearProgressIndicator(\n            value: rating / 5.0, // Assuming max rating is 5\n            backgroundColor: Colors.grey[300],\n            valueColor: AlwaysStoppedAnimation<Color>(primaryColor),\n            minHeight: 8.0,\n            borderRadius: BorderRadius.circular(4.0),\n          ),\n        ),\n        const SizedBox(height: 4.0),\n        Text(\n          rating.toStringAsFixed(1),\n          style: textTheme.bodySmall?.copyWith(\n            fontWeight: FontWeight.bold,\n            color: Colors.grey[800],\n          ),\n        ),\n      ],\n    );\n  }\n}\n\nclass _ReviewCard extends StatelessWidget {\n  final String reviewerName;\n  final String date;\n  final String reviewText;\n  final int rating;\n  final TextTheme textTheme;\n  final ColorScheme colorScheme;\n\n  const _ReviewCard({\n    required this.reviewerName,\n    required this.date,\n    required this.reviewText,\n    required this.rating,\n    required this.textTheme,\n    required this.colorScheme,\n  });\n\n  @override\n  Widget build(BuildContext context) {\n    return Container(\n      width: 280, // Fixed width for review cards\n      padding: const EdgeInsets.all(16.0),\n      decoration: BoxDecoration(\n        color: colorScheme.surface, // White background\n        borderRadius: BorderRadius.circular(15.0),\n        boxShadow: [\n          BoxShadow(\n            color: Colors.grey.withValues(alpha: 0.1),\n            spreadRadius: 1,\n            blurRadius: 5,\n            offset: const Offset(0, 3),\n          ),\n        ],\n      ),\n      child: Column(\n        crossAxisAlignment: CrossAxisAlignment.start,\n        children: [\n          Row(\n            children: [\n              CircleAvatar(\n                radius: 18,\n                backgroundColor: Colors.grey[200],\n                child: Icon(Icons.person, color: Colors.grey[600], size: 20),\n              ),\n              const SizedBox(width: 8.0),\n              Column(\n                crossAxisAlignment: CrossAxisAlignment.start,\n                children: [\n                  Text(\n                    reviewerName,\n                    style: textTheme.bodyLarge?.copyWith(\n                      fontWeight: FontWeight.bold,\n                      color: Colors.grey[800],\n                    ),\n                  ),\n                  Text(\n                    date,\n                    style: textTheme.bodySmall?.copyWith(\n                      color: Colors.grey[600],\n                    ),\n                  ),\n                ],\n              ),\n            ],\n          ),\n          const SizedBox(height: 8.0),\n          Row(\n            children: List.generate(5, (index) {\n              return Icon(\n                index < rating ? Icons.star : Icons.star_border,\n                color: index < rating ? Colors.amber : Colors.grey[400],\n                size: 16,\n              );\n            }),\n          ),\n          const SizedBox(height: 8.0),\n          Expanded(\n            child: Text(\n              reviewText,\n              style: textTheme.bodyMedium?.copyWith(color: Colors.grey[700]),\n              maxLines: 3,\n              overflow: TextOverflow.ellipsis,\n            ),\n          ),\n          const SizedBox(height: 8.0),\n          Row(\n            mainAxisAlignment: MainAxisAlignment.end,\n            children: [\n              Text(\n                'Was this review helpful?',\n                style: textTheme.bodySmall?.copyWith(color: Colors.grey[600]),\n              ),\n              const SizedBox(width: 8.0),\n              _SmallTextButton(\n                text: 'No',\n                onPressed: () {},\n                textTheme: textTheme,\n              ),\n              const SizedBox(width: 4.0),\n              _SmallTextButton(\n                text: 'Yes',\n                onPressed: () {},\n                textTheme: textTheme,\n              ),\n            ],\n          ),\n        ],\n      ),\n    );\n  }\n}\n\nclass _SmallTextButton extends StatelessWidget {\n  final String text;\n  final VoidCallback onPressed;\n  final TextTheme textTheme;\n\n  const _SmallTextButton({\n    required this.text,\n    required this.onPressed,\n    required this.textTheme,\n  });\n\n  @override\n  Widget build(BuildContext context) {\n    return TextButton(\n      onPressed: onPressed,\n      style: TextButton.styleFrom(\n        padding: const EdgeInsets.symmetric(horizontal: 12, vertical: 6),\n        minimumSize: Size.zero, // Remove default minimum size\n        tapTargetSize: MaterialTapTargetSize.shrinkWrap,\n        backgroundColor: Colors.grey[200],\n        shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(8.0)),\n      ),\n      child: Text(\n        text,\n        style: textTheme.bodySmall?.copyWith(color: Colors.grey[700]),\n      ),\n    );\n  }\n}\n\nclass _HotelAttributeChip extends StatelessWidget {\n  final IconData icon;\n  final String text;\n\n  const _HotelAttributeChip({required this.icon, required this.text});\n\n  @override\n  Widget build(BuildContext context) {\n    final TextTheme textTheme = Theme.of(context).textTheme;\n    return Container(\n      padding: const EdgeInsets.symmetric(horizontal: 16.0, vertical: 8.0),\n      decoration: BoxDecoration(\n        color: Colors.grey[100], // Light grey background\n        borderRadius: BorderRadius.circular(10.0),\n      ),\n      child: Row(\n        mainAxisSize: MainAxisSize.min,\n        children: [\n          Icon(icon, size: 18, color: Colors.grey[700]),\n          const SizedBox(width: 8.0),\n          Text(\n            text,\n            style: textTheme.bodyMedium?.copyWith(color: Colors.grey[700]),\n          ),\n        ],\n      ),\n    );\n  }\n}\n\nclass _TabButton extends StatelessWidget {\n  final String text;\n  final bool isSelected;\n  final VoidCallback onTap;\n  final Color primaryColor;\n  final TextTheme textTheme;\n\n  const _TabButton({\n    required this.text,\n    required this.isSelected,\n    required this.onTap,\n    required this.primaryColor,\n    required this.textTheme,\n  });\n\n  @override\n  Widget build(BuildContext context) {\n    return GestureDetector(\n      onTap: onTap,\n      child: Column(\n        children: [\n          Padding(\n            padding: const EdgeInsets.symmetric(\n              horizontal: 12.0,\n              vertical: 8.0,\n            ),\n            child: Text(\n              text,\n              style: textTheme.bodyLarge?.copyWith(\n                color: isSelected ? primaryColor : Colors.grey[700],\n                fontWeight: isSelected ? FontWeight.bold : FontWeight.normal,\n              ),\n            ),\n          ),\n          Container(\n            height: 3.0,\n            width: isSelected ? 40.0 : 0.0, // Underline for selected tab\n            decoration: BoxDecoration(\n              color: primaryColor,\n              borderRadius: BorderRadius.circular(2.0),\n            ),\n          ),\n        ],\n      ),\n    );\n  }\n}\n\nclass _AmenityItem extends StatelessWidget {\n  final IconData icon;\n  final String text;\n\n  const _AmenityItem({required this.icon, required this.text});\n\n  @override\n  Widget build(BuildContext context) {\n    final TextTheme textTheme = Theme.of(context).textTheme;\n    return Row(\n      mainAxisSize: MainAxisSize.min,\n      children: [\n        Icon(icon, size: 20, color: Colors.grey[700]),\n        const SizedBox(width: 8.0),\n        Expanded(\n          // Use Expanded to ensure text wraps within available space\n          child: Text(\n            text,\n            style: textTheme.bodyMedium?.copyWith(color: Colors.grey[700]),\n            overflow: TextOverflow.ellipsis,\n          ),\n        ),\n      ],\n    );\n  }\n}\n\nclass _GalleryImage extends StatelessWidget {\n  final String imageUrl;\n  final double height;\n\n  const _GalleryImage({\n    required this.imageUrl,\n    this.height = 200, // Default height for the main image\n  });\n\n  @override\n  Widget build(BuildContext context) {\n    return ClipRRect(\n      borderRadius: BorderRadius.circular(10.0),\n      child: Image.network(\n        imageUrl,\n        height: height,\n        width: double.infinity,\n        fit: BoxFit.cover,\n        errorBuilder:\n            (context, error, stackTrace) => Container(\n              height: height,\n              width: double.infinity,\n              color: Colors.grey[300],\n              child: Icon(\n                Icons.image,\n                size: height / 2,\n                color: Colors.grey[600],\n              ),\n            ),\n      ),\n    );\n  }\n}\n```\n\n// File: lib\\screens\\hotel_filter_screen.dart\n```dart\nimport 'package:ai_travel_app_ui_kit/screens/book_hotel_screen.dart';\nimport 'package:ai_travel_app_ui_kit/screens/explore_hotels_screen.dart';\nimport 'package:flutter/material.dart';\nimport 'package:ai_travel_app_ui_kit/components/buttons/primary_text_button.dart';\n\nclass HotelFilterScreen extends StatefulWidget {\n  const HotelFilterScreen({super.key});\n\n  @override\n  State<HotelFilterScreen> createState() => _HotelFilterScreenState();\n}\n\nclass _HotelFilterScreenState extends State<HotelFilterScreen> {\n  String? _sortBySelection = 'Recommended';\n  RangeValues _priceRange = const RangeValues(10000, 20000);\n  final TextEditingController _fromPriceController = TextEditingController(\n    text: '10,000 BDT',\n  );\n  final TextEditingController _toPriceController = TextEditingController(\n    text: '20,000 BDT',\n  );\n\n  final Map<String, bool> _popularFilters = {\n    'Pool': true,\n    'Pet Friendly': false,\n    'Breakfast Included': true,\n    'Reserve Now, Pay Later': true,\n  };\n\n  int _selectedStarRating = 4; // Default to 4 stars\n\n  final Map<String, bool> _accessibilityOptions = {\n    'Elevator': true,\n    'Accessible Bathroom': false,\n    'In-room Services': true,\n    'Food Delivery Service Friendly': true,\n  };\n\n  int? _selectedBedrooms = 4; // Default to 4\n\n  final Map<String, bool> _travelersExperience = {\n    'Eco-certified': true,\n    'Business Friendly': false,\n    'Guest Friendly': false,\n  };\n\n  @override\n  void dispose() {\n    _fromPriceController.dispose();\n    _toPriceController.dispose();\n    super.dispose();\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    final TextTheme textTheme = Theme.of(context).textTheme;\n    final Color primaryColor = Theme.of(context).primaryColor;\n    final ColorScheme colorScheme = Theme.of(context).colorScheme;\n\n    return Scaffold(\n      backgroundColor: Colors.white, // Light grey background\n      appBar: AppBar(\n        scrolledUnderElevation: 0,\n        backgroundColor: Colors.transparent,\n        elevation: 0,\n        leading: IconButton(\n          icon: Icon(Icons.arrow_back_ios, color: primaryColor, size: 20),\n          onPressed: () {\n            Navigator.of(context).pop();\n          },\n        ),\n        title: Text(\n          'Book a Hotel',\n          style: textTheme.titleLarge?.copyWith(\n            fontWeight: FontWeight.bold,\n            color: Colors.grey[800],\n            fontSize: 18,\n          ),\n        ),\n        centerTitle: true,\n        actions: [\n          TextButton(\n            onPressed: () {\n              setState(() {\n                _sortBySelection = 'Recommended';\n                _priceRange = const RangeValues(10000, 20000);\n                _fromPriceController.text = '10,000 BDT';\n                _toPriceController.text = '20,000 BDT';\n                _popularFilters.updateAll(\n                  (key, value) => false,\n                ); // Reset all to false\n                _popularFilters['Pool'] =\n                    true; // Set default active as per image\n                _popularFilters['Breakfast Included'] = true;\n                _popularFilters['Reserve Now, Pay Later'] = true;\n\n                _selectedStarRating = 4;\n                _accessibilityOptions.updateAll((key, value) => false);\n                _accessibilityOptions['Elevator'] = true;\n                _accessibilityOptions['In-room Services'] = true;\n                _accessibilityOptions['Food Delivery Service Friendly'] = true;\n\n                _selectedBedrooms = 4;\n                _travelersExperience.updateAll((key, value) => false);\n                _travelersExperience['Eco-certified'] = true;\n              });\n            },\n            child: Text(\n              'Clear',\n              style: textTheme.bodyLarge?.copyWith(color: Colors.grey[700]),\n            ),\n          ),\n          const SizedBox(width: 8.0),\n        ],\n      ),\n      body: Column(\n        children: [\n          Expanded(\n            child: ListView(\n              padding: const EdgeInsets.symmetric(horizontal: 24.0),\n              children: [\n                _buildSectionTitle(context, 'Sort By'),\n                ...['Recommended', 'Popularity', 'Rating', 'Nearby'].map((\n                  option,\n                ) {\n                  return RadioListTile<String>(\n                    title: Text(\n                      option,\n                      style: textTheme.bodyLarge?.copyWith(\n                        color: Colors.grey[700],\n                      ),\n                    ),\n                    value: option,\n                    groupValue: _sortBySelection,\n                    onChanged: (String? value) {\n                      setState(() {\n                        _sortBySelection = value;\n                      });\n                    },\n                    activeColor: primaryColor,\n                    controlAffinity: ListTileControlAffinity.trailing,\n                  );\n                }),\n                Divider(\n                  color: Colors.grey.withValues(alpha: 0.5),\n                  indent: 24,\n                  endIndent: 24,\n                  thickness: 0.5,\n                ),\n                _buildSectionTitle(context, 'Pricing'),\n                const SizedBox(height: 16.0),\n                // Price Range Histogram with Wave Pattern\n                Padding(\n                  padding: const EdgeInsets.symmetric(horizontal: 16.0),\n                  child: SizedBox(\n                    height: 50, // Height for the wave pattern\n                    child: CustomPaint(\n                      painter: _WaveHistogramPainter(\n                        primaryColor: primaryColor,\n                        inactiveColor: primaryColor.withValues(alpha: 0.2),\n                        currentRange: _priceRange,\n                        minPrice: 0,\n                        maxPrice: 30000,\n                      ),\n                    ),\n                  ),\n                ),\n                const SizedBox(height: 16.0), // Space between chart and slider\n                RangeSlider(\n                  values: _priceRange,\n                  min: 0,\n                  max: 30000,\n                  divisions: 300,\n                  labels: RangeLabels(\n                    _priceRange.start.round().toString(),\n                    _priceRange.end.round().toString(),\n                  ),\n                  onChanged: (RangeValues values) {\n                    setState(() {\n                      _priceRange = values;\n                      _fromPriceController.text =\n                          '${values.start.round()},000 BDT';\n                      _toPriceController.text = '${values.end.round()},000 BDT';\n                    });\n                  },\n                  activeColor: primaryColor,\n                  inactiveColor: primaryColor.withValues(alpha: 0.2),\n                ),\n                Padding(\n                  padding: const EdgeInsets.symmetric(horizontal: 16.0),\n                  child: Row(\n                    children: [\n                      Expanded(\n                        child: TextField(\n                          controller: _fromPriceController,\n                          readOnly: true,\n                          textAlign: TextAlign.center,\n                          decoration: InputDecoration(\n                            filled: true,\n                            fillColor: Colors.grey[100],\n                            border: OutlineInputBorder(\n                              borderRadius: BorderRadius.circular(10.0),\n                              borderSide: BorderSide.none,\n                            ),\n                            contentPadding: const EdgeInsets.symmetric(\n                              vertical: 12.0,\n                            ),\n                          ),\n                          style: textTheme.bodyMedium?.copyWith(\n                            color: Colors.grey[800],\n                          ),\n                        ),\n                      ),\n                      const SizedBox(width: 8.0),\n                      Text(\n                        '-',\n                        style: textTheme.bodyLarge?.copyWith(\n                          color: Colors.grey[700],\n                        ),\n                      ),\n                      const SizedBox(width: 8.0),\n                      Expanded(\n                        child: TextField(\n                          controller: _toPriceController,\n                          readOnly: true,\n                          textAlign: TextAlign.center,\n                          decoration: InputDecoration(\n                            filled: true,\n                            fillColor: Colors.grey[100],\n                            border: OutlineInputBorder(\n                              borderRadius: BorderRadius.circular(10.0),\n                              borderSide: BorderSide.none,\n                            ),\n                            contentPadding: const EdgeInsets.symmetric(\n                              vertical: 12.0,\n                            ),\n                          ),\n                          style: textTheme.bodyMedium?.copyWith(\n                            color: Colors.grey[800],\n                          ),\n                        ),\n                      ),\n                    ],\n                  ),\n                ),\n                Divider(\n                  color: Colors.grey.withValues(alpha: 0.5),\n                  thickness: 0.5,\n                  indent: 24,\n                  endIndent: 24,\n                  height: 40,\n                ),\n\n                _buildSectionTitle(context, 'Popular Filters'),\n                ..._popularFilters.keys.map((filter) {\n                  return CheckboxListTile(\n                    title: Text(\n                      filter,\n                      style: textTheme.bodyLarge?.copyWith(\n                        color: Colors.grey[700],\n                      ),\n                    ),\n                    value: _popularFilters[filter],\n                    onChanged: (bool? value) {\n                      setState(() {\n                        _popularFilters[filter] = value!;\n                      });\n                    },\n                    activeColor: primaryColor,\n                    checkColor: colorScheme.onPrimary,\n                    controlAffinity: ListTileControlAffinity.trailing,\n                  );\n                }),\n                Divider(\n                  color: Colors.grey.withValues(alpha: 0.5),\n                  indent: 24,\n                  endIndent: 24,\n                  thickness: 0.5,\n                ),\n\n                _buildSectionTitle(context, 'Filter by minimum star rating'),\n                const SizedBox(height: 16.0),\n                Padding(\n                  padding: const EdgeInsets.symmetric(horizontal: 0.0),\n                  child: Row(\n                    mainAxisAlignment:\n                        MainAxisAlignment.spaceEvenly, // Distribute evenly\n                    children: List.generate(5, (index) {\n                      final star = index + 1;\n                      return GestureDetector(\n                        onTap: () {\n                          setState(() {\n                            _selectedStarRating = star;\n                          });\n                        },\n                        child: Container(\n                          padding: const EdgeInsets.symmetric(\n                            horizontal: 10.0,\n                            vertical: 10.0,\n                          ),\n                          margin: const EdgeInsets.symmetric(horizontal: 2.0),\n                          decoration: BoxDecoration(\n                            color:\n                                _selectedStarRating >= star\n                                    ? primaryColor.withValues(alpha: 0.1)\n                                    : Colors.transparent,\n                            borderRadius: BorderRadius.circular(10.0),\n                            border: Border.all(\n                              color:\n                                  _selectedStarRating >= star\n                                      ? primaryColor.withValues(alpha: 0.3)\n                                      : Colors.grey[300]!,\n                              width: 1.5,\n                            ),\n                          ),\n                          child: Row(\n                            mainAxisSize: MainAxisSize.min,\n                            children: [\n                              Text(\n                                '$star',\n                                style: textTheme.bodySmall?.copyWith(\n                                  color:\n                                      _selectedStarRating >= star\n                                          ? primaryColor\n                                          : Colors.grey[700],\n                                ),\n                              ),\n                              const SizedBox(width: 4.0),\n                              Icon(\n                                Icons.star,\n                                size: 16,\n                                color:\n                                    _selectedStarRating >= star\n                                        ? primaryColor\n                                        : Colors.grey[400],\n                              ),\n                            ],\n                          ),\n                        ),\n                      );\n                    }),\n                  ),\n                ),\n                Divider(\n                  color: Colors.grey.withValues(alpha: 0.5),\n                  thickness: 0.5,\n                  indent: 24,\n                  endIndent: 24,\n                  height: 40,\n                ),\n\n                _buildSectionTitle(context, 'Accessibility'),\n                ..._accessibilityOptions.keys.map((option) {\n                  return CheckboxListTile(\n                    title: Text(\n                      option,\n                      style: textTheme.bodyLarge?.copyWith(\n                        color: Colors.grey[700],\n                      ),\n                    ),\n                    value: _accessibilityOptions[option],\n                    onChanged: (bool? value) {\n                      setState(() {\n                        _accessibilityOptions[option] = value!;\n                      });\n                    },\n                    activeColor: primaryColor,\n                    checkColor: colorScheme.onPrimary,\n                    controlAffinity: ListTileControlAffinity.trailing,\n                  );\n                }),\n                Divider(\n                  color: Colors.grey.withValues(alpha: 0.5),\n                  indent: 24,\n                  endIndent: 24,\n                  thickness: 0.5,\n                ),\n\n                _buildSectionTitle(context, 'Number of Bedrooms'),\n                const SizedBox(height: 16.0),\n                Padding(\n                  padding: const EdgeInsets.only(right: 8.0),\n                  child: Center(\n                    child: Row(\n                      mainAxisSize: MainAxisSize.min,\n                      children: List.generate(5, (index) {\n                        final count = index + 1;\n                        final String displayText = count == 5 ? '5+' : '$count';\n                        return GestureDetector(\n                          onTap: () {\n                            setState(() {\n                              _selectedBedrooms = count;\n                            });\n                          },\n                          child: Container(\n                            padding: const EdgeInsets.symmetric(\n                              horizontal: 16.0,\n                              vertical: 10.0,\n                            ),\n                            margin: const EdgeInsets.symmetric(horizontal: 4.0),\n                            decoration: BoxDecoration(\n                              color:\n                                  _selectedBedrooms == count\n                                      ? primaryColor.withValues(alpha: 0.1)\n                                      : Colors.transparent,\n                              borderRadius: BorderRadius.circular(10.0),\n                              border: Border.all(\n                                color:\n                                    _selectedBedrooms == count\n                                        ? primaryColor.withValues(alpha: 0.3)\n                                        : Colors.grey[300]!,\n                                width: 1.5,\n                              ),\n                            ),\n                            child: Text(\n                              displayText,\n                              style: textTheme.bodySmall?.copyWith(\n                                color:\n                                    _selectedBedrooms == count\n                                        ? primaryColor\n                                        : Colors.grey[700],\n                              ),\n                            ),\n                          ),\n                        );\n                      }),\n                    ),\n                  ),\n                ),\n                Divider(\n                  color: Colors.grey.withValues(alpha: 0.5),\n                  thickness: 0.5,\n                  indent: 24,\n                  endIndent: 24,\n                  height: 40,\n                ),\n\n                _buildSectionTitle(context, 'Travelers experience'),\n                ..._travelersExperience.keys.map((option) {\n                  return CheckboxListTile(\n                    title: Text(\n                      option,\n                      style: textTheme.bodyLarge?.copyWith(\n                        color: Colors.grey[700],\n                      ),\n                    ),\n                    value: _travelersExperience[option],\n                    onChanged: (bool? value) {\n                      setState(() {\n                        _travelersExperience[option] = value!;\n                      });\n                    },\n                    activeColor: primaryColor,\n                    checkColor: colorScheme.onPrimary,\n                    controlAffinity: ListTileControlAffinity.trailing,\n                  );\n                }),\n                const SizedBox(height: 40.0), // Padding before button\n              ],\n            ),\n          ),\n          Padding(\n            padding: const EdgeInsets.symmetric(\n              horizontal: 24.0,\n              vertical: 24.0,\n            ),\n            child: PrimaryTextButton(\n              text: 'Done',\n              onPressed: () {\n                Navigator.pop(context);\n              },\n            ),\n          ),\n        ],\n      ),\n    );\n  }\n\n  Widget _buildSectionTitle(BuildContext context, String title) {\n    final TextTheme textTheme = Theme.of(context).textTheme;\n    return Padding(\n      padding: const EdgeInsets.only(top: 24.0, bottom: 16.0),\n      child: Text(\n        title,\n        style: textTheme.titleMedium?.copyWith(\n          fontWeight: FontWeight.w600,\n          color: Colors.grey[700],\n        ),\n      ),\n    );\n  }\n}\n\nclass _WaveHistogramPainter extends CustomPainter {\n  final Color primaryColor;\n  final Color inactiveColor;\n  final RangeValues currentRange;\n  final double minPrice;\n  final double maxPrice;\n\n  _WaveHistogramPainter({\n    required this.primaryColor,\n    required this.inactiveColor,\n    required this.currentRange,\n    required this.minPrice,\n    required this.maxPrice,\n  });\n\n  @override\n  void paint(Canvas canvas, Size size) {\n    final double width = size.width;\n    final double height = size.height;\n    final double segmentWidth = width / 6; // Dividing into 6 main segments\n\n    // Define the points for the wave pattern.\n    // Each pair (x,y) defines a point. y is scaled by height later.\n    // The pattern is a series of upward and downward V-shapes,\n    // with transparency from the ends towards the center.\n    // The active range will be fully opaque.\n\n    final List<Offset> points = [];\n\n    // Helper to add a V-shape.\n    // xOffset: starting x for the segment\n    // startHeight: height factor for the start of the segment (0.0 to 1.0)\n    // midHeight: height factor for the middle of the segment (0.0 to 1.0)\n    // endHeight: height factor for the end of the segment (0.0 to 1.0)\n    void addWaveSegment(\n      double xOffset,\n      double startHeight,\n      double midHeight,\n      double endHeight,\n    ) {\n      points.add(Offset(xOffset, startHeight * height));\n      points.add(Offset(xOffset + segmentWidth / 2, midHeight * height));\n      points.add(Offset(xOffset + segmentWidth, endHeight * height));\n    }\n\n    // First segment (leftmost, somewhat transparent)\n    addWaveSegment(0, 0.4, 0.8, 0.4);\n\n    // Second segment (more opaque)\n    addWaveSegment(segmentWidth, 0.4, 0.9, 0.5);\n\n    // Third segment (fully opaque, peak range)\n    addWaveSegment(segmentWidth * 2, 0.5, 1.0, 0.6);\n\n    // Fourth segment (fully opaque, peak range)\n    addWaveSegment(segmentWidth * 3, 0.6, 1.0, 0.5);\n\n    // Fifth segment (more opaque)\n    addWaveSegment(segmentWidth * 4, 0.5, 0.9, 0.4);\n\n    // Sixth segment (rightmost, somewhat transparent)\n    addWaveSegment(segmentWidth * 5, 0.4, 0.8, 0.4);\n\n    // Adjust y-coordinates to be relative to the bottom of the canvas\n    // and scale to height.\n    final List<Offset> adjustedPoints =\n        points.map((p) => Offset(p.dx, height - p.dy)).toList();\n\n    final Path path = Path();\n    if (adjustedPoints.isNotEmpty) {\n      path.moveTo(adjustedPoints[0].dx, adjustedPoints[0].dy);\n      for (int i = 1; i < adjustedPoints.length; i++) {\n        path.lineTo(adjustedPoints[i].dx, adjustedPoints[i].dy);\n      }\n    }\n\n    // We need to close the path to create a filled shape for the histogram.\n    // We'll add points to the bottom-right and bottom-left to close the shape.\n    path.lineTo(width, height); // Go to bottom-right\n    path.lineTo(0, height); // Go to bottom-left\n    path.close(); // Close the path to the starting point\n\n    // Calculate the percentage of the current range within the total range\n    final double rangeStartPercentage =\n        (currentRange.start - minPrice) / (maxPrice - minPrice);\n    final double rangeEndPercentage =\n        (currentRange.end - minPrice) / (maxPrice - minPrice);\n\n    // Calculate the pixel positions for the active range on the canvas\n    final double activeStartPx = width * rangeStartPercentage;\n    final double activeEndPx = width * rangeEndPercentage;\n\n    // Create a linear gradient for the active part\n    final activePaint =\n        Paint()\n          ..shader = LinearGradient(\n            colors: [\n              primaryColor.withValues(alpha: 0.5),\n              primaryColor,\n            ], // Fading effect for active bars\n            begin: Alignment.bottomCenter,\n            end: Alignment.topCenter,\n          ).createShader(Rect.fromLTWH(0, 0, width, height));\n\n    // Create a linear gradient for the inactive parts (with more transparency)\n    final inactivePaint =\n        Paint()\n          ..shader = LinearGradient(\n            colors: [\n              inactiveColor.withValues(alpha: 0.5),\n              inactiveColor.withValues(alpha: 0.2),\n            ], // More faded inactive bars\n            begin: Alignment.bottomCenter,\n            end: Alignment.topCenter,\n          ).createShader(Rect.fromLTWH(0, 0, width, height));\n\n    // Draw the full path with the inactive gradient first\n    canvas.drawPath(path, inactivePaint);\n\n    // Now, clip and draw the active part over it\n    canvas.save();\n    canvas.clipRect(\n      Rect.fromLTWH(activeStartPx, 0, activeEndPx - activeStartPx, height),\n    );\n    canvas.drawPath(path, activePaint);\n    canvas.restore();\n  }\n\n  @override\n  bool shouldRepaint(covariant _WaveHistogramPainter oldDelegate) {\n    // Only repaint if the current range changes\n    return oldDelegate.currentRange != currentRange;\n  }\n}\n```\n\n// File: lib\\screens\\login_screen.dart\n```dart\nimport 'package:ai_travel_app_ui_kit/components/text_fields/auth_textfields.dart';\nimport 'package:ai_travel_app_ui_kit/screens/home_screen.dart';\nimport 'package:ai_travel_app_ui_kit/screens/signup_screen.dart';\nimport 'package:flutter/material.dart';\nimport 'package:ai_travel_app_ui_kit/components/buttons/primary_text_button.dart';\nimport 'package:ai_travel_app_ui_kit/components/buttons/social_auth_button.dart';\n\nclass LoginScreen extends StatefulWidget {\n  const LoginScreen({super.key});\n\n  @override\n  State<LoginScreen> createState() => _LoginScreenState();\n}\n\nclass _LoginScreenState extends State<LoginScreen> {\n  bool _obscureText = true;\n\n  @override\n  Widget build(BuildContext context) {\n    final TextTheme textTheme = Theme.of(context).textTheme;\n    final Color primaryColor = Theme.of(context).primaryColor;\n    final ColorScheme colorScheme = Theme.of(context).colorScheme;\n\n    return Scaffold(\n      backgroundColor: colorScheme.surface,\n      appBar: AppBar(\n        backgroundColor: colorScheme.surface,\n        elevation: 0,\n        leading: IconButton(\n          icon: Icon(Icons.arrow_back_ios, color: primaryColor, size: 20),\n          onPressed: () {\n            Navigator.of(context).pop();\n          },\n        ),\n        title: Text(\n          'Login',\n          style: textTheme.titleLarge?.copyWith(\n            fontWeight: FontWeight.bold,\n            color: Colors.grey[800],\n            fontSize: 18,\n          ),\n        ),\n        centerTitle: true,\n      ),\n      body: SingleChildScrollView(\n        child: Padding(\n          padding: const EdgeInsets.symmetric(horizontal: 24.0),\n          child: Column(\n            crossAxisAlignment: CrossAxisAlignment.start,\n            children: [\n              const SizedBox(height: 40.0),\n              Text(\n                'Welcome back!',\n                style: textTheme.headlineMedium?.copyWith(\n                  fontWeight: FontWeight.bold,\n                  color: Colors.grey[850],\n                ),\n              ),\n              const SizedBox(height: 8.0),\n              Text(\n                'Sign in to continue your adventure.',\n                style: textTheme.bodyMedium?.copyWith(color: Colors.grey[600]),\n              ),\n              const SizedBox(height: 32.0),\n\n              AuthTextfields().buildTextField(\n                controller: TextEditingController(),\n              ),\n              const SizedBox(height: 16.0),\n\n              AuthTextfields().buildPasswordField(\n                controller: TextEditingController(),\n              ),\n              Align(\n                alignment: Alignment.centerRight,\n                child: TextButton(\n                  onPressed: () {},\n                  child: Text(\n                    'Forgot Password?',\n                    style: textTheme.bodyMedium?.copyWith(color: primaryColor),\n                  ),\n                ),\n              ),\n              const SizedBox(height: 16.0),\n              PrimaryTextButton(\n                text: 'Login',\n                onPressed: () {\n                  Navigator.of(context).push(\n                    PageRouteBuilder(pageBuilder: (_, __, ___) => HomeScreen()),\n                  );\n                },\n              ),\n              const SizedBox(height: 24.0),\n              Row(\n                children: [\n                  Expanded(child: Divider(color: Colors.grey[300])),\n                  Padding(\n                    padding: const EdgeInsets.symmetric(horizontal: 16.0),\n                    child: Text(\n                      'Or',\n                      style: textTheme.bodyMedium?.copyWith(\n                        color: Colors.grey[600],\n                      ),\n                    ),\n                  ),\n                  Expanded(child: Divider(color: Colors.grey[300])),\n                ],\n              ),\n              const SizedBox(height: 24.0),\n              SocialAuthButton.google(onPressed: () {}),\n              const SizedBox(height: 16.0),\n              SocialAuthButton.apple(onPressed: () {}),\n              const SizedBox(height: 16.0),\n              SocialAuthButton.facebook(onPressed: () {}),\n              const SizedBox(height: 24.0), // Replaced Spacer with padding\n              Row(\n                mainAxisAlignment: MainAxisAlignment.center,\n                children: [\n                  Text(\n                    'Don\\'t have an account?',\n                    style: textTheme.bodyMedium?.copyWith(\n                      color: Colors.grey[700],\n                    ),\n                  ),\n                  TextButton(\n                    onPressed: () {\n                      Navigator.of(context).push(\n                        PageRouteBuilder(\n                          pageBuilder: (_, __, ___) => SignupScreen(),\n                        ),\n                      );\n                    },\n                    child: Text(\n                      'Sign Up',\n                      style: textTheme.bodyMedium?.copyWith(\n                        color: primaryColor,\n                        fontWeight: FontWeight.bold,\n                      ),\n                    ),\n                  ),\n                ],\n              ),\n              const SizedBox(height: 40.0),\n            ],\n          ),\n        ),\n      ),\n    );\n  }\n}\n```\n\n// File: lib\\screens\\onboarding_screen.dart\n```dart\nimport 'package:ai_travel_app_ui_kit/components/buttons/primary_text_button.dart';\nimport 'package:ai_travel_app_ui_kit/screens/login_screen.dart';\nimport 'package:flutter/material.dart';\n\nclass OnboardingScreen extends StatefulWidget {\n  const OnboardingScreen({super.key});\n\n  @override\n  State<OnboardingScreen> createState() => _OnboardingScreenState();\n}\n\nclass _OnboardingScreenState extends State<OnboardingScreen> {\n  final PageController _pageController = PageController();\n  int _currentPage = 0;\n\n  @override\n  void initState() {\n    super.initState();\n    _pageController.addListener(() {\n      int next = _pageController.page!.round();\n      if (_currentPage != next) {\n        setState(() {\n          _currentPage = next;\n        });\n      }\n    });\n  }\n\n  @override\n  void dispose() {\n    _pageController.dispose();\n    super.dispose();\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      backgroundColor: Colors.white,\n      body: Column(\n        children: [\n          Expanded(\n            flex: 3,\n            child: PageView(\n              controller: _pageController,\n              children: const [\n                OnboardingPage(\n                  imagePath: 'https://picsum.photos/400/600',\n                  title: 'Transform your skills, transform your future',\n                  description:\n                      'Learn easily with SkillUp, you can access many course and mentors',\n                ),\n                // Add more pages if needed for a multi-page onboarding\n                OnboardingPage(\n                  imagePath: 'https://picsum.photos/400/601',\n                  title: 'Learn from the best, anywhere, anytime',\n                  description:\n                      'Access a wide range of courses taught by industry experts.',\n                ),\n                OnboardingPage(\n                  imagePath: 'https://picsum.photos/400/602',\n                  title: 'Connect with mentors and build your network',\n                  description:\n                      'Engage with a supportive community and accelerate your learning.',\n                ),\n              ],\n            ),\n          ),\n          Container(\n            padding: const EdgeInsets.symmetric(\n              horizontal: 24.0,\n              vertical: 20.0,\n            ),\n            child: Column(\n              children: [\n                Row(\n                  mainAxisAlignment: MainAxisAlignment.start,\n                  children: List.generate(\n                    3, // Number of onboarding pages\n                    (index) => buildDot(index, context),\n                  ),\n                ),\n                const SizedBox(height: 20),\n                Align(\n                  alignment: Alignment.centerLeft,\n                  child: Text(\n                    'Transform your skills,\\ntransform your future',\n                    style: Theme.of(context).textTheme.headlineMedium?.copyWith(\n                      fontWeight: FontWeight.bold,\n                      color: Colors.black,\n                    ),\n                  ),\n                ),\n                const SizedBox(height: 8),\n                Align(\n                  alignment: Alignment.centerLeft,\n                  child: Text(\n                    'Learn easily with SkillUp, you can access many course and mentors',\n                    style: Theme.of(\n                      context,\n                    ).textTheme.bodyLarge?.copyWith(color: Colors.grey[700]),\n                  ),\n                ),\n                const SizedBox(height: 32),\n                PrimaryTextButton(\n                  text: \"Continue\",\n                  onPressed: () {\n                    Navigator.of(context).push(\n                      PageRouteBuilder(\n                        pageBuilder: (_, __, ___) => LoginScreen(),\n                      ),\n                    );\n                  },\n                ),\n                const SizedBox(height: 20), // For bottom safe area\n              ],\n            ),\n          ),\n        ],\n      ),\n    );\n  }\n\n  Widget buildDot(int index, BuildContext context) {\n    return AnimatedContainer(\n      duration: const Duration(milliseconds: 200),\n      margin: const EdgeInsets.only(right: 5),\n      height: 8,\n      width: _currentPage == index ? 24 : 8,\n      decoration: BoxDecoration(\n        color:\n            _currentPage == index\n                ? Theme.of(context).primaryColor\n                : Theme.of(context).primaryColor.withValues(alpha: 0.3),\n        borderRadius: BorderRadius.circular(5),\n      ),\n    );\n  }\n}\n\nclass OnboardingPage extends StatelessWidget {\n  final String imagePath;\n  final String title;\n  final String description;\n\n  const OnboardingPage({\n    super.key,\n    required this.imagePath,\n    required this.title,\n    required this.description,\n  });\n\n  @override\n  Widget build(BuildContext context) {\n    return Column(\n      children: [\n        Expanded(\n          child: Image.network(\n            imagePath,\n            fit: BoxFit.cover,\n            width: double.infinity,\n          ),\n        ),\n      ],\n    );\n  }\n}\n```\n\n// File: lib\\screens\\order_status_screen.dart\n```dart\nimport 'package:flutter/material.dart';\n\nclass OrderStatusScreen extends StatefulWidget {\n  const OrderStatusScreen({super.key});\n\n  @override\n  State<OrderStatusScreen> createState() => _OrderStatusScreenState();\n}\n\nclass _OrderStatusScreenState extends State<OrderStatusScreen> {\n  String _selectedCategory = 'Hotel'; // Default selected category\n\n  @override\n  Widget build(BuildContext context) {\n    final TextTheme textTheme = Theme.of(context).textTheme;\n    final Color primaryColor = Theme.of(context).primaryColor;\n    final ColorScheme colorScheme = Theme.of(context).colorScheme;\n\n    return Scaffold(\n      backgroundColor: Colors.white, // Light grey background\n      appBar: AppBar(\n        scrolledUnderElevation: 0,\n        backgroundColor: Colors.transparent,\n        elevation: 0,\n        leading: IconButton(\n          icon: Icon(\n            Icons.arrow_back_ios,\n            color: primaryColor,\n            size: 20,\n          ), // Set back icon color to primaryColor\n          onPressed: () {\n            Navigator.of(context).pop();\n          },\n        ),\n        title: Row(\n          // Changed Column to Row\n          mainAxisSize: MainAxisSize.min, // Ensure row takes minimum space\n          children: [\n            Text(\n              'Order Status',\n              style: textTheme.titleLarge?.copyWith(\n                fontWeight: FontWeight.bold,\n                color: Colors.grey[800],\n                fontSize: 18,\n              ),\n            ),\n            const SizedBox(width: 8.0), // Add some spacing between texts\n            Text(\n              'Messages (1)',\n              style: textTheme.bodySmall?.copyWith(\n                color: Colors.grey[600],\n                fontSize: 12,\n              ),\n            ),\n          ],\n        ),\n        centerTitle: false, // Align title to start\n        actions: [\n          IconButton(\n            icon: Icon(\n              Icons.search,\n              color: primaryColor,\n            ), // Set search icon color to primaryColor\n            onPressed: () {},\n          ),\n          const SizedBox(width: 8.0),\n        ],\n      ),\n      body: Column(\n        crossAxisAlignment: CrossAxisAlignment.start,\n        children: [\n          const SizedBox(height: 16.0),\n          Padding(\n            padding: const EdgeInsets.symmetric(horizontal: 24.0),\n            child: SingleChildScrollView(\n              // Added SingleChildScrollView\n              scrollDirection: Axis.horizontal,\n              child: Row(\n                children: [\n                  _OrderCategoryTab(\n                    text: 'All',\n                    isSelected: _selectedCategory == 'All',\n                    onTap: () {\n                      setState(() {\n                        _selectedCategory = 'All';\n                      });\n                    },\n                    primaryColor: primaryColor,\n                    textTheme: textTheme,\n                  ),\n                  const SizedBox(width: 8.0),\n                  _OrderCategoryTab(\n                    text: 'Hotel',\n                    isSelected: _selectedCategory == 'Hotel',\n                    onTap: () {\n                      setState(() {\n                        _selectedCategory = 'Hotel';\n                      });\n                    },\n                    primaryColor: primaryColor,\n                    textTheme: textTheme,\n                  ),\n                  const SizedBox(width: 8.0),\n                  _OrderCategoryTab(\n                    text: 'Convention Center',\n                    isSelected: _selectedCategory == 'Convention Center',\n                    onTap: () {\n                      setState(() {\n                        _selectedCategory = 'Convention Center';\n                      });\n                    },\n                    primaryColor: primaryColor,\n                    textTheme: textTheme,\n                  ),\n                  const SizedBox(width: 8.0),\n                  _OrderCategoryTab(\n                    text: 'Flights',\n                    isSelected: _selectedCategory == 'Flights',\n                    onTap: () {\n                      setState(() {\n                        _selectedCategory = 'Flights';\n                      });\n                    },\n                    primaryColor: primaryColor,\n                    textTheme: textTheme,\n                  ),\n                ],\n              ),\n            ),\n          ),\n          const SizedBox(height: 24.0),\n          Padding(\n            padding: const EdgeInsets.symmetric(horizontal: 24.0),\n            child: Text(\n              'Hotel Booking',\n              style: textTheme.titleMedium?.copyWith(\n                fontWeight: FontWeight.bold,\n                color: Colors.grey[800],\n              ),\n            ),\n          ),\n          const SizedBox(height: 16.0),\n          Expanded(\n            child: ListView.builder(\n              padding: const EdgeInsets.symmetric(horizontal: 24.0),\n              itemCount: 5, // Example number of booking cards\n              itemBuilder: (context, index) {\n                return Padding(\n                  padding: const EdgeInsets.only(bottom: 16.0),\n                  child: _BookingStatusCard(\n                    roomType: 'Room Booking',\n                    roomName: 'Loft Style Guest suite with\\nPrivate Bathroom',\n                    rating: '4.9 (240)',\n                    status: 'Pending',\n                    textTheme: textTheme,\n                    colorScheme: colorScheme,\n                    // Use different image for each card\n                    imageUrl:\n                        'https://picsum.photos/100/100?random=${index + 10}',\n                    onTap: () {\n                      // Handle tap on the booking card\n                      print('Booking card $index tapped!');\n                      // You can navigate to a detail screen or perform other actions here\n                    },\n                  ),\n                );\n              },\n            ),\n          ),\n        ],\n      ),\n    );\n  }\n}\n\nclass _OrderCategoryTab extends StatelessWidget {\n  final String text;\n  final bool isSelected;\n  final VoidCallback onTap;\n  final Color primaryColor;\n  final TextTheme textTheme;\n\n  const _OrderCategoryTab({\n    required this.text,\n    required this.isSelected,\n    required this.onTap,\n    required this.primaryColor,\n    required this.textTheme,\n  });\n\n  @override\n  Widget build(BuildContext context) {\n    return GestureDetector(\n      onTap: onTap,\n      child: Container(\n        padding: const EdgeInsets.symmetric(\n          horizontal: 20.0,\n          vertical: 12.0,\n        ), // Reverted padding\n        decoration: BoxDecoration(\n          color:\n              isSelected\n                  ? primaryColor\n                  : Colors.transparent, // Reverted inactive background\n          borderRadius: BorderRadius.circular(60.0), // Rounded corners\n          border: Border.all(\n            color: Colors.grey[300]!,\n            width: 1.0,\n          ), // Reverted inactive border\n        ),\n        child: Text(\n          text,\n          style: textTheme.bodyMedium?.copyWith(\n            color:\n                isSelected\n                    ? Colors.white\n                    : Colors.grey[700], // Reverted inactive text color\n            fontWeight: isSelected ? FontWeight.bold : FontWeight.normal,\n          ),\n        ),\n      ),\n    );\n  }\n}\n\nclass _BookingStatusCard extends StatelessWidget {\n  final String roomType;\n  final String roomName;\n  final String rating;\n  final String status;\n  final String imageUrl;\n  final TextTheme textTheme;\n  final ColorScheme colorScheme;\n  final VoidCallback? onTap; // Added onTap callback\n\n  const _BookingStatusCard({\n    required this.roomType,\n    required this.roomName,\n    required this.rating,\n    required this.status,\n    required this.imageUrl,\n    required this.textTheme,\n    required this.colorScheme,\n    this.onTap, // Added onTap to constructor\n  });\n\n  @override\n  Widget build(BuildContext context) {\n    final Color primaryColor = Theme.of(context).primaryColor;\n    return Material(\n      // Wrap with Material for InkWell splash effect\n      color: Colors.transparent, // Make Material transparent\n      child: Ink(\n        // Use Ink to apply the decoration\n        decoration: BoxDecoration(\n          color: colorScheme.surface, // White background\n          borderRadius: BorderRadius.circular(15.0),\n          border: Border.all(\n            width: 0.5,\n            color: Colors.grey.withValues(alpha: 0.5),\n          ),\n          // boxShadow: [\n          //   BoxShadow(\n          //     color: primaryColor.withValues(alpha: 0.1),\n          //     spreadRadius: 1,\n          //     blurRadius: 5,\n          //     offset: const Offset(0, 3),\n          //   ),\n          // ],\n        ),\n        child: InkWell(\n          hoverColor: primaryColor.withValues(alpha: 0.06),\n          onTap: onTap, // Assign the onTap callback\n          borderRadius: BorderRadius.circular(\n            15.0,\n          ), // Match container's border radius\n          child: Container(\n            padding: const EdgeInsets.all(16.0),\n            child: Row(\n              crossAxisAlignment: CrossAxisAlignment.start,\n              children: [\n                ClipRRect(\n                  borderRadius: BorderRadius.circular(10.0),\n                  child: Image.network(\n                    imageUrl, // Placeholder image\n                    height: 100, // Increased image height\n                    width: 100, // Increased image width\n                    fit: BoxFit.cover,\n                    errorBuilder:\n                        (context, error, stackTrace) => Container(\n                          height: 100, // Match increased height\n                          width: 100, // Match increased width\n                          color: Colors.grey[300],\n                          child: Icon(\n                            Icons.image,\n                            color: Colors.grey[600],\n                            size: 50,\n                          ), // Adjust icon size accordingly\n                        ),\n                  ),\n                ),\n                const SizedBox(width: 16.0),\n                Expanded(\n                  child: Column(\n                    crossAxisAlignment: CrossAxisAlignment.start,\n                    children: [\n                      Text(\n                        roomType,\n                        style: textTheme.bodyMedium?.copyWith(\n                          color: Colors.grey[600],\n                        ),\n                      ),\n                      const SizedBox(height: 4.0),\n                      Text(\n                        roomName,\n                        style: textTheme.titleMedium?.copyWith(\n                          fontWeight: FontWeight.bold,\n                          color: Colors.grey[800],\n                        ),\n                        maxLines: 2,\n                        overflow: TextOverflow.ellipsis,\n                      ),\n                      const SizedBox(height: 4.0),\n                      Row(\n                        children: [\n                          Icon(Icons.star, color: Colors.amber, size: 16),\n                          const SizedBox(width: 4.0),\n                          Text(\n                            rating,\n                            style: textTheme.bodySmall?.copyWith(\n                              color: Colors.grey[700],\n                            ),\n                          ),\n                        ],\n                      ),\n                    ],\n                  ),\n                ),\n                const SizedBox(width: 16.0), // Space before status tag\n                Align(\n                  alignment: Alignment.topRight,\n                  child: Container(\n                    padding: const EdgeInsets.symmetric(\n                      horizontal: 12.0,\n                      vertical: 6.0,\n                    ),\n                    decoration: BoxDecoration(\n                      color:\n                          Colors.grey[200], // Light grey background for status\n                      borderRadius: BorderRadius.circular(20.0),\n                    ),\n                    child: Text(\n                      status,\n                      style: textTheme.bodySmall?.copyWith(\n                        color: Colors.grey[700],\n                      ),\n                    ),\n                  ),\n                ),\n              ],\n            ),\n          ),\n        ),\n      ),\n    );\n  }\n}\n```\n\n// File: lib\\screens\\otp_screen.dart\n```dart\nimport 'package:ai_travel_app_ui_kit/screens/home_screen.dart';\nimport 'package:flutter/material.dart';\nimport 'package:ai_travel_app_ui_kit/components/buttons/primary_text_button.dart';\nimport 'package:flutter/services.dart'; // Required for FilteringTextInputFormatter\n\nclass OtpScreen extends StatefulWidget {\n  const OtpScreen({super.key});\n\n  @override\n  State<OtpScreen> createState() => _OtpScreenState();\n}\n\nclass _OtpScreenState extends State<OtpScreen> {\n  final List<TextEditingController> _otpControllers = List.generate(\n    4,\n    (index) => TextEditingController(),\n  );\n  final List<FocusNode> _otpFocusNodes = List.generate(\n    4,\n    (index) => FocusNode(),\n  );\n\n  @override\n  void initState() {\n    super.initState();\n    for (int i = 0; i < _otpControllers.length; i++) {\n      _otpControllers[i].addListener(() {\n        if (_otpControllers[i].text.length == 1 &&\n            i < _otpControllers.length - 1) {\n          _otpFocusNodes[i + 1].requestFocus();\n        } else if (_otpControllers[i].text.isEmpty && i > 0) {\n          _otpFocusNodes[i - 1].requestFocus();\n        }\n        // Optional: Trigger validation or enable button when all fields are filled\n        setState(() {}); // Rebuild to update button state or visual cues\n      });\n    }\n  }\n\n  @override\n  void dispose() {\n    for (var controller in _otpControllers) {\n      controller.dispose();\n    }\n    for (var focusNode in _otpFocusNodes) {\n      focusNode.dispose();\n    }\n    super.dispose();\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    final TextTheme textTheme = Theme.of(context).textTheme;\n    final Color primaryColor = Theme.of(context).primaryColor;\n    final ColorScheme colorScheme = Theme.of(context).colorScheme;\n\n    return Scaffold(\n      backgroundColor: colorScheme.surface, // White background\n      appBar: AppBar(\n        backgroundColor: colorScheme.surface,\n        elevation: 0,\n        leading: IconButton(\n          icon: Icon(Icons.arrow_back_ios, color: primaryColor, size: 20),\n          onPressed: () {\n            Navigator.of(context).pop();\n          },\n        ),\n        title: Text(\n          'Verification',\n          style: textTheme.titleLarge?.copyWith(\n            fontWeight: FontWeight.bold,\n            color: Colors.grey[800],\n            fontSize: 18,\n          ),\n        ),\n        centerTitle: true,\n      ),\n      body: Padding(\n        padding: const EdgeInsets.symmetric(horizontal: 24.0),\n        child: Column(\n          crossAxisAlignment: CrossAxisAlignment.start,\n          children: [\n            const SizedBox(height: 40.0),\n            Text(\n              'Enter the code sent to your number',\n              style: textTheme.headlineMedium?.copyWith(\n                fontWeight: FontWeight.bold,\n                color: Colors.grey[850],\n              ),\n            ),\n            const SizedBox(height: 8.0),\n            Text(\n              'We sent a 4-digit code to +88017XXXXXXXX',\n              style: textTheme.bodyMedium?.copyWith(color: Colors.grey[600]),\n            ),\n            const SizedBox(height: 32.0),\n            Row(\n              mainAxisAlignment: MainAxisAlignment.spaceBetween,\n              children: List.generate(\n                _otpControllers.length,\n                (index) => _OtpInputField(\n                  controller: _otpControllers[index],\n                  focusNode: _otpFocusNodes[index],\n                  textTheme: textTheme,\n                ),\n              ),\n            ),\n            const SizedBox(height: 24.0),\n            Align(\n              alignment: Alignment.center,\n              child: TextButton(\n                onPressed: () {\n                  // Handle resend code action\n                },\n                child: Text(\n                  'Resend Code',\n                  style: textTheme.bodyMedium?.copyWith(\n                    color: primaryColor,\n                    fontWeight: FontWeight.bold,\n                  ),\n                ),\n              ),\n            ),\n            const Spacer(),\n            PrimaryTextButton(\n              text: 'Verify',\n              onPressed: () {\n                Navigator.of(context).push(\n                  PageRouteBuilder(pageBuilder: (_, __, ___) => HomeScreen()),\n                );\n              },\n            ),\n            const SizedBox(height: 40.0),\n          ],\n        ),\n      ),\n    );\n  }\n}\n\nclass _OtpInputField extends StatefulWidget {\n  final TextEditingController controller;\n  final FocusNode focusNode;\n  final TextTheme textTheme;\n\n  const _OtpInputField({\n    required this.controller,\n    required this.focusNode,\n    required this.textTheme,\n  });\n\n  @override\n  State<_OtpInputField> createState() => _OtpInputFieldState();\n}\n\nclass _OtpInputFieldState extends State<_OtpInputField> {\n  late ValueNotifier<bool> isFocused;\n\n  @override\n  void initState() {\n    super.initState();\n    isFocused = ValueNotifier<bool>(widget.focusNode.hasFocus);\n    widget.focusNode.addListener(() {\n      isFocused.value = widget.focusNode.hasFocus;\n    });\n  }\n\n  @override\n  void dispose() {\n    isFocused.dispose();\n    super.dispose();\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    final focusColor = Theme.of(context).primaryColor;\n\n    return ValueListenableBuilder<bool>(\n      valueListenable: isFocused,\n      builder: (context, focused, _) {\n        return Container(\n          width: 60,\n          height: 60,\n          decoration: BoxDecoration(\n            color: Colors.white,\n            borderRadius: BorderRadius.circular(10.0),\n            border: Border.all(\n              color: focused ? focusColor : Colors.grey[300]!,\n              width: focused ? 2.0 : 1.0,\n            ),\n            boxShadow:\n                focused\n                    ? [\n                      BoxShadow(\n                        color: focusColor.withOpacity(0.15),\n                        blurRadius: 15.0,\n                        spreadRadius: 5.0,\n                        offset: const Offset(0, 0),\n                      ),\n                    ]\n                    : [],\n          ),\n          alignment: Alignment.center,\n          child: TextField(\n            controller: widget.controller,\n            focusNode: widget.focusNode,\n            keyboardType: TextInputType.number,\n            textAlign: TextAlign.center,\n            maxLength: 1,\n            inputFormatters: [FilteringTextInputFormatter.digitsOnly],\n            style: widget.textTheme.headlineSmall?.copyWith(\n              fontWeight: FontWeight.bold,\n              color: Colors.grey[850],\n            ),\n            decoration: const InputDecoration(\n              counterText: '',\n              border: InputBorder.none,\n              contentPadding: EdgeInsets.zero,\n            ),\n            cursorColor: focusColor,\n          ),\n        );\n      },\n    );\n  }\n}\n```\n\n// File: lib\\screens\\phone_input_screen.dart\n```dart\nimport 'package:ai_travel_app_ui_kit/components/buttons/primary_text_button.dart';\nimport 'package:ai_travel_app_ui_kit/components/text_fields/auth_textfields.dart';\nimport 'package:ai_travel_app_ui_kit/screens/otp_screen.dart';\nimport 'package:flutter/material.dart';\n\nclass PhoneInputScreen extends StatelessWidget {\n  const PhoneInputScreen({super.key});\n\n  @override\n  Widget build(BuildContext context) {\n    final TextTheme textTheme = Theme.of(context).textTheme;\n    final Color primaryColor = Theme.of(context).primaryColor;\n    final ColorScheme colorScheme = Theme.of(context).colorScheme;\n\n    return Scaffold(\n      backgroundColor:\n          colorScheme.surface, // Use theme surface color, which is white\n      appBar: AppBar(\n        backgroundColor:\n            colorScheme\n                .surface, // AppBar background should match screen background\n        elevation: 0,\n        leading: IconButton(\n          icon: Icon(\n            Icons.arrow_back_ios,\n            color: primaryColor,\n            size: 20,\n          ), // Back arrow icon matching UIKit style\n          onPressed: () {\n            Navigator.of(context).pop();\n          },\n        ),\n        actions: [\n          Padding(\n            padding: const EdgeInsets.only(right: 16.0),\n            child: TextButton(\n              onPressed: () {},\n              child: Text(\n                'Try Now',\n                style: textTheme.bodyLarge?.copyWith(color: primaryColor),\n              ),\n            ),\n          ),\n        ],\n      ),\n      body: Padding(\n        padding: const EdgeInsets.symmetric(horizontal: 24.0),\n        child: Column(\n          crossAxisAlignment: CrossAxisAlignment.start,\n          children: [\n            const SizedBox(height: 40.0), // Spacing from app bar\n            Text(\n              'Hello,\\nwhat\\'s your phone number?',\n              style: textTheme.headlineMedium?.copyWith(\n                fontWeight: FontWeight.bold,\n                color:\n                    Colors\n                        .grey[850], // Darker text for prominence, consistent with UIKit\n              ),\n            ),\n            const SizedBox(height: 8.0),\n            Text(\n              'Customer Messages may be sent within iOS\\nNotifications or visa SMS.',\n              style: textTheme.bodyMedium?.copyWith(\n                color:\n                    Colors\n                        .grey[600], // Lighter text for subtitle, consistent with UIKit\n              ),\n            ),\n            const SizedBox(height: 32.0),\n            AuthTextfields().buildTextField(\n              controller: TextEditingController(),\n              labelText: \"Number?\",\n            ),\n            const Spacer(), // Pushes content to the bottom\n            PrimaryTextButton(text: 'Continue',\n             onPressed: () {\n                    Navigator.of(context).push(\n                      PageRouteBuilder(\n                        pageBuilder: (_, __, ___) => OtpScreen(),\n                      ),\n                    );\n                  },\n            ),\n            const SizedBox(height: 20.0),\n            Align(\n              alignment: Alignment.center,\n              child: RichText(\n                textAlign: TextAlign.center,\n                text: TextSpan(\n                  style: textTheme.bodySmall?.copyWith(\n                    color: Colors.grey[600],\n                    height: 1.5,\n                  ),\n                  children: [\n                    const TextSpan(\n                      text:\n                          'By continuing, you confirm you\\'ve read and agree to our\\n',\n                    ),\n                    TextSpan(\n                      text: 'Terms of Service',\n                      style: textTheme.bodySmall?.copyWith(\n                        color:\n                            Colors\n                                .grey[800], // Darker for bolded parts, matching image\n                        fontWeight: FontWeight.bold,\n                      ),\n                    ),\n                    const TextSpan(text: ' and '),\n                    TextSpan(\n                      text: 'Privacy Notice',\n                      style: textTheme.bodySmall?.copyWith(\n                        color:\n                            Colors\n                                .grey[800], // Darker for bolded parts, matching image\n                        fontWeight: FontWeight.bold,\n                      ),\n                    ),\n                    const TextSpan(\n                      text:\n                          ' on how we collect, use,\\ndisclose, and process your personal data.',\n                    ),\n                  ],\n                ),\n              ),\n            ),\n            const SizedBox(height: 40.0), // Bottom padding\n          ],\n        ),\n      ),\n    );\n  }\n}\n```\n\n// File: lib\\screens\\profile_screen.dart\n```dart\nimport 'package:ai_travel_app_ui_kit/components/text_fields/auth_textfields.dart';\nimport 'package:ai_travel_app_ui_kit/screens/settings_screen.dart';\nimport 'package:ai_travel_app_ui_kit/screens/subscription_screen.dart';\nimport 'package:flutter/material.dart';\nimport 'package:ai_travel_app_ui_kit/components/buttons/primary_text_button.dart';\n\nclass ProfileScreen extends StatefulWidget {\n  const ProfileScreen({super.key});\n\n  @override\n  State<ProfileScreen> createState() => _ProfileScreenState();\n}\n\nclass _ProfileScreenState extends State<ProfileScreen> {\n  final FocusNode _nameFocusNode = FocusNode();\n  final FocusNode _mobileNumberFocusNode = FocusNode();\n  final FocusNode _locationFocusNode = FocusNode();\n\n  Color? _nameFillColor;\n  Color? _mobileNumberFillColor;\n  Color? _locationFillColor;\n\n  @override\n  void initState() {\n    super.initState();\n    _nameFocusNode.addListener(_updateNameFillColor);\n    _mobileNumberFocusNode.addListener(_updateMobileNumberFillColor);\n    _locationFocusNode.addListener(_updateLocationFillColor);\n  }\n\n  @override\n  void dispose() {\n    _nameFocusNode.removeListener(_updateNameFillColor);\n    _nameFocusNode.dispose();\n    _mobileNumberFocusNode.removeListener(_updateMobileNumberFillColor);\n    _mobileNumberFocusNode.dispose();\n    _locationFocusNode.removeListener(_updateLocationFillColor);\n    _locationFocusNode.dispose();\n    super.dispose();\n  }\n\n  void _updateNameFillColor() {\n    setState(() {\n      _nameFillColor =\n          _nameFocusNode.hasFocus\n              ? Theme.of(context).primaryColor.withValues(alpha: 0.05)\n              : Theme.of(context).colorScheme.surface;\n    });\n  }\n\n  void _updateMobileNumberFillColor() {\n    setState(() {\n      _mobileNumberFillColor =\n          _mobileNumberFocusNode.hasFocus\n              ? Theme.of(context).primaryColor.withValues(alpha: 0.05)\n              : Theme.of(context).colorScheme.surface;\n    });\n  }\n\n  void _updateLocationFillColor() {\n    setState(() {\n      _locationFillColor =\n          _locationFocusNode.hasFocus\n              ? Theme.of(context).primaryColor.withValues(alpha: 0.05)\n              : Theme.of(context).colorScheme.surface;\n    });\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    final TextTheme textTheme = Theme.of(context).textTheme;\n    final Color primaryColor = Theme.of(context).primaryColor;\n    final ColorScheme colorScheme = Theme.of(context).colorScheme;\n\n    // Initialize default fill colors\n    _nameFillColor ??= colorScheme.surface;\n    _mobileNumberFillColor ??= colorScheme.surface;\n    _locationFillColor ??= colorScheme.surface;\n\n    return Scaffold(\n      backgroundColor: Colors.white, // Light grey background\n      appBar: AppBar(\n        scrolledUnderElevation: 0,\n        backgroundColor: Colors.transparent,\n        elevation: 0,\n        leading: IconButton(\n          icon: Icon(\n            Icons.arrow_back_ios,\n            color: primaryColor,\n            size: 20,\n          ), // Set back icon color to primaryColor\n          onPressed: () {\n            Navigator.of(context).pop();\n          },\n        ),\n        title: Text(\n          'Profile',\n          style: textTheme.titleLarge?.copyWith(\n            fontWeight: FontWeight.bold,\n            color: Colors.grey[800],\n            fontSize: 18,\n          ),\n        ),\n        centerTitle: true,\n        actions: [\n          IconButton(\n            icon: Icon(\n              Icons.settings_outlined,\n              color: primaryColor,\n            ), // Set settings icon color to primaryColor\n            onPressed: () {\n              Navigator.of(context).push(\n                PageRouteBuilder(pageBuilder: (_, __, ___) => SettingsScreen()),\n              );\n            },\n          ),\n          const SizedBox(width: 8.0),\n        ],\n      ),\n      body: SingleChildScrollView(\n        padding: const EdgeInsets.symmetric(horizontal: 24.0),\n        child: Column(\n          crossAxisAlignment: CrossAxisAlignment.start,\n          children: [\n            const SizedBox(height: 16.0),\n            // User Summary\n            Container(\n              padding: const EdgeInsets.all(16.0),\n              decoration: BoxDecoration(\n                color: colorScheme.surface,\n                borderRadius: BorderRadius.circular(15.0),\n                boxShadow: [\n                  BoxShadow(\n                    color: Colors.grey.withValues(alpha: 0.1),\n                    spreadRadius: 1,\n                    blurRadius: 5,\n                    offset: const Offset(0, 3),\n                  ),\n                ],\n              ),\n              child: Row(\n                children: [\n                  CircleAvatar(\n                    radius: 30,\n                    backgroundColor: Colors.grey[300],\n                    backgroundImage: NetworkImage(\n                      'https://picsum.photos/200/200?random=profile',\n                    ),\n                  ),\n                  const SizedBox(width: 16.0),\n                  Column(\n                    crossAxisAlignment: CrossAxisAlignment.start,\n                    children: [\n                      Text(\n                        'Jane Cooper',\n                        style: textTheme.titleMedium?.copyWith(\n                          fontWeight: FontWeight.bold,\n                          color: Colors.grey[800],\n                        ),\n                      ),\n                      Text(\n                        '+01618 411555',\n                        style: textTheme.bodyMedium?.copyWith(\n                          color: Colors.grey[600],\n                        ),\n                      ),\n                    ],\n                  ),\n                ],\n              ),\n            ),\n            const SizedBox(height: 24.0),\n            // Prioritized Service Promo\n            _PromoCard(\n              textTheme: textTheme,\n              primaryColor: primaryColor,\n              colorScheme: colorScheme,\n            ),\n            const SizedBox(height: 24.0),\n            // Profile Information Inputs\n            AuthTextfields().buildTextField(\n              controller: TextEditingController(),\n              labelText: \"Name\",\n            ),\n            const SizedBox(height: 16.0),\n\n            Row(\n              children: [\n                // Country code text field\n                SizedBox(\n                  width: 80,\n                  child: AuthTextfields().buildTextField(\n                    controller: TextEditingController(),\n                    labelText: \"Code\",\n                  ),\n                ),\n                const SizedBox(width: 8.0),\n                Expanded(\n                  child: AuthTextfields().buildTextField(\n                    controller: TextEditingController(),\n                    labelText: \"Number\",\n                  ),\n                ),\n              ],\n            ),\n            const SizedBox(height: 16.0),\n\n            AuthTextfields().buildTextField(\n              controller: TextEditingController(),\n              labelText: \"Current Location\",\n            ),\n            const SizedBox(height: 40.0),\n            // Explore Your Features\n            Text(\n              'Explore Your features',\n              style: textTheme.titleMedium?.copyWith(\n                fontWeight: FontWeight.bold,\n                color: Colors.grey[800],\n              ),\n            ),\n            const SizedBox(height: 24.0),\n            _BenefitItem(\n              icon: Icons.lightbulb_outline,\n              title: 'Rethink simplicity',\n              description:\n                  'Travel planning, simplified. No clutter. No confusion. Just smart, seamless experiences—powered by AI, designed for ease.',\n              textTheme: textTheme,\n            ),\n            const SizedBox(height: 24.0),\n            _BenefitItem(\n              icon: Icons.block,\n              title: 'No ads, Not now, Not ever',\n              description:\n                  'Enjoy a completely ad-free experience—focused on your journey, not distractions.',\n              textTheme: textTheme,\n            ),\n            const SizedBox(height: 24.0),\n            _BenefitItem(\n              icon: Icons.psychology_outlined,\n              title: 'We belive in App AI Technology',\n              description:\n                  'Harnessing the power of AI to create smarter, simpler travel experiences for you.',\n              textTheme: textTheme,\n            ),\n            const SizedBox(height: 40.0),\n            Center(\n              child: PrimaryTextButton(\n                text: 'Learn more about Travel AI App',\n                onPressed: () {\n                  Navigator.of(context).push(\n                    PageRouteBuilder(\n                      pageBuilder: (_, __, ___) => SubscriptionScreen(),\n                    ),\n                  );\n                },\n              ),\n            ),\n            const SizedBox(height: 40.0),\n          ],\n        ),\n      ),\n    );\n  }\n}\n\nclass _PromoCard extends StatelessWidget {\n  final TextTheme textTheme;\n  final Color primaryColor;\n  final ColorScheme colorScheme;\n\n  const _PromoCard({\n    required this.textTheme,\n    required this.primaryColor,\n    required this.colorScheme,\n  });\n\n  @override\n  Widget build(BuildContext context) {\n    return Container(\n      padding: const EdgeInsets.all(16.0),\n      decoration: BoxDecoration(\n        color: primaryColor.withValues(\n          alpha: 0.1,\n        ), // Light primary color background\n        borderRadius: BorderRadius.circular(15.0),\n        boxShadow: [\n          BoxShadow(\n            color: Colors.grey.withValues(alpha: 0.05),\n            spreadRadius: 1,\n            blurRadius: 3,\n            offset: const Offset(0, 2),\n          ),\n        ],\n      ),\n      child: Row(\n        children: [\n          Expanded(\n            child: Column(\n              crossAxisAlignment: CrossAxisAlignment.start,\n              children: [\n                Text(\n                  'Want to get free Prioritized service?',\n                  style: textTheme.titleMedium?.copyWith(\n                    fontWeight: FontWeight.bold,\n                    color: Colors.grey[800],\n                  ),\n                ),\n                const SizedBox(height: 8.0),\n                SizedBox(\n                  width: 120, // Constrain button width\n                  height: 40, // Standard button height\n                  child: FilledButton(\n                    onPressed: () {},\n                    style: FilledButton.styleFrom(\n                      backgroundColor: primaryColor, // Set to primaryColor\n                      foregroundColor: Colors.white, // Set text color to white\n                      shape: RoundedRectangleBorder(\n                        borderRadius: BorderRadius.circular(\n                          60,\n                        ), // Match PrimaryTextButton\n                      ),\n                      padding: const EdgeInsets.symmetric(horizontal: 16),\n                    ),\n                    child: Text(\n                      'View Details',\n                      style: textTheme.bodyMedium?.copyWith(\n                        fontWeight: FontWeight.bold,\n                        color: Colors.white, // Ensure text is white\n                      ),\n                    ),\n                  ),\n                ),\n              ],\n            ),\n          ),\n          const SizedBox(width: 16.0),\n          ClipRRect(\n            borderRadius: BorderRadius.circular(10.0),\n            child: Image.network(\n              'https://picsum.photos/100/100?random=promo', // Placeholder image\n              height: 80,\n              width: 80,\n              fit: BoxFit.cover,\n              errorBuilder:\n                  (context, error, stackTrace) => Container(\n                    height: 80,\n                    width: 80,\n                    color: Colors.grey[300],\n                    child: Icon(Icons.image, color: Colors.grey[600]),\n                  ),\n            ),\n          ),\n        ],\n      ),\n    );\n  }\n}\n\nclass _BenefitItem extends StatelessWidget {\n  final IconData icon;\n  final String title;\n  final String description;\n  final TextTheme textTheme;\n\n  const _BenefitItem({\n    required this.icon,\n    required this.title,\n    required this.description,\n    required this.textTheme,\n  });\n\n  @override\n  Widget build(BuildContext context) {\n    return Row(\n      crossAxisAlignment: CrossAxisAlignment.start,\n      children: [\n        Icon(icon, color: Colors.grey[700], size: 28),\n        const SizedBox(width: 16.0),\n        Expanded(\n          child: Column(\n            crossAxisAlignment: CrossAxisAlignment.start,\n            children: [\n              Text(\n                title,\n                style: textTheme.titleMedium?.copyWith(\n                  fontWeight: FontWeight.bold,\n                  color: Colors.grey[800],\n                ),\n              ),\n              const SizedBox(height: 4.0),\n              Text(\n                description,\n                style: textTheme.bodyMedium?.copyWith(color: Colors.grey[600]),\n              ),\n            ],\n          ),\n        ),\n      ],\n    );\n  }\n}\n```\n\n// File: lib\\screens\\reservation_details_screen.dart\n```dart\nimport 'package:flutter/gestures.dart';\r\nimport 'package:flutter/material.dart';\r\nimport 'package:ai_travel_app_ui_kit/components/buttons/primary_text_button.dart';\r\n\r\nclass ReservationDetailsScreen extends StatefulWidget {\r\n  const ReservationDetailsScreen({super.key});\r\n\r\n  @override\r\n  State<ReservationDetailsScreen> createState() =>\r\n      _ReservationDetailsScreenState();\r\n}\r\n\r\nclass _ReservationDetailsScreenState extends State<ReservationDetailsScreen> {\r\n  String? _selectedPaymentOption =\r\n      'Pay part now, part later'; // Default selection\r\n  String? _selectedPaymentMethod =\r\n      'Google Pay - **** **** 4709'; // Default selection\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    final TextTheme textTheme = Theme.of(context).textTheme;\r\n    final Color primaryColor = Theme.of(context).primaryColor;\r\n    final ColorScheme colorScheme = Theme.of(context).colorScheme;\r\n\r\n    return Scaffold(\r\n      backgroundColor: Colors.white, // Light grey background\r\n      appBar: AppBar(\r\n        scrolledUnderElevation: 0,\r\n        backgroundColor: Colors.white,\r\n        elevation: 0,\r\n        leading: IconButton(\r\n          icon: Icon(\r\n            Icons.close,\r\n            color: primaryColor,\r\n          ), // Set close icon color to primaryColor\r\n          onPressed: () {\r\n            Navigator.of(context).pop();\r\n          },\r\n        ),\r\n        title: Text(\r\n          'Request to book',\r\n          style: textTheme.titleLarge?.copyWith(\r\n            fontWeight: FontWeight.bold,\r\n            color: Colors.grey[800],\r\n            fontSize: 18,\r\n          ),\r\n        ),\r\n        centerTitle: true,\r\n      ),\r\n      body: Column(\r\n        children: [\r\n          Expanded(\r\n            child: ListView(\r\n              padding: const EdgeInsets.symmetric(horizontal: 24.0),\r\n              children: [\r\n                _BookingSummaryCard(\r\n                  textTheme: textTheme,\r\n                  colorScheme: colorScheme,\r\n                ),\r\n                const SizedBox(height: 16.0),\r\n                // --- New: Required for your trip section ---\r\n                _SectionContainer(\r\n                  textTheme: textTheme,\r\n                  colorScheme: colorScheme,\r\n                  title: 'Required for your trip',\r\n                  children: [\r\n                    _RequiredInfoRow(\r\n                      label: 'Message the host',\r\n                      hintText: 'Hi Brother,\\nCheck all My files!',\r\n                      onAddTap: () {},\r\n                      textTheme: textTheme,\r\n                    ),\r\n                    _RequiredInfoRow(\r\n                      label: 'Phone Number',\r\n                      hintText: '01616 411555',\r\n                      onAddTap: () {},\r\n                      textTheme: textTheme,\r\n                    ),\r\n                    _RequiredInfoRow(\r\n                      label: 'Profile Photo',\r\n                      hintText: 'Uploaded',\r\n                      onAddTap: () {},\r\n                      textTheme: textTheme,\r\n                    ),\r\n                  ],\r\n                ),\r\n                const SizedBox(height: 16.0),\r\n                // --- New: Cancellation Policy Section (distinct from original card) ---\r\n                _SectionContainer(\r\n                  textTheme: textTheme,\r\n                  colorScheme: colorScheme,\r\n                  title: 'Cancellation Policy',\r\n                  children: [\r\n                    Row(\r\n                      crossAxisAlignment: CrossAxisAlignment.start,\r\n                      children: [\r\n                        Expanded(\r\n                          child: Text.rich(\r\n                            TextSpan(\r\n                              text:\r\n                                  'Stay informed with clear, flexible cancellation terms. View refundable dates, fees, and policy types before you book. ',\r\n                              style: textTheme.bodyMedium?.copyWith(\r\n                                color: Colors.grey[700],\r\n                              ),\r\n                              children: [\r\n                                TextSpan(\r\n                                  text: 'Learn More',\r\n                                  style: textTheme.bodyMedium?.copyWith(\r\n                                    color: primaryColor,\r\n                                    fontWeight: FontWeight.bold,\r\n                                  ),\r\n                                  recognizer:\r\n                                      TapGestureRecognizer()..onTap = () {},\r\n                                ),\r\n                              ],\r\n                            ),\r\n                          ),\r\n                        ),\r\n                        const SizedBox(width: 16.0),\r\n                        Icon(\r\n                          Icons.calendar_today_outlined,\r\n                          color: Colors.grey[600],\r\n                          size: 24,\r\n                        ),\r\n                      ],\r\n                    ),\r\n                  ],\r\n                ),\r\n                const SizedBox(height: 16.0),\r\n                // --- New: Hotel Rules Section ---\r\n                _SectionContainer(\r\n                  textTheme: textTheme,\r\n                  colorScheme: colorScheme,\r\n                  title: 'Hotel Rules',\r\n                  children: [\r\n                    Text(\r\n                      'Know before you go—check key rules like check-in/out times, smoking policies...',\r\n                      style: textTheme.bodyMedium?.copyWith(\r\n                        color: Colors.grey[700],\r\n                      ),\r\n                    ),\r\n                    const SizedBox(height: 8.0),\r\n                    _BulletPointText(\r\n                      text: 'Follow all Rules',\r\n                      textTheme: textTheme,\r\n                    ),\r\n                    _BulletPointText(\r\n                      text:\r\n                          'If you break intentionally. Hotel Management may charge you',\r\n                      textTheme: textTheme,\r\n                    ),\r\n                  ],\r\n                ),\r\n                const SizedBox(height: 16.0),\r\n                // --- New: Your Reservation Gonna Confirm Soon! ---\r\n                Container(\r\n                  padding: const EdgeInsets.all(16.0),\r\n                  decoration: BoxDecoration(\r\n                    color: colorScheme.surface,\r\n                    borderRadius: BorderRadius.circular(15.0),\r\n                    boxShadow: [\r\n                      BoxShadow(\r\n                        color: Colors.grey.withValues(alpha: 0.1),\r\n                        spreadRadius: 1,\r\n                        blurRadius: 5,\r\n                        offset: const Offset(0, 3),\r\n                      ),\r\n                    ],\r\n                  ),\r\n                  child: Row(\r\n                    children: [\r\n                      Expanded(\r\n                        child: Text(\r\n                          'Your Reservation Gonna\\nConfirm Soon!',\r\n                          style: textTheme.titleMedium?.copyWith(\r\n                            fontWeight: FontWeight.bold,\r\n                            color: Colors.grey[800],\r\n                          ),\r\n                        ),\r\n                      ),\r\n                      Icon(\r\n                        Icons.calendar_month,\r\n                        color: Colors.grey[600],\r\n                        size: 36,\r\n                      ),\r\n                    ],\r\n                  ),\r\n                ),\r\n                const SizedBox(\r\n                  height: 24.0,\r\n                ), // Consistent spacing before next section\r\n                // --- Original sections follow below ---\r\n                _SectionContainer(\r\n                  textTheme: textTheme,\r\n                  colorScheme: colorScheme,\r\n                  title: 'Your Trip',\r\n                  children: [\r\n                    _TripDetailRow(\r\n                      label: 'Dates',\r\n                      value: 'March 10 - 13, 2024 (4 Days)',\r\n                      onEdit: () {},\r\n                      textTheme: textTheme,\r\n                    ),\r\n                    _TripDetailRow(\r\n                      label: 'Guests',\r\n                      value: '2 Guests',\r\n                      onEdit: () {},\r\n                      textTheme: textTheme,\r\n                    ),\r\n                  ],\r\n                ),\r\n                const SizedBox(height: 16.0),\r\n                // Choose how to pay Section\r\n                _SectionContainer(\r\n                  textTheme: textTheme,\r\n                  colorScheme: colorScheme,\r\n                  title: 'Choose how to pay',\r\n                  children: [\r\n                    _PaymentOptionTile(\r\n                      title: 'Pay 68,000 BDT (full)',\r\n                      value: 'Pay 68,000 BDT (full)',\r\n                      groupValue: _selectedPaymentOption,\r\n                      onChanged: (value) {\r\n                        setState(() {\r\n                          _selectedPaymentOption = value;\r\n                        });\r\n                      },\r\n                      textTheme: textTheme,\r\n                      primaryColor: primaryColor,\r\n                    ),\r\n                    _PaymentOptionTile(\r\n                      title: 'Pay part now, part later',\r\n                      subtitle:\r\n                          'Pay 40% Money today as an advance payment for room booking. ',\r\n                      subtitleLink: 'More info',\r\n                      value: 'Pay part now, part later',\r\n                      groupValue: _selectedPaymentOption,\r\n                      onChanged: (value) {\r\n                        setState(() {\r\n                          _selectedPaymentOption = value;\r\n                        });\r\n                      },\r\n                      textTheme: textTheme,\r\n                      primaryColor: primaryColor,\r\n                    ),\r\n                  ],\r\n                ),\r\n                const SizedBox(height: 16.0),\r\n                // Price Details Section\r\n                _SectionContainer(\r\n                  textTheme: textTheme,\r\n                  colorScheme: colorScheme,\r\n                  title: 'Price Details',\r\n                  children: [\r\n                    _PriceDetailRow(\r\n                      label: 'Advance Payment',\r\n                      amount: '27,200 BDT',\r\n                      textTheme: textTheme,\r\n                      isBold: false,\r\n                    ),\r\n                    _PriceDetailRow(\r\n                      label: 'App Service Fee',\r\n                      amount: '300 BDT',\r\n                      textTheme: textTheme,\r\n                      isBold: false,\r\n                    ),\r\n                    _PriceDetailRow(\r\n                      label: 'Government Tax',\r\n                      amount: '500 BDT',\r\n                      textTheme: textTheme,\r\n                      isBold: false,\r\n                    ),\r\n                    const SizedBox(height: 8.0),\r\n                    Divider(\r\n                      color: Colors.grey[300],\r\n                      thickness: 1,\r\n                      indent: 0,\r\n                      endIndent: 0,\r\n                    ),\r\n                    const SizedBox(height: 8.0),\r\n                    _PriceDetailRow(\r\n                      label: 'Total (BDT)',\r\n                      amount: '28,000 BDT',\r\n                      textTheme: textTheme,\r\n                      isBold: true,\r\n                      linkText: 'More Info',\r\n                      onLinkTap: () {},\r\n                    ),\r\n                    const SizedBox(height: 16.0),\r\n                    _PriceDetailRow(\r\n                      label: 'Due Now',\r\n                      amount: '40,000 BDT',\r\n                      textTheme: textTheme,\r\n                      isBold: true,\r\n                      isPrimaryColor: true,\r\n                    ),\r\n                  ],\r\n                ),\r\n                const SizedBox(height: 16.0),\r\n                // Pay With Section\r\n                _SectionContainer(\r\n                  textTheme: textTheme,\r\n                  colorScheme: colorScheme,\r\n                  title: 'Pay With',\r\n                  children: [\r\n                    _PaymentMethodTile(\r\n                      icon:\r\n                          Icons\r\n                              .person_outline, // Placeholder for Google Pay icon\r\n                      title: 'Google Pay - **** **** 4709',\r\n                      value: 'Google Pay - **** **** 4709',\r\n                      groupValue: _selectedPaymentMethod,\r\n                      onChanged: (value) {\r\n                        setState(() {\r\n                          _selectedPaymentMethod = value;\r\n                        });\r\n                      },\r\n                      textTheme: textTheme,\r\n                      primaryColor: primaryColor,\r\n                    ),\r\n                    _PaymentMethodTile(\r\n                      icon:\r\n                          Icons.credit_card, // Placeholder for Mastercard icon\r\n                      title: 'Mastercard - **** **** 6782',\r\n                      value: 'Mastercard - **** **** 6782',\r\n                      groupValue: _selectedPaymentMethod,\r\n                      onChanged: (value) {\r\n                        setState(() {\r\n                          _selectedPaymentMethod = value;\r\n                        });\r\n                      },\r\n                      textTheme: textTheme,\r\n                      primaryColor: primaryColor,\r\n                    ),\r\n                    _PaymentMethodTile(\r\n                      icon: Icons.add_card,\r\n                      title: 'Add new card',\r\n                      isAddCard: true,\r\n                      onTap: () {},\r\n                      textTheme: textTheme,\r\n                      primaryColor: primaryColor,\r\n                    ),\r\n                  ],\r\n                ),\r\n                const SizedBox(height: 40.0), // Padding before bottom button\r\n              ],\r\n            ),\r\n          ),\r\n          Padding(\r\n            padding: const EdgeInsets.symmetric(\r\n              horizontal: 24.0,\r\n              vertical: 24.0,\r\n            ),\r\n            child: PrimaryTextButton(text: 'Next', onPressed: () {}),\r\n          ),\r\n        ],\r\n      ),\r\n    );\r\n  }\r\n}\r\n\r\nclass _SectionContainer extends StatelessWidget {\r\n  final TextTheme textTheme;\r\n  final ColorScheme colorScheme;\r\n  final String title;\r\n  final List<Widget> children;\r\n\r\n  const _SectionContainer({\r\n    required this.textTheme,\r\n    required this.colorScheme,\r\n    required this.title,\r\n    required this.children,\r\n  });\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return Container(\r\n      margin: const EdgeInsets.only(bottom: 16.0), // Space between sections\r\n      padding: const EdgeInsets.all(16.0), // Internal padding\r\n      decoration: BoxDecoration(\r\n        color: colorScheme.surface, // White background\r\n        borderRadius: BorderRadius.circular(15.0), // Rounded corners\r\n        boxShadow: [\r\n          BoxShadow(\r\n            color: Colors.grey.withValues(alpha: 0.1),\r\n            spreadRadius: 1,\r\n            blurRadius: 5,\r\n            offset: const Offset(0, 3),\r\n          ),\r\n        ],\r\n      ),\r\n      child: Column(\r\n        crossAxisAlignment: CrossAxisAlignment.start,\r\n        children: [\r\n          Text(\r\n            title,\r\n            style: textTheme.titleMedium?.copyWith(\r\n              fontWeight: FontWeight.bold,\r\n              color: Colors.grey[800],\r\n            ),\r\n          ),\r\n          const SizedBox(height: 16.0),\r\n          ...children,\r\n        ],\r\n      ),\r\n    );\r\n  }\r\n}\r\n\r\nclass _BookingSummaryCard extends StatelessWidget {\r\n  final TextTheme textTheme;\r\n  final ColorScheme colorScheme;\r\n\r\n  const _BookingSummaryCard({\r\n    required this.textTheme,\r\n    required this.colorScheme,\r\n  });\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return Container(\r\n      padding: const EdgeInsets.all(16.0),\r\n      decoration: BoxDecoration(\r\n        color: colorScheme.surface, // White background\r\n        borderRadius: BorderRadius.circular(15.0),\r\n        boxShadow: [\r\n          BoxShadow(\r\n            color: Colors.grey.withValues(alpha: 0.1),\r\n            spreadRadius: 1,\r\n            blurRadius: 5,\r\n            offset: const Offset(0, 3),\r\n          ),\r\n        ],\r\n      ),\r\n      child: Row(\r\n        crossAxisAlignment: CrossAxisAlignment.start,\r\n        children: [\r\n          ClipRRect(\r\n            borderRadius: BorderRadius.circular(10.0),\r\n            child: Image.network(\r\n              'https://picsum.photos/100/100?random=roombooking', // Placeholder image\r\n              height: 80,\r\n              width: 80,\r\n              fit: BoxFit.cover,\r\n              errorBuilder:\r\n                  (context, error, stackTrace) => Container(\r\n                    height: 80,\r\n                    width: 80,\r\n                    color: Colors.grey[300],\r\n                    child: Icon(Icons.image, color: Colors.grey[600]),\r\n                  ),\r\n            ),\r\n          ),\r\n          const SizedBox(width: 16.0),\r\n          Expanded(\r\n            child: Column(\r\n              crossAxisAlignment: CrossAxisAlignment.start,\r\n              children: [\r\n                Text(\r\n                  'Room Booking',\r\n                  style: textTheme.bodyMedium?.copyWith(\r\n                    color: Colors.grey[600],\r\n                  ),\r\n                ),\r\n                const SizedBox(height: 4.0),\r\n                Text(\r\n                  'Loft Style Guest suite with\\nPrivate Bathroom',\r\n                  style: textTheme.titleMedium?.copyWith(\r\n                    fontWeight: FontWeight.bold,\r\n                    color: Colors.grey[800],\r\n                  ),\r\n                  maxLines: 2,\r\n                  overflow: TextOverflow.ellipsis,\r\n                ),\r\n                const SizedBox(height: 4.0),\r\n                Row(\r\n                  children: [\r\n                    Icon(Icons.star, color: Colors.amber, size: 16),\r\n                    const SizedBox(width: 4.0),\r\n                    Text(\r\n                      '4.9 (240)',\r\n                      style: textTheme.bodySmall?.copyWith(\r\n                        color: Colors.grey[700],\r\n                      ),\r\n                    ),\r\n                  ],\r\n                ),\r\n              ],\r\n            ),\r\n          ),\r\n        ],\r\n      ),\r\n    );\r\n  }\r\n}\r\n\r\nclass _TripDetailRow extends StatelessWidget {\r\n  final String label;\r\n  final String value;\r\n  final VoidCallback onEdit;\r\n  final TextTheme textTheme;\r\n\r\n  const _TripDetailRow({\r\n    required this.label,\r\n    required this.value,\r\n    required this.onEdit,\r\n    required this.textTheme,\r\n  });\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return Padding(\r\n      padding: const EdgeInsets.symmetric(vertical: 8.0),\r\n      child: Row(\r\n        mainAxisAlignment: MainAxisAlignment.spaceBetween,\r\n        children: [\r\n          Column(\r\n            crossAxisAlignment: CrossAxisAlignment.start,\r\n            children: [\r\n              Text(\r\n                label,\r\n                style: textTheme.bodyLarge?.copyWith(\r\n                  // Changed to bodyLarge as per image\r\n                  fontWeight: FontWeight.normal, // Not bold in image\r\n                  color: Colors.grey[700], // Adjust color\r\n                ),\r\n              ),\r\n              const SizedBox(height: 4.0),\r\n              Text(\r\n                value,\r\n                style: textTheme.bodyMedium?.copyWith(color: Colors.grey[600]),\r\n              ),\r\n            ],\r\n          ),\r\n          TextButton(\r\n            onPressed: onEdit,\r\n            child: Text(\r\n              'Edit',\r\n              style: textTheme.bodyMedium?.copyWith(\r\n                color: Theme.of(context).primaryColor,\r\n              ),\r\n            ),\r\n          ),\r\n        ],\r\n      ),\r\n    );\r\n  }\r\n}\r\n\r\nclass _PaymentOptionTile extends StatelessWidget {\r\n  final String title;\r\n  final String? subtitle;\r\n  final String? subtitleLink;\r\n  final String value;\r\n  final String? groupValue;\r\n  final ValueChanged<String?> onChanged;\r\n  final TextTheme textTheme;\r\n  final Color primaryColor;\r\n\r\n  const _PaymentOptionTile({\r\n    required this.title,\r\n    this.subtitle,\r\n    this.subtitleLink,\r\n    required this.value,\r\n    required this.groupValue,\r\n    required this.onChanged,\r\n    required this.textTheme,\r\n    required this.primaryColor,\r\n  });\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return Column(\r\n      children: [\r\n        RadioListTile<String>(\r\n          title: Text(\r\n            title,\r\n            style: textTheme.bodyLarge?.copyWith(\r\n              fontWeight: FontWeight.normal, // Not bold in image\r\n              color: Colors.grey[700], // Adjust color\r\n            ),\r\n          ),\r\n          subtitle:\r\n              subtitle != null\r\n                  ? Text.rich(\r\n                    TextSpan(\r\n                      text: subtitle,\r\n                      style: textTheme.bodySmall?.copyWith(\r\n                        color: Colors.grey[600],\r\n                      ),\r\n                      children: [\r\n                        if (subtitleLink != null)\r\n                          TextSpan(\r\n                            text: subtitleLink,\r\n                            style: textTheme.bodySmall?.copyWith(\r\n                              color: primaryColor,\r\n                              fontWeight: FontWeight.bold,\r\n                            ),\r\n                            recognizer: TapGestureRecognizer()..onTap = () {},\r\n                          ),\r\n                      ],\r\n                    ),\r\n                  )\r\n                  : null,\r\n          value: value,\r\n          groupValue: groupValue,\r\n          onChanged: onChanged,\r\n          activeColor: primaryColor,\r\n          controlAffinity: ListTileControlAffinity.trailing,\r\n        ),\r\n        if (subtitle != null)\r\n          // No divider needed here, container will provide separation\r\n          const SizedBox(height: 8.0), // Space between radio tiles\r\n      ],\r\n    );\r\n  }\r\n}\r\n\r\nclass _PriceDetailRow extends StatelessWidget {\r\n  final String label;\r\n  final String amount;\r\n  final TextTheme textTheme;\r\n  final bool isBold;\r\n  final String? linkText;\r\n  final VoidCallback? onLinkTap;\r\n  final bool isPrimaryColor;\r\n\r\n  const _PriceDetailRow({\r\n    required this.label,\r\n    required this.amount,\r\n    required this.textTheme,\r\n    this.isBold = false,\r\n    this.linkText,\r\n    this.onLinkTap,\r\n    this.isPrimaryColor = false,\r\n  });\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    final Color textColor =\r\n        isPrimaryColor\r\n            ? Theme.of(context).primaryColor\r\n            : (isBold ? Colors.grey[800] : Colors.grey[700])!;\r\n\r\n    return Padding(\r\n      padding: const EdgeInsets.symmetric(vertical: 8.0),\r\n      child: Row(\r\n        mainAxisAlignment: MainAxisAlignment.spaceBetween,\r\n        children: [\r\n          Row(\r\n            children: [\r\n              Text(\r\n                label,\r\n                style: textTheme.bodyLarge?.copyWith(\r\n                  fontWeight: isBold ? FontWeight.bold : FontWeight.normal,\r\n                  color: textColor,\r\n                ),\r\n              ),\r\n              if (linkText != null) ...[\r\n                const SizedBox(width: 8.0),\r\n                GestureDetector(\r\n                  onTap: onLinkTap,\r\n                  child: Text(\r\n                    linkText!,\r\n                    style: textTheme.bodySmall?.copyWith(\r\n                      color: Theme.of(context).primaryColor,\r\n                      fontWeight: FontWeight.bold,\r\n                    ),\r\n                  ),\r\n                ),\r\n              ],\r\n            ],\r\n          ),\r\n          Text(\r\n            amount,\r\n            style: textTheme.bodyLarge?.copyWith(\r\n              fontWeight: isBold ? FontWeight.bold : FontWeight.normal,\r\n              color: textColor,\r\n            ),\r\n          ),\r\n        ],\r\n      ),\r\n    );\r\n  }\r\n}\r\n\r\nclass _PaymentMethodTile extends StatelessWidget {\r\n  final IconData? icon;\r\n  final String title;\r\n  final String? value; // Used for radio selection\r\n  final String? groupValue;\r\n  final ValueChanged<String?>? onChanged;\r\n  final bool isAddCard;\r\n  final VoidCallback? onTap;\r\n  final TextTheme textTheme;\r\n  final Color primaryColor;\r\n\r\n  const _PaymentMethodTile({\r\n    this.icon,\r\n    required this.title,\r\n    this.value,\r\n    this.groupValue,\r\n    this.onChanged,\r\n    this.isAddCard = false,\r\n    this.onTap,\r\n    required this.textTheme,\r\n    required this.primaryColor,\r\n  });\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    if (isAddCard) {\r\n      return ListTile(\r\n        leading: Icon(icon, color: Colors.grey[700]),\r\n        title: Text(\r\n          title,\r\n          style: textTheme.bodyLarge?.copyWith(color: Colors.grey[800]),\r\n        ),\r\n        trailing: Icon(\r\n          Icons.arrow_forward_ios,\r\n          color: Colors.grey[400],\r\n          size: 16,\r\n        ),\r\n        onTap: onTap,\r\n      );\r\n    } else {\r\n      return RadioListTile<String>(\r\n        value: value!,\r\n        groupValue: groupValue,\r\n        onChanged: onChanged,\r\n        activeColor: primaryColor,\r\n        controlAffinity: ListTileControlAffinity.trailing,\r\n        title: Row(\r\n          children: [\r\n            if (icon != null) ...[\r\n              Icon(icon, color: Colors.grey[700]),\r\n              const SizedBox(width: 8.0),\r\n            ],\r\n            Expanded(\r\n              // Wrap text in Expanded to prevent overflow\r\n              child: Text(\r\n                title,\r\n                style: textTheme.bodyLarge?.copyWith(color: Colors.grey[800]),\r\n                overflow: TextOverflow.ellipsis, // Add ellipsis for overflow\r\n              ),\r\n            ),\r\n          ],\r\n        ),\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nclass _RequiredInfoRow extends StatelessWidget {\r\n  final String label;\r\n  final String hintText;\r\n  final VoidCallback onAddTap;\r\n  final TextTheme textTheme;\r\n\r\n  const _RequiredInfoRow({\r\n    required this.label,\r\n    required this.hintText,\r\n    required this.onAddTap,\r\n    required this.textTheme,\r\n  });\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return Padding(\r\n      padding: const EdgeInsets.symmetric(vertical: 8.0),\r\n      child: Row(\r\n        mainAxisAlignment: MainAxisAlignment.spaceBetween,\r\n        crossAxisAlignment:\r\n            CrossAxisAlignment.start, // Align to top for multiline hint\r\n        children: [\r\n          Expanded(\r\n            // Ensure text takes available space\r\n            child: Column(\r\n              crossAxisAlignment: CrossAxisAlignment.start,\r\n              children: [\r\n                Text(\r\n                  label,\r\n                  style: textTheme.bodyLarge?.copyWith(\r\n                    fontWeight: FontWeight.normal,\r\n                    color: Colors.grey[700],\r\n                  ),\r\n                ),\r\n                const SizedBox(height: 4.0),\r\n                Text(\r\n                  hintText,\r\n                  style: textTheme.bodyMedium?.copyWith(\r\n                    color: Colors.grey[500],\r\n                  ),\r\n                  maxLines: 2, // Allow two lines for hint text\r\n                  overflow:\r\n                      TextOverflow.ellipsis, // Ellipsis if still overflows\r\n                ),\r\n              ],\r\n            ),\r\n          ),\r\n          const SizedBox(width: 16.0), // Space between text and button\r\n          SizedBox(\r\n            height: 30, // Smaller height for the \"Add\" button\r\n            child: OutlinedButton(\r\n              onPressed: onAddTap,\r\n              style: OutlinedButton.styleFrom(\r\n                side: BorderSide(color: Colors.grey[300]!, width: 1),\r\n                shape: RoundedRectangleBorder(\r\n                  borderRadius: BorderRadius.circular(8.0),\r\n                ),\r\n                padding: const EdgeInsets.symmetric(horizontal: 16),\r\n                minimumSize: Size.zero, // Remove default minimum size\r\n                tapTargetSize: MaterialTapTargetSize.shrinkWrap,\r\n              ),\r\n              child: Text(\r\n                'Add',\r\n                style: textTheme.bodySmall?.copyWith(\r\n                  color: Theme.of(context).primaryColor,\r\n                ),\r\n              ),\r\n            ),\r\n          ),\r\n        ],\r\n      ),\r\n    );\r\n  }\r\n}\r\n\r\nclass _BulletPointText extends StatelessWidget {\r\n  final String text;\r\n  final TextTheme textTheme;\r\n\r\n  const _BulletPointText({required this.text, required this.textTheme});\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return Padding(\r\n      padding: const EdgeInsets.only(left: 8.0, bottom: 8.0),\r\n      child: Row(\r\n        crossAxisAlignment: CrossAxisAlignment.start,\r\n        children: [\r\n          Text(\r\n            '• ',\r\n            style: textTheme.bodyMedium?.copyWith(color: Colors.grey[700]),\r\n          ),\r\n          Expanded(\r\n            child: Text(\r\n              text,\r\n              style: textTheme.bodyMedium?.copyWith(color: Colors.grey[700]),\r\n            ),\r\n          ),\r\n        ],\r\n      ),\r\n    );\r\n  }\r\n}\n```\n\n// File: lib\\screens\\settings_screen.dart\n```dart\nimport 'package:flutter/material.dart';\n\nclass SettingsScreen extends StatefulWidget {\n  const SettingsScreen({super.key});\n\n  @override\n  State<SettingsScreen> createState() => _SettingsScreenState();\n}\n\nclass _SettingsScreenState extends State<SettingsScreen> {\n  bool _notificationsEnabled = true;\n  bool _emailNotificationEnabled = true;\n  bool _darkModeEnabled = false;\n  bool _locationServicesEnabled = true;\n\n  @override\n  Widget build(BuildContext context) {\n    final TextTheme textTheme = Theme.of(context).textTheme;\n    final Color primaryColor = Theme.of(context).primaryColor;\n    final ColorScheme colorScheme = Theme.of(context).colorScheme;\n\n    return Scaffold(\n      backgroundColor: Colors.white, // Light grey background\n      appBar: AppBar(\n        scrolledUnderElevation: 0,\n        backgroundColor: Colors.transparent,\n        elevation: 0,\n        leading: IconButton(\n          icon: Icon(\n            Icons.arrow_back_ios,\n            color: primaryColor,\n            size: 20,\n          ), // Back icon primary color\n          onPressed: () {\n            Navigator.of(context).pop();\n          },\n        ),\n        title: Text(\n          'Settings',\n          style: textTheme.titleLarge?.copyWith(\n            fontWeight: FontWeight.bold,\n            color: Colors.grey[800],\n            fontSize: 18,\n          ),\n        ),\n        centerTitle: true,\n        actions: [const SizedBox(width: 8.0)],\n      ),\n      body: SingleChildScrollView(\n        padding: const EdgeInsets.symmetric(horizontal: 24.0),\n        child: Column(\n          crossAxisAlignment: CrossAxisAlignment.start,\n          children: [\n            const SizedBox(height: 24.0),\n            _SettingsSection(\n              title: 'General',\n              textTheme: textTheme,\n              colorScheme: colorScheme,\n              children: [\n                _SettingsTile(\n                  title: 'Edit Profile',\n                  icon: Icons.person_outline,\n                  onTap: () {},\n                  textTheme: textTheme,\n                  primaryColor: primaryColor,\n                ),\n                _SettingsTile(\n                  title: 'Change Password',\n                  icon: Icons.lock_outline,\n                  onTap: () {},\n                  textTheme: textTheme,\n                  primaryColor: primaryColor,\n                ),\n                _SettingsTile(\n                  title: 'Language',\n                  icon: Icons.language,\n                  onTap: () {},\n                  textTheme: textTheme,\n                  primaryColor: primaryColor,\n                ),\n              ],\n            ),\n            const SizedBox(height: 24.0),\n            _SettingsSection(\n              title: 'Notifications',\n              textTheme: textTheme,\n              colorScheme: colorScheme,\n              children: [\n                _SettingsToggleTile(\n                  title: 'Push Notifications',\n                  icon: Icons.notifications_none,\n                  value: _notificationsEnabled,\n                  onChanged: (bool value) {\n                    setState(() {\n                      _notificationsEnabled = value;\n                    });\n                  },\n                  textTheme: textTheme,\n                  primaryColor: primaryColor,\n                  colorScheme: colorScheme,\n                ),\n                _SettingsToggleTile(\n                  title: 'Email Notifications',\n                  icon: Icons.email_outlined,\n                  value:\n                      _emailNotificationEnabled, // Use same state for example\n                  onChanged: (bool value) {\n                    setState(() {\n                      _emailNotificationEnabled = value;\n                    });\n                  },\n                  textTheme: textTheme,\n                  primaryColor: primaryColor,\n                  colorScheme: colorScheme,\n                ),\n              ],\n            ),\n            const SizedBox(height: 24.0),\n            _SettingsSection(\n              title: 'Privacy & Security',\n              textTheme: textTheme,\n              colorScheme: colorScheme,\n              children: [\n                _SettingsToggleTile(\n                  title: 'Location Services',\n                  icon: Icons.location_on_outlined,\n                  value: _locationServicesEnabled,\n                  onChanged: (bool value) {\n                    setState(() {\n                      _locationServicesEnabled = value;\n                    });\n                  },\n                  textTheme: textTheme,\n                  primaryColor: primaryColor,\n                  colorScheme: colorScheme,\n                ),\n                _SettingsToggleTile(\n                  title: 'Dark Mode',\n                  icon: Icons.dark_mode_outlined,\n                  value: _darkModeEnabled,\n                  onChanged: (bool value) {\n                    setState(() {\n                      _darkModeEnabled = value;\n                    });\n                  },\n                  textTheme: textTheme,\n                  primaryColor: primaryColor,\n                  colorScheme: colorScheme,\n                ),\n                _SettingsTile(\n                  title: 'Privacy Policy',\n                  icon: Icons.policy_outlined,\n                  onTap: () {},\n                  textTheme: textTheme,\n                  primaryColor: primaryColor,\n                ),\n              ],\n            ),\n            const SizedBox(height: 24.0),\n            _SettingsSection(\n              title: 'About',\n              textTheme: textTheme,\n              colorScheme: colorScheme,\n              children: [\n                _SettingsTile(\n                  title: 'App Version',\n                  subtitle: '1.0.0',\n                  icon: Icons.info_outline,\n                  onTap: () {},\n                  textTheme: textTheme,\n                  primaryColor: primaryColor,\n                ),\n                _SettingsTile(\n                  title: 'Licenses',\n                  icon: Icons.description_outlined,\n                  onTap: () {},\n                  textTheme: textTheme,\n                  primaryColor: primaryColor,\n                ),\n              ],\n            ),\n            const SizedBox(height: 24.0),\n            _SettingsSection(\n              title: 'Help & Support',\n              textTheme: textTheme,\n              colorScheme: colorScheme,\n              children: [\n                _SettingsTile(\n                  title: 'Contact Us',\n                  icon: Icons.support_agent_outlined,\n                  onTap: () {},\n                  textTheme: textTheme,\n                  primaryColor: primaryColor,\n                ),\n                _SettingsTile(\n                  title: 'FAQ',\n                  icon: Icons.live_help_outlined,\n                  onTap: () {},\n                  textTheme: textTheme,\n                  primaryColor: primaryColor,\n                ),\n              ],\n            ),\n            const SizedBox(height: 40.0),\n          ],\n        ),\n      ),\n    );\n  }\n}\n\nclass _SettingsSection extends StatelessWidget {\n  final String title;\n  final List<Widget> children;\n  final TextTheme textTheme;\n  final ColorScheme colorScheme;\n\n  const _SettingsSection({\n    required this.title,\n    required this.children,\n    required this.textTheme,\n    required this.colorScheme,\n  });\n\n  @override\n  Widget build(BuildContext context) {\n    return Column(\n      crossAxisAlignment: CrossAxisAlignment.start,\n      children: [\n        Padding(\n          padding: const EdgeInsets.only(bottom: 12.0),\n          child: Text(\n            title,\n            style: textTheme.titleMedium?.copyWith(\n              fontWeight: FontWeight.bold,\n              color: Colors.grey[800],\n            ),\n          ),\n        ),\n        Container(\n          decoration: BoxDecoration(\n            color: colorScheme.surface, // White background for the section\n            borderRadius: BorderRadius.circular(15.0),\n            boxShadow: [\n              BoxShadow(\n                color: Colors.grey.withValues(alpha: 0.1),\n                spreadRadius: 1,\n                blurRadius: 5,\n                offset: const Offset(0, 3),\n              ),\n            ],\n          ),\n          child: Column(\n            children: List.generate(children.length, (index) {\n              return Column(\n                children: [\n                  children[index],\n                  if (index < children.length - 1)\n                    Divider(\n                      height: 0,\n                      thickness: 1,\n                      color: Colors.grey[200],\n                      indent: 16,\n                      endIndent: 16,\n                    ),\n                ],\n              );\n            }),\n          ),\n        ),\n      ],\n    );\n  }\n}\n\nclass _SettingsTile extends StatelessWidget {\n  final String title;\n  final String? subtitle;\n  final IconData icon;\n  final VoidCallback onTap;\n  final TextTheme textTheme;\n  final Color primaryColor;\n\n  const _SettingsTile({\n    required this.title,\n    this.subtitle,\n    required this.icon,\n    required this.onTap,\n    required this.textTheme,\n    required this.primaryColor,\n  });\n\n  @override\n  Widget build(BuildContext context) {\n    return Material(\n      color: Colors.transparent, // Make Material transparent\n      child: InkWell(\n        onTap: onTap,\n        borderRadius: BorderRadius.circular(\n          15.0,\n        ), // Apply borderRadius to InkWell\n        child: Ink(\n          // Use Ink to provide the visual surface for the splash\n          decoration: BoxDecoration(\n            // Add decoration to Ink\n            borderRadius: BorderRadius.circular(\n              15.0,\n            ), // Match the parent container's border radius\n          ),\n          child: ListTile(\n            leading: Icon(icon, color: Colors.grey[700]),\n            title: Text(\n              title,\n              style: textTheme.bodyLarge?.copyWith(color: Colors.grey[800]),\n            ),\n            subtitle:\n                subtitle != null\n                    ? Text(\n                      subtitle!,\n                      style: textTheme.bodySmall?.copyWith(\n                        color: Colors.grey[600],\n                      ),\n                    )\n                    : null,\n            trailing: Icon(\n              Icons.arrow_forward_ios,\n              color: Colors.grey[400],\n              size: 16,\n            ),\n            // onTap is handled by InkWell\n          ),\n        ),\n      ),\n    );\n  }\n}\n\nclass _SettingsToggleTile extends StatelessWidget {\n  final String title;\n  final IconData icon;\n  final bool value;\n  final ValueChanged<bool> onChanged;\n  final TextTheme textTheme;\n  final Color primaryColor;\n  final ColorScheme colorScheme;\n\n  const _SettingsToggleTile({\n    required this.title,\n    required this.icon,\n    required this.value,\n    required this.onChanged,\n    required this.textTheme,\n    required this.primaryColor,\n    required this.colorScheme,\n  });\n\n  @override\n  Widget build(BuildContext context) {\n    return Material(\n      color: Colors.white, // <-- Set a color to allow splash effect\n      borderRadius: BorderRadius.circular(15.0),\n      clipBehavior: Clip.antiAlias, // <-- Fix splash overflow\n      child: InkWell(\n        onTap: () => onChanged(!value),\n        borderRadius: BorderRadius.circular(15.0),\n        child: Ink(\n          decoration: BoxDecoration(borderRadius: BorderRadius.circular(15.0)),\n          child: SwitchListTile(\n            secondary: Icon(icon, color: Colors.grey[700]),\n            title: Text(\n              title,\n              style: textTheme.bodyLarge?.copyWith(color: Colors.grey[800]),\n            ),\n            value: value,\n            onChanged: onChanged,\n            activeColor: primaryColor,\n            activeTrackColor: primaryColor,\n            inactiveThumbColor: Colors.grey[200],\n            inactiveTrackColor: Colors.grey[100],\n            thumbColor: WidgetStateProperty.resolveWith<Color>((\n              Set<WidgetState> states,\n            ) {\n              if (states.contains(WidgetState.selected)) {\n                return Colors.white;\n              }\n              return Colors.grey[400]!;\n            }),\n          ),\n        ),\n      ),\n    );\n  }\n}\n```\n\n// File: lib\\screens\\signup_screen.dart\n```dart\nimport 'package:ai_travel_app_ui_kit/components/text_fields/auth_textfields.dart';\nimport 'package:ai_travel_app_ui_kit/screens/home_screen.dart';\nimport 'package:ai_travel_app_ui_kit/screens/login_screen.dart';\nimport 'package:ai_travel_app_ui_kit/screens/phone_input_screen.dart';\nimport 'package:flutter/material.dart';\nimport 'package:ai_travel_app_ui_kit/components/buttons/primary_text_button.dart';\nimport 'package:ai_travel_app_ui_kit/components/buttons/social_auth_button.dart';\n\nclass SignupScreen extends StatefulWidget {\n  const SignupScreen({super.key});\n\n  @override\n  State<SignupScreen> createState() => _SignupScreenState();\n}\n\nclass _SignupScreenState extends State<SignupScreen> {\n  bool _obscurePassword = true;\n  bool _obscureConfirmPassword = true;\n\n  @override\n  Widget build(BuildContext context) {\n    final textTheme = Theme.of(context).textTheme;\n    final primaryColor = Theme.of(context).primaryColor;\n    final colorScheme = Theme.of(context).colorScheme;\n\n    return Scaffold(\n      backgroundColor: colorScheme.surface,\n      appBar: AppBar(\n        backgroundColor: colorScheme.surface,\n        elevation: 0,\n        leading: IconButton(\n          icon: Icon(Icons.arrow_back_ios, color: primaryColor, size: 20),\n          onPressed: () => Navigator.of(context).pop(),\n        ),\n        title: Text(\n          'Sign Up',\n          style: textTheme.titleLarge?.copyWith(\n            fontWeight: FontWeight.bold,\n            color: Colors.grey[800],\n            fontSize: 18,\n          ),\n        ),\n        centerTitle: true,\n      ),\n      body: Padding(\n        padding: const EdgeInsets.symmetric(horizontal: 24.0),\n        child: SingleChildScrollView(\n          child: Column(\n            crossAxisAlignment: CrossAxisAlignment.start,\n            children: [\n              const SizedBox(height: 40.0),\n              Text(\n                'Create an account',\n                style: textTheme.headlineMedium?.copyWith(\n                  fontWeight: FontWeight.bold,\n                  color: Colors.grey[850],\n                ),\n              ),\n              const SizedBox(height: 8.0),\n              Text(\n                'Join us to start your travel journey.',\n                style: textTheme.bodyMedium?.copyWith(color: Colors.grey[600]),\n              ),\n              const SizedBox(height: 32.0),\n              AuthTextfields().buildTextField(\n                controller: TextEditingController(),\n                labelText: \"Full Name\",\n              ),\n              const SizedBox(height: 16.0),\n              AuthTextfields().buildTextField(\n                controller: TextEditingController(),\n                labelText: \"Email\",\n              ),\n              const SizedBox(height: 16.0),\n              AuthTextfields().buildPasswordField(\n                controller: TextEditingController(),\n              ),\n              const SizedBox(height: 16.0),\n              AuthTextfields().buildPasswordField(\n                controller: TextEditingController(),\n                labelText: \"Confirm Password\",\n              ),\n              const SizedBox(height: 24.0),\n              PrimaryTextButton(\n                text: 'Sign Up',\n                onPressed: () {\n                  Navigator.of(context).push(\n                    PageRouteBuilder(\n                      pageBuilder: (_, __, ___) => PhoneInputScreen(),\n                    ),\n                  );\n                },\n              ),\n              const SizedBox(height: 24.0),\n              Row(\n                children: [\n                  Expanded(child: Divider(color: Colors.grey[300])),\n                  Padding(\n                    padding: const EdgeInsets.symmetric(horizontal: 16.0),\n                    child: Text(\n                      'Or',\n                      style: textTheme.bodyMedium?.copyWith(\n                        color: Colors.grey[600],\n                      ),\n                    ),\n                  ),\n                  Expanded(child: Divider(color: Colors.grey[300])),\n                ],\n              ),\n              const SizedBox(height: 24.0),\n              SocialAuthButton.google(onPressed: () {}),\n              const SizedBox(height: 16.0),\n              SocialAuthButton.apple(onPressed: () {}),\n              const SizedBox(height: 16.0),\n              SocialAuthButton.facebook(onPressed: () {}),\n\n              Row(\n                mainAxisAlignment: MainAxisAlignment.center,\n                children: [\n                  Text(\n                    'Already have an account?',\n                    style: textTheme.bodyMedium?.copyWith(\n                      color: Colors.grey[700],\n                    ),\n                  ),\n                  TextButton(\n                    onPressed: () {\n                      Navigator.of(context).push(\n                        PageRouteBuilder(\n                          pageBuilder: (_, __, ___) => LoginScreen(),\n                        ),\n                      );\n                    },\n                    child: Text(\n                      'Log In',\n                      style: textTheme.bodyMedium?.copyWith(\n                        color: primaryColor,\n                        fontWeight: FontWeight.bold,\n                      ),\n                    ),\n                  ),\n                ],\n              ),\n              const SizedBox(height: 40.0),\n            ],\n          ),\n        ),\n      ),\n    );\n  }\n}\n```\n\n// File: lib\\screens\\subscription_screen.dart\n```dart\nimport 'package:flutter/gestures.dart';\nimport 'package:flutter/material.dart';\n\nclass SubscriptionScreen extends StatelessWidget {\n  const SubscriptionScreen({super.key});\n\n  @override\n  Widget build(BuildContext context) {\n    final TextTheme textTheme = Theme.of(context).textTheme;\n    final Color primaryColor = Theme.of(context).primaryColor;\n    final ColorScheme colorScheme = Theme.of(context).colorScheme;\n\n    return Scaffold(\n      backgroundColor: Colors.white, // Light grey background\n      appBar: AppBar(\n        scrolledUnderElevation: 0,\n        backgroundColor: Colors.transparent,\n        elevation: 0,\n        leading: IconButton(\n          icon: Icon(\n            Icons.arrow_back_ios,\n            color: primaryColor,\n            size: 20,\n          ), // Back arrow primary color\n          onPressed: () {\n            Navigator.of(context).pop();\n          },\n        ),\n        title: Text(\n          'Subscription',\n          style: textTheme.titleLarge?.copyWith(\n            fontWeight: FontWeight.bold,\n            color: Colors.grey[800],\n            fontSize: 18,\n          ),\n        ),\n        centerTitle: true,\n      ),\n      body: Padding(\n        padding: const EdgeInsets.symmetric(horizontal: 24.0),\n        child: Column(\n          crossAxisAlignment: CrossAxisAlignment.center,\n          children: [\n            const SizedBox(height: 40.0),\n            Container(\n              padding: const EdgeInsets.all(20.0),\n              decoration: BoxDecoration(\n                color:\n                    Colors\n                        .grey[100], // Light grey background for the icon container\n                borderRadius: BorderRadius.circular(15.0),\n              ),\n              child: Icon(\n                Icons.emoji_events_outlined, // Crown icon\n                size: 60,\n                color: primaryColor, // Crown icon primary color\n              ),\n            ),\n            const SizedBox(height: 16.0),\n            Text(\n              'AI Travel Premium',\n              style: textTheme.headlineSmall?.copyWith(\n                fontSize: 20,\n                fontWeight: FontWeight.bold,\n                color: Colors.grey[800],\n              ),\n            ),\n            const SizedBox(height: 40.0),\n            Align(\n              alignment: Alignment.centerLeft,\n              child: Text(\n                'Benefits',\n                style: textTheme.titleMedium?.copyWith(\n                  fontWeight: FontWeight.bold,\n                  color: Colors.grey[800],\n                ),\n              ),\n            ),\n            const SizedBox(height: 8.0),\n            Align(\n              alignment: Alignment.centerLeft,\n              child: Container(\n                padding: const EdgeInsets.symmetric(\n                  horizontal: 12.0,\n                  vertical: 6.0,\n                ),\n                decoration: BoxDecoration(\n                  color: Colors.grey[100],\n                  borderRadius: BorderRadius.circular(20.0),\n                ),\n                child: Text(\n                  'Members-only benefits',\n                  style: textTheme.bodySmall?.copyWith(color: Colors.grey[700]),\n                ),\n              ),\n            ),\n            const SizedBox(height: 16.0),\n            // Benefits Card\n            Container(\n              padding: const EdgeInsets.all(16.0),\n              decoration: BoxDecoration(\n                color: colorScheme.surface, // White background\n                borderRadius: BorderRadius.circular(15.0),\n                boxShadow: [\n                  BoxShadow(\n                    color: Colors.grey.withValues(alpha: 0.1),\n                    spreadRadius: 1,\n                    blurRadius: 5,\n                    offset: const Offset(0, 3),\n                  ),\n                ],\n              ),\n              child: Column(\n                crossAxisAlignment: CrossAxisAlignment.start,\n                children: [\n                  _BenefitItem(\n                    text: 'Unlimited Free Delivery',\n                    hasLink: true,\n                    linkText: 'Terms apply',\n                    onLinkTap: () {},\n                    textTheme: textTheme,\n                    primaryColor:\n                        primaryColor, // Pass primaryColor to BenefitItem\n                  ),\n                  const SizedBox(height: 8.0),\n                  _BenefitItem(\n                    text: 'Ready, Set & Drive',\n                    textTheme: textTheme,\n                    primaryColor: primaryColor,\n                  ),\n                  const SizedBox(height: 8.0),\n                  _BenefitItem(\n                    text: 'Free Shipping',\n                    textTheme: textTheme,\n                    primaryColor: primaryColor,\n                  ),\n                  const SizedBox(height: 24.0),\n                  Text(\n                    'Just \\$49 a year',\n                    style: textTheme.titleLarge?.copyWith(\n                      fontSize: 20,\n                      fontWeight: FontWeight.bold,\n                      color: Colors.grey[800],\n                    ),\n                  ),\n                  const SizedBox(height: 4.0),\n                  Text(\n                    'Pays for itself in 1.5 house cleanings.\\nBased on national Average.',\n                    style: textTheme.bodySmall?.copyWith(\n                      color: Colors.grey[600],\n                    ),\n                  ),\n                  const SizedBox(height: 24.0),\n                  SizedBox(\n                    width: double.infinity,\n                    height: 50,\n                    child: FilledButton(\n                      onPressed: () {},\n                      style: FilledButton.styleFrom(\n                        backgroundColor:\n                            primaryColor, // Unlock Benefits button primary color\n                        foregroundColor: Colors.white,\n                        shape: RoundedRectangleBorder(\n                          borderRadius: BorderRadius.circular(\n                            60,\n                          ), // Match primary text button style\n                        ),\n                        padding: const EdgeInsets.symmetric(\n                          vertical: 16,\n                          horizontal: 16,\n                        ),\n                      ),\n                      child: Text(\n                        'UNLOCK BENEFITS',\n                        style: textTheme.bodyLarge?.copyWith(\n                          fontWeight: FontWeight.bold,\n                          color: Colors.white,\n                        ),\n                      ),\n                    ),\n                  ),\n                ],\n              ),\n            ),\n            const Spacer(), // Pushes content up if screen is tall\n          ],\n        ),\n      ),\n    );\n  }\n}\n\nclass _BenefitItem extends StatelessWidget {\n  final String text;\n  final bool hasLink;\n  final String? linkText;\n  final VoidCallback? onLinkTap;\n  final TextTheme textTheme;\n  final Color primaryColor; // Added primaryColor to BenefitItem\n\n  const _BenefitItem({\n    required this.text,\n    this.hasLink = false,\n    this.linkText,\n    this.onLinkTap,\n    required this.textTheme,\n    required this.primaryColor, // Require primaryColor\n  });\n\n  @override\n  Widget build(BuildContext context) {\n    return Row(\n      crossAxisAlignment: CrossAxisAlignment.center,\n      children: [\n        Icon(\n          Icons.check_circle,\n          color: primaryColor,\n          size: 20,\n        ), // Checkmark icon primary color\n        const SizedBox(width: 12.0),\n        Expanded(\n          child: Text.rich(\n            TextSpan(\n              text: text,\n              style: textTheme.bodyLarge?.copyWith(color: Colors.grey[800]),\n              children: [\n                if (hasLink && linkText != null)\n                  TextSpan(\n                    text: ' ($linkText)',\n                    style: textTheme.bodyLarge?.copyWith(\n                      color: primaryColor, // Link color\n                      decoration: TextDecoration.underline,\n                    ),\n                    recognizer: TapGestureRecognizer()..onTap = onLinkTap,\n                  ),\n              ],\n            ),\n          ),\n        ),\n      ],\n    );\n  }\n}\n```\n\n"},{"id":null,"text":"      \n      "},{"id":null,"text":"Users selected primaryColor is: Color(0xFF7356FF) and font is GoogleFonts.plusJakartaSansTextTheme(). \n\nTo make the app pick up the colors and fonts appropriately, you can set them in the material app theme as:\n\ntheme: ThemeData(\n  primaryColor: <user primary color>,\n  colorScheme: ColorScheme.fromSeed(\n    seedColor: <user primary color>,\n    brightness: ThemeData.light().brightness,\n    onPrimary: Colors.white,\n    surface: Colors.white,\n  ),\n  textTheme: <user text theme>,\n),\n\nThis is user's choosen UI Template: Default theme for this UIKIT:\n \n  @override\n  Widget build(BuildContext context) {\n    const Color primaryColor = Color(\n      0xFF7356FF,\n    ); // Use user's chosen primary color\n    return MaterialApp(\n      debugShowCheckedModeBanner: false,\n      theme: ThemeData(\n        primaryColor: primaryColor,\n        colorScheme: ColorScheme.fromSeed(\n          seedColor: primaryColor,\n          brightness: ThemeData.light().brightness,\n          onPrimary: Colors.white,\n          surface: Colors.white,\n        ),\n        appBarTheme: const AppBarTheme(\n          backgroundColor: Colors.white,\n          elevation: 0,\n          iconTheme: IconThemeData(color: primaryColor),\n        ),\n        elevatedButtonTheme: ElevatedButtonThemeData(\n          style: ElevatedButton.styleFrom(\n            backgroundColor: primaryColor,\n            foregroundColor: Colors.white,\n          ),\n        ),\n        textButtonTheme: TextButtonThemeData(\n          style: TextButton.styleFrom(foregroundColor: primaryColor),\n        ),\n        outlinedButtonTheme: OutlinedButtonThemeData(\n          style: OutlinedButton.styleFrom(\n            foregroundColor: primaryColor,\n            side: const BorderSide(color: primaryColor)\n          ),\n        ),\n        floatingActionButtonTheme: FloatingActionButtonThemeData(\n          backgroundColor: primaryColor,\n          foregroundColor: Colors.white,\n        ),\n        filledButtonTheme: FilledButtonThemeData(\n          style: FilledButton.styleFrom(\n            backgroundColor: primaryColor,\n            foregroundColor: Colors.white,\n          ),\n        ),\n        textTheme:\n            GoogleFonts.plusJakartaSansTextTheme(), // Apply user's text theme\n      )\nmodern/lib/main.dart\nmodern/lib/screens/video_player/live_stream_engagment_options.dart\nmodern/lib/screens/search/tabbed_search_screen.dart\nmodern/lib/screens/profile_and_settings/user_profile_with_settings.dart\nmodern/lib/screens/navigation/floating_navigation_bar_demo.dart\nmodern/lib/screens/inbox/notifactions_screen.dart\nmodern/lib/screens/inbox/messages_screen.dart\nmodern/lib/screens/feed/feed_with_categories.dart\nmodern/lib/screens/faq/faq_screen.dart\nmodern/lib/screens/authentication/social_media_email_signup.dart\nmodern/lib/screens/authentication/otp_screen.dart\nmodern/lib/screens/authentication/multi_option_registration.dart\nmodern/lib/screens/authentication/login_using_number.dart\nmodern/lib/screens/authentication/email_password_login.dart\nmodern/lib/screens/audio_player/music_player.dart\nmodern/lib/screens/articles/article_screen.dart\nmodern/lib/screens/articles/article_image_highlight_screen.dart\nmodern/lib/screens/articles/article_author_detail_screen.dart\nmodern/lib/components/text_fields/search_field.dart\nmodern/lib/components/text_fields/phone_text_field.dart\nmodern/lib/components/text_fields/otp_indicator.dart\nmodern/lib/components/text_fields/auth_textfields.dart\nmodern/lib/components/search_bars/basic.dart\nmodern/lib/components/paywall/subscription_term_selection.dart\nmodern/lib/components/paywall/plan_selection.dart\nmodern/lib/components/lists/text_cart_list.dart\nmodern/lib/components/lists/radio_options_list.dart\nmodern/lib/components/lists/product_cart_list.dart\nmodern/lib/components/lists/notification_tile.dart\nmodern/lib/components/lists/message_list_item.dart\nmodern/lib/components/headers/tab_navigation_01.dart\nmodern/lib/components/headers/location_search.dart\nmodern/lib/components/headers/center_button_navbar.dart\nmodern/lib/components/headers/bottom_navigation_bar.dart\nmodern/lib/components/forms/rating_feedback.dart\nmodern/lib/components/charts/survey_result_chart.dart\nmodern/lib/components/charts/revenue_progress_chart.dart\nmodern/lib/components/charts/circular_progress.dart\nmodern/lib/components/charts/bar_vertical_fill.dart\nmodern/lib/components/charts/bar_horizontal_fill.dart\nmodern/lib/components/carousels/testimonials.dart\nmodern/lib/components/carousels/star_ratings.dart\nmodern/lib/components/carousels/profile_suggestions.dart\nmodern/lib/components/carousels/instagram_stories.dart\nmodern/lib/components/carousels/feature_cards.dart\nmodern/lib/components/carousels/background_image_cards.dart\nmodern/lib/components/cards/video_card.dart\nmodern/lib/components/cards/toggle_feature_card.dart\nmodern/lib/components/cards/social_media_postcard.dart\nmodern/lib/components/cards/order_receipt.dart\nmodern/lib/components/cards/follow_suggestion.dart\nmodern/lib/components/cards/date_picker.dart\nmodern/lib/components/cards/credit_wallet.dart\nmodern/lib/components/buttons/toggle_button.dart\nmodern/lib/components/buttons/social_auth_button.dart\nmodern/lib/components/buttons/primary_text_button.dart\nmodern/lib/components/buttons/floating_button.dart\nmodern/lib/components/buttons/custom_chip.dart\nmodern/lib/components/buttons/circular_icon_button.dart\nmodern/lib/components/appbars/custom_appbar.dart\nCopy the required components and screens directly in the user’s project in a file structure similar to template. Remember the UIKit components are designed to perfection, so don't change styling unless it explicitly is a user requirement.\n             \nAnalyze the user instructions, current screen screenshot, reference images and detail out the design requirements of the UI screen and what do we need to achieve there. \n            \nThen figure out what are widgets and screens in the UI template that we need to use to achieve the user's design requirements. If there are no direct fitting options, try to still use some existing widgets by having a plan to tweak them. Make sure the user's project matches the UI template design."},{"id":null,"text":"You can ask clients for as many template files as you need to see as many times as you want. Please proceed, all the best!"}]},{"id":null,"role":"model","parts":[{"id":null,"text":"<<<PIXEL_USER_INFORM_START>>>\nTo ensure the generated UI is pixel-perfect and aligns with the existing UIKit, I need to understand the visual style of the UIKit's input fields, specifically how a search bar with an icon and hint text is styled.\n\nCould you please provide the content of the following file?\n- `lib/components/text_fields/search_field.dart`\n- `lib/components/search_bars/basic.dart`\n- `lib/components/lists/radio_options_list.dart`\n- `lib/components/buttons/custom_chip.dart`\n<<<PIXEL_USER_INFORM_END>>>"}]},{"id":null,"role":"user","parts":[{"id":null,"text":"This is the warning generated by the programatic client.\n=======\nNo request to fetch template files was received. Please make sure you are passing the paths in the correct format:\n<<<PIXEL_VIEW_TEMPLATE_FILE_START>>>\npath of file 1\n<<<PIXEL_VIEW_TEMPLATE_FILE_END>>>\n<<<PIXEL_VIEW_TEMPLATE_FILE_START>>>\npath of file 2\n<<<PIXEL_VIEW_TEMPLATE_FILE_END>>>\n======\n\nIgnore if you didn't intend to fetch files.\n"}]},{"id":null,"role":"model","parts":[{"id":null,"text":"<<<PIXEL_FILE_PATH>>>\nlib/screens/select_country_screen.dart\n<<<PIXEL_CODE_START>>>\nimport 'package:ai_travel_app_ui_kit/components/buttons/primary_text_button.dart';\nimport 'package:flutter/material.dart';\n\nclass SelectCountryScreen extends StatefulWidget {\n  const SelectCountryScreen({super.key});\n\n  @override\n  State<SelectCountryScreen> createState() => _SelectCountryScreenState();\n}\n\nclass _SelectCountryScreenState extends State<SelectCountryScreen> {\n  String? _selectedCountryCode;\n  final TextEditingController _searchController = TextEditingController();\n  List<Map<String, String>> _filteredCountries = [];\n\n  final List<Map<String, String>> _allCountries = [\n    {'name': 'Afghanistan', 'code': 'AF', 'flag': 'https://picsum.photos/30/30?random=af'},\n    {'name': 'Albania', 'code': 'AL', 'flag': 'https://picsum.photos/30/30?random=al'},\n    {'name': 'Algeria', 'code': 'DZ', 'flag': 'https://picsum.photos/30/30?random=dz'},\n    {'name': 'Andorra', 'code': 'AD', 'flag': 'https://picsum.photos/30/30?random=ad'},\n    {'name': 'Angola', 'code': 'AO', 'flag': 'https://picsum.photos/30/30?random=ao'},\n    {'name': 'Argentina', 'code': 'AR', 'flag': 'https://picsum.photos/30/30?random=ar'},\n    {'name': 'Armenia', 'code': 'AM', 'flag': 'https://picsum.photos/30/30?random=am'},\n    {'name': 'Australia', 'code': 'AU', 'flag': 'https://picsum.photos/30/30?random=au'},\n    {'name': 'Austria', 'code': 'AT', 'flag': 'https://picsum.photos/30/30?random=at'},\n    {'name': 'Azerbaijan', 'code': 'AZ', 'flag': 'https://picsum.photos/30/30?random=az'},\n    {'name': 'Bahamas', 'code': 'BS', 'flag': 'https://picsum.photos/30/30?random=bs'},\n    {'name': 'Bahrain', 'code': 'BH', 'flag': 'https://picsum.photos/30/30?random=bh'},\n    {'name': 'Bangladesh', 'code': 'BD', 'flag': 'https://picsum.photos/30/30?random=bd'},\n    {'name': 'Barbados', 'code': 'BB', 'flag': 'https://picsum.photos/30/30?random=bb'},\n    {'name': 'Belarus', 'code': 'BY', 'flag': 'https://picsum.photos/30/30?random=by'},\n    {'name': 'Belgium', 'code': 'BE', 'flag': 'https://picsum.photos/30/30?random=be'},\n    {'name': 'Belize', 'code': 'BZ', 'flag': 'https://picsum.photos/30/30?random=bz'},\n    {'name': 'Benin', 'code': 'BJ', 'flag': 'https://picsum.photos/30/30?random=bj'},\n  ];\n\n  @override\n  void initState() {\n    super.initState();\n    _filteredCountries = _allCountries;\n    _searchController.addListener(_filterCountries);\n  }\n\n  @override\n  void dispose() {\n    _searchController.removeListener(_filterCountries);\n    _searchController.dispose();\n    super.dispose();\n  }\n\n  void _filterCountries() {\n    final query = _searchController.text.toLowerCase();\n    setState(() {\n      _filteredCountries = _allCountries.where((country) {\n        return country['name']!.toLowerCase().contains(query) ||\n               country['code']!.toLowerCase().contains(query);\n      }).toList();\n    });\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    final TextTheme textTheme = Theme.of(context).textTheme;\n    final Color primaryColor = Theme.of(context).primaryColor;\n    final ColorScheme colorScheme = Theme.of(context).colorScheme;\n\n    return Scaffold(\n      backgroundColor: Colors.white,\n      appBar: AppBar(\n        scrolledUnderElevation: 0,\n        backgroundColor: Colors.transparent,\n        elevation: 0,\n        leading: IconButton(\n          icon: Icon(\n            Icons.arrow_back,\n            color: Colors.grey[800], // Dark grey for back arrow\n            size: 24, // Consistent icon size\n          ),\n          onPressed: () {\n            Navigator.of(context).pop();\n          },\n        ),\n        title: Text(\n          'Select Your Country',\n          style: textTheme.titleLarge?.copyWith(\n            fontWeight: FontWeight.bold,\n            color: Colors.grey[800], // Dark grey for title\n            fontSize: 18,\n          ),\n        ),\n        centerTitle: true,\n      ),\n      body: Column(\n        children: [\n          Padding(\n            padding: const EdgeInsets.symmetric(horizontal: 24.0, vertical: 16.0),\n            child: TextField(\n              controller: _searchController,\n              decoration: InputDecoration(\n                hintText: 'Search',\n                hintStyle: textTheme.bodyLarge?.copyWith(\n                  color: Colors.grey[500],\n                ),\n                filled: true,\n                fillColor: Colors.grey[100], // Light grey background\n                prefixIcon: Padding(\n                  padding: const EdgeInsets.only(left: 16.0, right: 8.0),\n                  child: Icon(Icons.search, color: Colors.grey[600]), // Grey search icon\n                ),\n                border: OutlineInputBorder(\n                  borderRadius: BorderRadius.circular(15.0), // More rounded corners\n                  borderSide: BorderSide.none, // No border line\n                ),\n                contentPadding: const EdgeInsets.symmetric(vertical: 16.0),\n              ),\n              style: textTheme.bodyLarge?.copyWith(color: Colors.grey[850]),\n            ),\n          ),\n          Expanded(\n            child: ListView.builder(\n              padding: const EdgeInsets.symmetric(horizontal: 24.0),\n              itemCount: _filteredCountries.length,\n              itemBuilder: (context, index) {\n                final country = _filteredCountries[index];\n                final isSelected = _selectedCountryCode == country['code'];\n                return Padding(\n                  padding: const EdgeInsets.only(bottom: 8.0),\n                  child: _CountryListItem(\n                    countryName: country['name']!,\n                    countryCode: country['code']!,\n                    flagUrl: country['flag']!,\n                    isSelected: isSelected,\n                    onTap: () {\n                      setState(() {\n                        _selectedCountryCode = country['code'];\n                      });\n                    },\n                    textTheme: textTheme,\n                    colorScheme: colorScheme,\n                    primaryColor: primaryColor,\n                  ),\n                );\n              },\n            ),\n          ),\n          Padding(\n            padding: const EdgeInsets.symmetric(horizontal: 24.0, vertical: 24.0),\n            child: PrimaryTextButton(\n              text: 'Continue',\n              onPressed: _selectedCountryCode != null\n                  ? () {\n                      // Handle continue action, e.g., navigate to next screen\n                      print('Selected country: $_selectedCountryCode');\n                    }\n                  : null, // Disable button if no country is selected\n            ),\n          ),\n        ],\n      ),\n    );\n  }\n}\n\nclass _CountryListItem extends StatelessWidget {\n  final String countryName;\n  final String countryCode;\n  final String flagUrl;\n  final bool isSelected;\n  final VoidCallback onTap;\n  final TextTheme textTheme;\n  final ColorScheme colorScheme;\n  final Color primaryColor;\n\n  const _CountryListItem({\n    required this.countryName,\n    required this.countryCode,\n    required this.flagUrl,\n    required this.isSelected,\n    required this.onTap,\n    required this.textTheme,\n    required this.colorScheme,\n    required this.primaryColor,\n  });\n\n  @override\n  Widget build(BuildContext context) {\n    return Material(\n      color: Colors.transparent, // Make Material transparent\n      child: Ink(\n        decoration: BoxDecoration(\n          color: colorScheme.surface, // White background\n          borderRadius: BorderRadius.circular(15.0),\n          border: Border.all(\n            width: isSelected ? 1.5 : 1.0,\n            color: isSelected ? primaryColor : Colors.grey[200]!, // Border color based on selection\n          ),\n          boxShadow: [\n            BoxShadow(\n              color: Colors.grey.withOpacity(0.05),\n              spreadRadius: 1,\n              blurRadius: 5,\n              offset: const Offset(0, 3),\n            ),\n          ],\n        ),\n        child: InkWell(\n          onTap: onTap,\n          borderRadius: BorderRadius.circular(15.0),\n          hoverColor: primaryColor.withOpacity(0.06),\n          splashColor: primaryColor.withOpacity(0.12),\n          child: Padding(\n            padding: const EdgeInsets.symmetric(horizontal: 16.0, vertical: 12.0),\n            child: Row(\n              children: [\n                ClipRRect(\n                  borderRadius: BorderRadius.circular(8.0), // Rounded corners for flag\n                  child: Image.network(\n                    flagUrl,\n                    width: 30, // Fixed width for flag\n                    height: 20, // Fixed height for flag\n                    fit: BoxFit.cover,\n                    errorBuilder: (context, error, stackTrace) => Container(\n                      width: 30,\n                      height: 20,\n                      color: Colors.grey[300],\n                      child: Icon(Icons.flag_outlined, size: 16, color: Colors.grey[600]),\n                    ),\n                  ),\n                ),\n                const SizedBox(width: 12.0),\n                Text(\n                  countryCode,\n                  style: textTheme.bodyMedium?.copyWith(\n                    color: Colors.grey[600],\n                    fontWeight: FontWeight.w500,\n                  ),\n                ),\n                const SizedBox(width: 8.0),\n                Expanded(\n                  child: Text(\n                    countryName,\n                    style: textTheme.bodyLarge?.copyWith(\n                      color: Colors.grey[800],\n                      fontWeight: FontWeight.w600,\n                    ),\n                    maxLines: 1,\n                    overflow: TextOverflow.ellipsis,\n                  ),\n                ),\n                const SizedBox(width: 16.0),\n                // Custom radio button style\n                Container(\n                  width: 20,\n                  height: 20,\n                  decoration: BoxDecoration(\n                    shape: BoxShape.circle,\n                    color: isSelected ? primaryColor : Colors.transparent, // Fill with primary color if selected\n                    border: Border.all(\n                      color: isSelected ? primaryColor : Colors.grey[400]!, // Primary color border if selected, else grey\n                      width: 2.0,\n                    ),\n                  ),\n                  child: isSelected\n                      ? Icon(\n                          Icons.circle, // Small circle inside when selected\n                          color: Colors.white, // White circle\n                          size: 10,\n                        )\n                      : null,\n                ),\n              ],\n            ),\n          ),\n        ),\n      ),\n    );\n  }\n}\n<<<PIXEL_CODE_END>>>\n\n<<<PIXEL_FILE_PATH>>>\nlib/main.dart\n<<<PIXEL_CODE_START>>>\nimport 'package:ai_travel_app_ui_kit/screens/ai_chat_section.dart';\nimport 'package:ai_travel_app_ui_kit/screens/app_ai_screen.dart';\nimport 'package:ai_travel_app_ui_kit/screens/book_hotel_screen.dart';\nimport 'package:ai_travel_app_ui_kit/screens/date_timeline_screen.dart';\nimport 'package:ai_travel_app_ui_kit/screens/explore_hotels_screen.dart';\nimport 'package:ai_travel_app_ui_kit/screens/hotel_details_screen.dart';\nimport 'package:ai_travel_app_ui_kit/screens/hotel_filter_screen.dart';\nimport 'package:ai_travel_app_ui_kit/screens/onboarding_screen.dart';\nimport 'package:ai_travel_app_ui_kit/screens/order_status_screen.dart';\nimport 'package:ai_travel_app_ui_kit/screens/phone_input_screen.dart';\nimport 'package:ai_travel_app_ui_kit/screens/profile_screen.dart';\nimport 'package:ai_travel_app_ui_kit/screens/reservation_details_screen.dart';\nimport 'package:ai_travel_app_ui_kit/screens/settings_screen.dart';\nimport 'package:ai_travel_app_ui_kit/screens/subscription_screen.dart';\nimport 'package:flutter/material.dart';\nimport 'package:pixel_preview/pixel_app/pixel_group.dart';\nimport 'package:pixel_preview/pixel_preview.dart';\nimport 'package:google_fonts/google_fonts.dart'; // Import google_fonts\n\nimport 'package:ai_travel_app_ui_kit/screens/home_screen.dart'; // Import the new home screen\nimport 'package:ai_travel_app_ui_kit/screens/booking_pending_screen.dart'; // Import the new booking pending screen\nimport 'package:ai_travel_app_ui_kit/screens/ai_chat_screen2.dart'; // Import the new AI chat screen 2\nimport 'package:ai_travel_app_ui_kit/screens/login_screen.dart'; // Import login screen\nimport 'package:ai_travel_app_ui_kit/screens/signup_screen.dart'; // Import signup screen\nimport 'package:ai_travel_app_ui_kit/screens/otp_screen.dart';\nimport 'package:pixel_preview/pixel_thumbnail/pixel_thumbnail.dart'; // Import OTP screen\nimport 'package:ai_travel_app_ui_kit/screens/select_country_screen.dart'; // Import the new SelectCountryScreen\n\nvoid main() {\n  runApp(const MyApp());\n}\n\nclass MyApp extends StatelessWidget {\n  const MyApp({super.key});\n\n  @override\n  Widget build(BuildContext context) {\n    const Color primaryColor = Color(0xFF7356FF); // User's chosen primary color\n    return MaterialApp(\n      debugShowCheckedModeBanner: false,\n      title: 'Starter App', // Updated title\n      theme: ThemeData(\n        primaryColor: primaryColor,\n        colorScheme: ColorScheme.fromSeed(\n          seedColor: primaryColor,\n          brightness: ThemeData.light().brightness,\n          onPrimary: Colors.white,\n          surface: Colors.white,\n        ),\n        appBarTheme: const AppBarTheme(\n          backgroundColor: Colors.white,\n          elevation: 0,\n          iconTheme: IconThemeData(color: primaryColor),\n        ),\n        elevatedButtonTheme: ElevatedButtonThemeData(\n          style: ElevatedButton.styleFrom(\n            backgroundColor: primaryColor,\n            foregroundColor: Colors.white,\n          ),\n        ),\n        textButtonTheme: TextButtonThemeData(\n          style: TextButton.styleFrom(foregroundColor: primaryColor),\n        ),\n        outlinedButtonTheme: OutlinedButtonThemeData(\n          style: OutlinedButton.styleFrom(\n            foregroundColor: primaryColor,\n            side: const BorderSide(color: primaryColor),\n          ),\n        ),\n        floatingActionButtonTheme: FloatingActionButtonThemeData(\n          backgroundColor: primaryColor,\n          foregroundColor: Colors.white,\n        ),\n        filledButtonTheme: FilledButtonThemeData(\n          style: FilledButton.styleFrom(\n            backgroundColor: primaryColor,\n            foregroundColor: Colors.white,\n          ),\n        ),\n        textTheme:\n            GoogleFonts.plusJakartaSansTextTheme(), // Apply user's text theme\n      ),\n      home:\n          false\n              ? PixelThumbnail(\n                screens: [\n                  PixelPreview(\n                    presets: ScreenPresets(),\n                    enabled: true,\n                    child: const HotelDetailsScreen(),\n                  ),\n\n                  PixelPreview(\n                    presets: ScreenPresets(),\n                    enabled: true,\n                    child: const ReservationDetailsScreen(),\n                  ),\n                  PixelPreview(\n                    presets: ScreenPresets(),\n                    enabled: true,\n                    child: const AIChatSection(),\n                  ),\n                  PixelPreview(\n                    presets: ScreenPresets(),\n                    enabled: true,\n                    child: const HomeScreen(),\n                  ),\n\n                  PixelPreview(\n                    presets: ScreenPresets(),\n                    enabled: true,\n                    child: const HotelFilterScreen(),\n                  ),\n                ],\n              )\n              : PixelApp(\n                iFrameMode: true,\n                groups: [\n                  PixelGroup(\n                    title: 'Screens',\n                    children: [\n                      PixelPreview(\n                        presets: ScreenPresets(),\n                        enabled: true,\n                        child: const SelectCountryScreen(), // Set as the initial screen\n                      ),\n                      PixelPreview(\n                        presets: ScreenPresets(),\n                        enabled: true,\n                        child: const OnboardingScreen(),\n                      ),\n                      PixelPreview(\n                        presets: ScreenPresets(),\n                        enabled: true,\n                        child: const LoginScreen(),\n                      ),\n                      PixelPreview(\n                        presets: ScreenPresets(),\n                        enabled: true,\n                        child: const SignupScreen(),\n                      ),\n                      PixelPreview(\n                        presets: ScreenPresets(),\n                        enabled: true,\n                        child: const PhoneInputScreen(),\n                      ),\n                      PixelPreview(\n                        presets: ScreenPresets(),\n                        enabled: true,\n                        child: const OtpScreen(),\n                      ),\n                      PixelPreview(\n                        presets: ScreenPresets(),\n                        enabled: true,\n                        child: const HomeScreen(),\n                      ),\n\n                      PixelPreview(\n                        presets: ScreenPresets(),\n                        enabled: true,\n                        child: const AIChatSection(),\n                      ),\n\n                      PixelPreview(\n                        presets: ScreenPresets(),\n                        enabled: true,\n                        child: const AIChatScreen2(),\n                      ),\n                      PixelPreview(\n                        presets: ScreenPresets(),\n                        enabled: true,\n                        child: const AppAIScreen(),\n                      ),\n                      PixelPreview(\n                        presets: ScreenPresets(),\n                        enabled: true,\n                        child: const BookHotelScreen(),\n                      ),\n                      PixelPreview(\n                        presets: ScreenPresets(),\n                        enabled: true,\n                        child: const DateTimelineScreen(),\n                      ),\n                      PixelPreview(\n                        presets: ScreenPresets(),\n                        enabled: true,\n                        child: const ExploreHotelsScreen(),\n                      ),\n                      PixelPreview(\n                        presets: ScreenPresets(),\n                        enabled: true,\n                        child: const HotelDetailsScreen(),\n                      ),\n                      PixelPreview(\n                        presets: ScreenPresets(),\n                        enabled: true,\n                        child: const HotelFilterScreen(),\n                      ),\n\n                      PixelPreview(\n                        presets: ScreenPresets(),\n                        enabled: true,\n                        child: const OrderStatusScreen(),\n                      ),\n\n                      PixelPreview(\n                        presets: ScreenPresets(),\n                        enabled: true,\n                        child: const ReservationDetailsScreen(),\n                      ),\n                      PixelPreview(\n                        presets: ScreenPresets(),\n                        enabled: true,\n                        child: const BookingPendingScreen(),\n                      ),\n                      PixelPreview(\n                        presets: ScreenPresets(),\n                        enabled: true,\n                        child: const ProfileScreen(),\n                      ),\n                      PixelPreview(\n                        presets: ScreenPresets(),\n                        enabled: true,\n                        child: const SettingsScreen(),\n                      ),\n                      PixelPreview(\n                        presets: ScreenPresets(),\n                        enabled: true,\n                        child: const SubscriptionScreen(),\n                      ),\n                    ],\n                  ),\n                ],\n              ),\n    );\n  }\n}\n<<<PIXEL_CODE_END>>>"}]}]